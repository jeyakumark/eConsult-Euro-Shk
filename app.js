(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process,Buffer){
var fabric=fabric||{version:"1.4.13"};"undefined"!=typeof exports&&(exports.fabric=fabric),"undefined"!=typeof document&&"undefined"!=typeof window?(fabric.document=document,fabric.window=window):(fabric.document=require("jsdom").jsdom("<!DOCTYPE html><html><head></head><body></body></html>"),fabric.window=fabric.document.createWindow?fabric.document.createWindow():fabric.document.parentWindow),fabric.isTouchSupported="ontouchstart"in fabric.document.documentElement,fabric.isLikelyNode="undefined"!=typeof Buffer&&"undefined"==typeof window,fabric.SHARED_ATTRIBUTES=["display","transform","fill","fill-opacity","fill-rule","opacity","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width"],fabric.DPI=96,fabric.reNum="(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)";var Cufon=function(){function t(t){var e=this.face=t.face;this.glyphs=t.glyphs,this.w=t.w,this.baseSize=parseInt(e["units-per-em"],10),this.family=e["font-family"].toLowerCase(),this.weight=e["font-weight"],this.style=e["font-style"]||"normal",this.viewBox=function(){var t=e.bbox.split(/\s+/),i={minX:parseInt(t[0],10),minY:parseInt(t[1],10),maxX:parseInt(t[2],10),maxY:parseInt(t[3],10)};return i.width=i.maxX-i.minX,i.height=i.maxY-i.minY,i.toString=function(){return[this.minX,this.minY,this.width,this.height].join(" ")},i}(),this.ascent=-parseInt(e.ascent,10),this.descent=-parseInt(e.descent,10),this.height=-this.ascent+this.descent}function e(){var t={},e={oblique:"italic",italic:"oblique"};this.add=function(e){(t[e.style]||(t[e.style]={}))[e.weight]=e},this.get=function(i,r){var n=t[i]||t[e[i]]||t.normal||t.italic||t.oblique;if(!n)return null;if(r={normal:400,bold:700}[r]||parseInt(r,10),n[r])return n[r];var s,o,a={1:1,99:0}[r%100],h=[];void 0===a&&(a=r>400),500==r&&(r=400);for(var c in n)c=parseInt(c,10),(!s||s>c)&&(s=c),(!o||c>o)&&(o=c),h.push(c);return s>r&&(r=s),r>o&&(r=o),h.sort(function(t,e){return(a?t>r&&e>r?e>t:t>e:r>t&&r>e?t>e:e>t)?-1:1}),n[h[0]]}}function i(){function t(t,e){return t.contains?t.contains(e):16&t.compareDocumentPosition(e)}function e(e){var i=e.relatedTarget;i&&!t(this,i)&&r(this)}function i(){r(this)}function r(t){setTimeout(function(){d.replace(t,m.get(t).options,!0)},10)}this.attach=function(t){void 0===t.onmouseenter?(s(t,"mouseover",e),s(t,"mouseout",e)):(s(t,"mouseenter",i),s(t,"mouseleave",i))}}function r(){function t(t){return t.cufid||(t.cufid=++i)}var e={},i=0;this.get=function(i){var r=t(i);return e[r]||(e[r]={})}}function n(t){var e={},i={};this.get=function(i){return void 0!=e[i]?e[i]:t[i]},this.getSize=function(t,e){return i[t]||(i[t]=new p.Size(this.get(t),e))},this.extend=function(t){for(var i in t)e[i]=t[i];return this}}function s(t,e,i){t.addEventListener?t.addEventListener(e,i,!1):t.attachEvent&&t.attachEvent("on"+e,function(){return i.call(t,fabric.window.event)})}function o(t,e){var i=m.get(t);return i.options?t:(e.hover&&e.hoverables[t.nodeName.toLowerCase()]&&y.attach(t),i.options=e,t)}function a(t){var e={};return function(i){return e.hasOwnProperty(i)||(e[i]=t.apply(null,arguments)),e[i]}}function h(t,e){e||(e=p.getStyle(t));for(var i,r=p.quotedList(e.get("fontFamily").toLowerCase()),n=0,s=r.length;s>n;++n)if(i=r[n],_[i])return _[i].get(e.get("fontStyle"),e.get("fontWeight"));return null}function c(t){return fabric.document.getElementsByTagName(t)}function l(){for(var t,e={},i=0,r=arguments.length;r>i;++i)for(t in arguments[i])e[t]=arguments[i][t];return e}function u(t,e,i,r,n,s){var o=r.separate;if("none"==o)return x[r.engine].apply(null,arguments);var a,h=fabric.document.createDocumentFragment(),c=e.split(S[o]),l="words"==o;l&&v&&(/^\s/.test(e)&&c.unshift(""),/\s$/.test(e)&&c.push(""));for(var u=0,f=c.length;f>u;++u)a=x[r.engine](t,l?p.textAlign(c[u],i,u,f):c[u],i,r,n,s,f-1>u),a&&h.appendChild(a);return h}function f(t,e){for(var i,r,n,s,a=o(t,e).firstChild;a;a=n){if(n=a.nextSibling,s=!1,1==a.nodeType){if(!a.firstChild)continue;if(!/cufon/.test(a.className)){arguments.callee(a,e);continue}s=!0}if(r||(r=p.getStyle(t).extend(e)),i||(i=h(t,r)),i)if(s)x[e.engine](i,null,r,e,a,t);else{var c=a.data;if("undefined"!=typeof G_vmlCanvasManager&&(c=c.replace(/\r/g,"\n")),""!==c){var l=u(i,c,r,e,a,t);l?a.parentNode.replaceChild(l,a):a.parentNode.removeChild(a)}}}}var d=function(){return d.replace.apply(null,arguments)},g=d.DOM={ready:function(){var t=!1,e={loaded:1,complete:1},i=[],r=function(){if(!t){t=!0;for(var e;e=i.shift();e());}};return fabric.document.addEventListener&&(fabric.document.addEventListener("DOMContentLoaded",r,!1),fabric.window.addEventListener("pageshow",r,!1)),!fabric.window.opera&&fabric.document.readyState&&function(){e[fabric.document.readyState]?r():setTimeout(arguments.callee,10)}(),fabric.document.readyState&&fabric.document.createStyleSheet&&function(){try{fabric.document.body.doScroll("left"),r()}catch(t){setTimeout(arguments.callee,1)}}(),s(fabric.window,"load",r),function(e){arguments.length?t?e():i.push(e):r()}}()},p=d.CSS={Size:function(t,e){this.value=parseFloat(t),this.unit=String(t).match(/[a-z%]*$/)[0]||"px",this.convert=function(t){return t/e*this.value},this.convertFrom=function(t){return t/this.value*e},this.toString=function(){return this.value+this.unit}},getStyle:function(t){return new n(t.style)},quotedList:a(function(t){for(var e,i=[],r=/\s*((["'])([\s\S]*?[^\\])\2|[^,]+)\s*/g;e=r.exec(t);)i.push(e[3]||e[1]);return i}),ready:function(){var t=!1,e=[],i=function(){t=!0;for(var i;i=e.shift();i());},r=Object.prototype.propertyIsEnumerable?c("style"):{length:0},n=c("link");return g.ready(function(){for(var t,e=0,s=0,o=n.length;t=n[s],o>s;++s)t.disabled||"stylesheet"!=t.rel.toLowerCase()||++e;fabric.document.styleSheets.length>=r.length+e?i():setTimeout(arguments.callee,10)}),function(i){t?i():e.push(i)}}(),supports:function(t,e){var i=fabric.document.createElement("span").style;return void 0===i[t]?!1:(i[t]=e,i[t]===e)},textAlign:function(t,e,i,r){return"right"==e.get("textAlign")?i>0&&(t=" "+t):r-1>i&&(t+=" "),t},textDecoration:function(t,e){e||(e=this.getStyle(t));for(var i={underline:null,overline:null,"line-through":null},r=t;r.parentNode&&1==r.parentNode.nodeType;){var n=!0;for(var s in i)i[s]||(-1!=e.get("textDecoration").indexOf(s)&&(i[s]=e.get("color")),n=!1);if(n)break;e=this.getStyle(r=r.parentNode)}return i},textShadow:a(function(t){if("none"==t)return null;for(var e,i=[],r={},n=0,s=/(#[a-f0-9]+|[a-z]+\(.*?\)|[a-z]+)|(-?[\d.]+[a-z%]*)|,/gi;e=s.exec(t);)","==e[0]?(i.push(r),r={},n=0):e[1]?r.color=e[1]:r[["offX","offY","blur"][n++]]=e[2];return i.push(r),i}),color:a(function(t){var e={};return e.color=t.replace(/^rgba\((.*?),\s*([\d.]+)\)/,function(t,i,r){return e.opacity=parseFloat(r),"rgb("+i+")"}),e}),textTransform:function(t,e){return t[{uppercase:"toUpperCase",lowercase:"toLowerCase"}[e.get("textTransform")]||"toString"]()}},v=0==" ".split(/\s+/).length,m=new r,y=new i,b=[],x={},_={},C={engine:null,hover:!1,hoverables:{a:!0},printable:!0,selector:fabric.window.Sizzle||fabric.window.jQuery&&function(t){return jQuery(t)}||fabric.window.dojo&&dojo.query||fabric.window.$$&&function(t){return $$(t)}||fabric.window.$&&function(t){return $(t)}||fabric.document.querySelectorAll&&function(t){return fabric.document.querySelectorAll(t)}||c,separate:"words",textShadow:"none"},S={words:/\s+/,characters:""};return d.now=function(){return g.ready(),d},d.refresh=function(){for(var t=b.splice(0,b.length),e=0,i=t.length;i>e;++e)d.replace.apply(null,t[e]);return d},d.registerEngine=function(t,e){return e?(x[t]=e,d.set("engine",t)):d},d.registerFont=function(i){var r=new t(i),n=r.family;return _[n]||(_[n]=new e),_[n].add(r),d.set("fontFamily",'"'+n+'"')},d.replace=function(t,e,i){return e=l(C,e),e.engine?("string"==typeof e.textShadow&&e.textShadow&&(e.textShadow=p.textShadow(e.textShadow)),i||b.push(arguments),(t.nodeType||"string"==typeof t)&&(t=[t]),p.ready(function(){for(var i=0,r=t.length;r>i;++i){var n=t[i];"string"==typeof n?d.replace(e.selector(n),e,!0):f(n,e)}}),d):d},d.replaceElement=function(t,e){return e=l(C,e),"string"==typeof e.textShadow&&e.textShadow&&(e.textShadow=p.textShadow(e.textShadow)),f(t,e)},d.engines=x,d.fonts=_,d.getOptions=function(){return l(C)},d.set=function(t,e){return C[t]=e,d},d}();if(Cufon.registerEngine("canvas",function(){function t(t,e){var i,r=0,n=0,s=[],o=/([mrvxe])([^a-z]*)/g;t:for(var a=0;i=o.exec(t);++a){var h=i[2].split(",");switch(i[1]){case"v":s[a]={m:"bezierCurveTo",a:[r+~~h[0],n+~~h[1],r+~~h[2],n+~~h[3],r+=~~h[4],n+=~~h[5]]};break;case"r":s[a]={m:"lineTo",a:[r+=~~h[0],n+=~~h[1]]};break;case"m":s[a]={m:"moveTo",a:[r=~~h[0],n=~~h[1]]};break;case"x":s[a]={m:"closePath",a:[]};break;case"e":break t}e[s[a].m].apply(e,s[a].a)}return s}function e(t,e){for(var i=0,r=t.length;r>i;++i){var n=t[i];e[n.m].apply(e,n.a)}}var i=Cufon.CSS.supports("display","inline-block"),r=!i&&("BackCompat"==fabric.document.compatMode||/frameset|transitional/i.test(fabric.document.doctype.publicId)),n=fabric.document.createElement("style");n.type="text/css";var s=fabric.document.createTextNode(".cufon-canvas{text-indent:0}@media screen,projection{.cufon-canvas{display:inline;display:inline-block;position:relative;vertical-align:middle"+(r?"":";font-size:1px;line-height:1px")+"}.cufon-canvas .cufon-alt{display:-moz-inline-box;display:inline-block;width:0;height:0;overflow:hidden}"+(i?".cufon-canvas canvas{position:relative}":".cufon-canvas canvas{position:absolute}")+"}@media print{.cufon-canvas{padding:0 !important}.cufon-canvas canvas{display:none}.cufon-canvas .cufon-alt{display:inline}}");try{n.appendChild(s)}catch(o){n.setAttribute("type","text/css"),n.styleSheet.cssText=s.data}return fabric.document.getElementsByTagName("head")[0].appendChild(n),function(r,n,s,o,a){function h(){H.save();var t=0,e=0,i=[{left:0}];o.backgroundColor&&(H.save(),H.fillStyle=o.backgroundColor,H.translate(0,r.ascent),H.fillRect(0,0,T+10,(-r.ascent+r.descent)*P),H.restore()),"right"===o.textAlign?(H.translate(M[e],0),i[0].left=M[e]*U):"center"===o.textAlign&&(H.translate(M[e]/2,0),i[0].left=M[e]/2*U);for(var n=0,s=O.length;s>n;++n)if("\n"!==O[n]){var a=r.glyphs[O[n]]||r.missingGlyph;if(a){var h=Number(a.w||r.w)+d;o.textBackgroundColor&&(H.save(),H.fillStyle=o.textBackgroundColor,H.translate(0,r.ascent),H.fillRect(0,0,h+10,-r.ascent+r.descent),H.restore()),H.translate(h,0),t+=h,n==s-1&&(i[i.length-1].width=t*U,i[i.length-1].height=(-r.ascent+r.descent)*U)}}else{e++;var c=-r.ascent-r.ascent/5*o.lineHeight,l=i[i.length-1],u={left:0};l.width=t*U,l.height=(-r.ascent+r.descent)*U,"right"===o.textAlign?(H.translate(-T,c),H.translate(M[e],0),u.left=M[e]*U):"center"===o.textAlign?(H.translate(-t-M[e-1]/2,c),H.translate(M[e]/2,0),u.left=M[e]/2*U):H.translate(-t,c),i.push(u),t=0}H.restore(),Cufon.textOptions.boundaries=i}function c(i){H.fillStyle=i||Cufon.textOptions.color||s.get("color");var n=0,a=0;"right"===o.textAlign?H.translate(M[a],0):"center"===o.textAlign&&H.translate(M[a]/2,0);for(var h=0,c=O.length;c>h;++h)if("\n"!==O[h]){var l=r.glyphs[O[h]]||r.missingGlyph;if(l){var u=Number(l.w||r.w)+d;q&&(H.save(),H.strokeStyle=H.fillStyle,H.lineWidth+=H.lineWidth,H.beginPath(),q.underline&&(H.moveTo(0,-r.face["underline-position"]+.5),H.lineTo(u,-r.face["underline-position"]+.5)),q.overline&&(H.moveTo(0,r.ascent+.5),H.lineTo(u,r.ascent+.5)),q["line-through"]&&(H.moveTo(0,-r.descent+.5),H.lineTo(u,-r.descent+.5)),H.stroke(),H.restore()),K&&(H.save(),H.transform(1,0,-.25,1,0,0)),H.beginPath(),l.d&&(l.code?e(l.code,H):l.code=t("m"+l.d,H)),H.fill(),o.strokeStyle&&(H.closePath(),H.save(),H.lineWidth=o.strokeWidth,H.strokeStyle=o.strokeStyle,H.stroke(),H.restore()),K&&H.restore(),H.translate(u,0),n+=u}}else{a++;var f=-r.ascent-r.ascent/5*o.lineHeight;"right"===o.textAlign?(H.translate(-T,f),H.translate(M[a],0)):"center"===o.textAlign?(H.translate(-n-M[a-1]/2,f),H.translate(M[a]/2,0)):H.translate(-n,f),n=0}}var l=null===n,u=r.viewBox,f=s.getSize("fontSize",r.baseSize),d=s.get("letterSpacing");d="normal"==d?0:f.convertFrom(parseInt(d,10));var g=0,p=0,v=0,m=0,y=o.textShadow,b=[];if(Cufon.textOptions.shadowOffsets=[],Cufon.textOptions.shadows=null,y){Cufon.textOptions.shadows=y;for(var x=0,_=y.length;_>x;++x){var C=y[x],S=f.convertFrom(parseFloat(C.offX)),w=f.convertFrom(parseFloat(C.offY));b[x]=[S,w]}}for(var O=Cufon.CSS.textTransform(l?a.alt:n,s).split(""),T=0,E=null,k=0,P=1,j=[],x=0,_=O.length;_>x;++x)if("\n"!==O[x]){var A=r.glyphs[O[x]]||r.missingGlyph;A&&(T+=E=Number(A.w||r.w)+d)}else P++,T>k&&(k=T),j.push(T),T=0;j.push(T),T=Math.max(k,T);for(var M=[],x=j.length;x--;)M[x]=T-j[x];if(null===E)return null;p+=u.width-E,m+=u.minX;var D,L;if(l)D=a,L=a.firstChild;else if(D=fabric.document.createElement("span"),D.className="cufon cufon-canvas",D.alt=n,L=fabric.document.createElement("canvas"),D.appendChild(L),o.printable){var I=fabric.document.createElement("span");I.className="cufon-alt",I.appendChild(fabric.document.createTextNode(n)),D.appendChild(I)}var F=D.style,X=L.style||{},B=f.convert(u.height-g+v),G=Math.ceil(B),R=G/B;L.width=Math.ceil(f.convert(T+p-m)*R),L.height=G,g+=u.minY,X.top=Math.round(f.convert(g-r.ascent))+"px",X.left=Math.round(f.convert(m))+"px";var Y=Math.ceil(f.convert(T*R)),W=Y+"px",z=f.convert(r.height),N=(o.lineHeight-1)*f.convert(-r.ascent/5)*(P-1);Cufon.textOptions.width=Y,Cufon.textOptions.height=z*P+N,Cufon.textOptions.lines=P,Cufon.textOptions.totalLineHeight=N,i?(F.width=W,F.height=z+"px"):(F.paddingLeft=W,F.paddingBottom=z-1+"px");var H=Cufon.textOptions.context||L.getContext("2d"),U=G/u.height;Cufon.textOptions.fontAscent=r.ascent*U,Cufon.textOptions.boundaries=null;for(var V=Cufon.textOptions.shadowOffsets,x=b.length;x--;)V[x]=[b[x][0]*U,b[x][1]*U];H.save(),H.scale(U,U),H.translate(-m-1/U*L.width/2+(Cufon.fonts[r.family].offsetLeft||0),-g-Cufon.textOptions.height/U/2+(Cufon.fonts[r.family].offsetTop||0)),H.lineWidth=r.face["underline-thickness"],H.save();var q=Cufon.getTextDecoration(o),K="italic"===o.fontStyle;if(H.save(),h(),y)for(var x=0,_=y.length;_>x;++x){var C=y[x];H.save(),H.translate.apply(H,b[x]),c(C.color),H.restore()}return c(),H.restore(),H.restore(),H.restore(),D}}()),Cufon.registerEngine("vml",function(){function t(t,i){return e(t,/(?:em|ex|%)$/i.test(i)?"1em":i)}function e(t,e){if(/px$/i.test(e))return parseFloat(e);var i=t.style.left,r=t.runtimeStyle.left;t.runtimeStyle.left=t.currentStyle.left,t.style.left=e;var n=t.style.pixelLeft;return t.style.left=i,t.runtimeStyle.left=r,n}if(fabric.document.namespaces){var i=fabric.document.createElement("canvas");if(!(i&&i.getContext&&i.getContext.apply)){null==fabric.document.namespaces.cvml&&fabric.document.namespaces.add("cvml","urn:schemas-microsoft-com:vml");var r=fabric.document.createElement("cvml:shape");if(r.style.behavior="url(#default#VML)",r.coordsize)return r=null,fabric.document.write('<style type="text/css">.cufon-vml-canvas{text-indent:0}@media screen{cvml\\:shape,cvml\\:shadow{behavior:url(#default#VML);display:block;antialias:true;position:absolute}.cufon-vml-canvas{position:absolute;text-align:left}.cufon-vml{display:inline-block;position:relative;vertical-align:middle}.cufon-vml .cufon-alt{position:absolute;left:-10000in;font-size:1px}a .cufon-vml{cursor:pointer}}@media print{.cufon-vml *{display:none}.cufon-vml .cufon-alt{display:inline}}</style>'),function(i,r,n,s,o,a,h){var c=null===r;c&&(r=o.alt);var l=i.viewBox,u=n.computedFontSize||(n.computedFontSize=new Cufon.CSS.Size(t(a,n.get("fontSize"))+"px",i.baseSize)),f=n.computedLSpacing;void 0==f&&(f=n.get("letterSpacing"),n.computedLSpacing=f="normal"==f?0:~~u.convertFrom(e(a,f)));var d,g;if(c)d=o,g=o.firstChild;else{if(d=fabric.document.createElement("span"),d.className="cufon cufon-vml",d.alt=r,g=fabric.document.createElement("span"),g.className="cufon-vml-canvas",d.appendChild(g),s.printable){var p=fabric.document.createElement("span");p.className="cufon-alt",p.appendChild(fabric.document.createTextNode(r)),d.appendChild(p)}h||d.appendChild(fabric.document.createElement("cvml:shape"))}var v=d.style,m=g.style,y=u.convert(l.height),b=Math.ceil(y),x=b/y,_=l.minX,C=l.minY;m.height=b,m.top=Math.round(u.convert(C-i.ascent)),m.left=Math.round(u.convert(_)),v.height=u.convert(i.height)+"px";for(var S,w,O=(Cufon.getTextDecoration(s),n.get("color")),T=Cufon.CSS.textTransform(r,n).split(""),E=0,k=0,P=null,j=s.textShadow,A=0,M=0,D=T.length;D>A;++A)S=i.glyphs[T[A]]||i.missingGlyph,S&&(E+=P=~~(S.w||i.w)+f);if(null===P)return null;var L,I=-_+E+(l.width-P),F=u.convert(I*x),X=Math.round(F),B=I+","+l.height,G="r"+B+"nsnf";for(A=0;D>A;++A)if(S=i.glyphs[T[A]]||i.missingGlyph){c?(w=g.childNodes[M],w.firstChild&&w.removeChild(w.firstChild)):(w=fabric.document.createElement("cvml:shape"),g.appendChild(w)),w.stroked="f",w.coordsize=B,w.coordorigin=L=_-k+","+C,w.path=(S.d?"m"+S.d+"xe":"")+"m"+L+G,w.fillcolor=O;var R=w.style;if(R.width=X,R.height=b,j){var Y,W=j[0],z=j[1],N=Cufon.CSS.color(W.color),H=fabric.document.createElement("cvml:shadow");H.on="t",H.color=N.color,H.offset=W.offX+","+W.offY,z&&(Y=Cufon.CSS.color(z.color),H.type="double",H.color2=Y.color,H.offset2=z.offX+","+z.offY),H.opacity=N.opacity||Y&&Y.opacity||1,w.appendChild(H)}k+=~~(S.w||i.w)+f,++M}return v.width=Math.max(Math.ceil(u.convert(E*x)),0),d}}}}()),Cufon.getTextDecoration=function(t){return{underline:"underline"===t.textDecoration,overline:"overline"===t.textDecoration,"line-through":"line-through"===t.textDecoration}},"undefined"!=typeof exports&&(exports.Cufon=Cufon),"object"!=typeof JSON&&(JSON={}),function(){"use strict";function f(t){return 10>t?"0"+t:t}function quote(t){return escapable.lastIndex=0,escapable.test(t)?'"'+t.replace(escapable,function(t){var e=meta[t];return"string"==typeof e?e:"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+t+'"'}function str(t,e){var i,r,n,s,o,a=gap,h=e[t];switch(h&&"object"==typeof h&&"function"==typeof h.toJSON&&(h=h.toJSON(t)),"function"==typeof rep&&(h=rep.call(e,t,h)),typeof h){case"string":return quote(h);case"number":return isFinite(h)?String(h):"null";case"boolean":case"null":return String(h);case"object":if(!h)return"null";if(gap+=indent,o=[],"[object Array]"===Object.prototype.toString.apply(h)){for(s=h.length,i=0;s>i;i+=1)o[i]=str(i,h)||"null";return n=0===o.length?"[]":gap?"[\n"+gap+o.join(",\n"+gap)+"\n"+a+"]":"["+o.join(",")+"]",gap=a,n}if(rep&&"object"==typeof rep)for(s=rep.length,i=0;s>i;i+=1)"string"==typeof rep[i]&&(r=rep[i],n=str(r,h),n&&o.push(quote(r)+(gap?": ":":")+n));else for(r in h)Object.prototype.hasOwnProperty.call(h,r)&&(n=str(r,h),n&&o.push(quote(r)+(gap?": ":":")+n));return n=0===o.length?"{}":gap?"{\n"+gap+o.join(",\n"+gap)+"\n"+a+"}":"{"+o.join(",")+"}",gap=a,n}}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()});var cx,escapable,gap,indent,meta,rep;"function"!=typeof JSON.stringify&&(escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(t,e,i){var r;if(gap="",indent="","number"==typeof i)for(r=0;i>r;r+=1)indent+=" ";else"string"==typeof i&&(indent=i);if(rep=e,e&&"function"!=typeof e&&("object"!=typeof e||"number"!=typeof e.length))throw new Error("JSON.stringify");return str("",{"":t})}),"function"!=typeof JSON.parse&&(cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,JSON.parse=function(text,reviver){function walk(t,e){var i,r,n=t[e];if(n&&"object"==typeof n)for(i in n)Object.prototype.hasOwnProperty.call(n,i)&&(r=walk(n,i),void 0!==r?n[i]=r:delete n[i]);return reviver.call(t,e,n)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})),/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}(),"undefined"==typeof Event)var Event={};if("undefined"==typeof eventjs)var eventjs=Event;if(function(t){"use strict";t.modifyEventListener=!1,t.modifySelectors=!1,t.add=function(t,e,r,n){return i(t,e,r,n,"add")},t.remove=function(t,e,r,n){return i(t,e,r,n,"remove")},t.stop=function(t){t&&(t.stopPropagation&&t.stopPropagation(),t.cancelBubble=!0,t.bubble=0)},t.prevent=function(t){t&&(t.preventDefault&&t.preventDefault(),t.preventManipulation&&t.preventManipulation(),t.returnValue=!1)},t.cancel=function(e){t.stop(e),t.prevent(e)},t.getEventSupport=function(t,e){if("string"==typeof t&&(e=t,t=window),e="on"+e,e in t)return!0;if(t.setAttribute||(t=document.createElement("div")),t.setAttribute&&t.removeAttribute){t.setAttribute(e,"");var i="function"==typeof t[e];return"undefined"!=typeof t[e]&&(t[e]=null),t.removeAttribute(e),i}};var e=function(t){if(!t||"object"!=typeof t)return t;var i=new t.constructor;for(var r in t)i[r]=t[r]&&"object"==typeof t[r]?e(t[r]):t[r];return i},i=function(s,o,c,d,g,p){if(d=d||{},"[object Object]"===String(s)){var v=s;s=v.target,o=v.type,c=v.listener,delete v.target,delete v.type,delete v.listener;for(var m in v)d[m]=v[m]}if(s&&o&&c){if("string"!=typeof s||"ready"!==o){if("string"==typeof s){if(s=document.querySelectorAll(s),0===s.length)return n("Missing target on listener!",arguments);1===s.length&&(s=s[0])}var y,b={};if(s.length>0&&s!==window){for(var x=0,_=s.length;_>x;x++)y=i(s[x],o,c,e(d),g),y&&(b[x]=y);return r(b)}if(o.indexOf&&-1!==o.indexOf(" ")&&(o=o.split(" ")),o.indexOf&&-1!==o.indexOf(",")&&(o=o.split(",")),"string"!=typeof o){if("number"==typeof o.length)for(var C=0,S=o.length;S>C;C++)y=i(s,o[C],c,e(d),g),y&&(b[o[C]]=y);else for(var m in o)y="function"==typeof o[m]?i(s,m,o[m],e(d),g):i(s,m,o[m].listener,e(o[m]),g),y&&(b[m]=y);return r(b)}if("object"!=typeof s)return n("Target is not defined!",arguments);if("function"!=typeof c)return n("Listener is not a function!",arguments);var w=d.useCapture||!1,O=l(s)+"."+l(c)+"."+(w?1:0);if(t.Gesture&&t.Gesture._gestureHandlers[o]){if(O=o+O,"remove"===g){if(!h[O])return;h[O].remove(),delete h[O]}else if("add"===g){if(h[O])return h[O].add(),h[O];if(d.useCall&&!t.modifyEventListener){var T=c;c=function(t,e){for(var i in e)t[i]=e[i];return T.call(s,t)}}d.gesture=o,d.target=s,d.listener=c,d.fromOverwrite=p,h[O]=t.proxy[o](d)}return h[O]}for(var E,k=a(o),P=0;P<k.length;P++)if(o=k[P],E=o+"."+O,"remove"===g){if(!h[E])continue;s[f](o,c,w),delete h[E]}else if("add"===g){if(h[E])return h[E];s[u](o,c,w),h[E]={id:E,type:o,target:s,listener:c,remove:function(){for(var e=0;e<k.length;e++)t.remove(s,k[e],c,d)}}}return h[E]}var j=(new Date).getTime(),A=d.timeout,M=d.interval||1e3/60,D=window.setInterval(function(){(new Date).getTime()-j>A&&window.clearInterval(D),document.querySelector(s)&&(window.clearInterval(D),setTimeout(c,1))},M)}},r=function(t){return{remove:function(){for(var e in t)t[e].remove()},add:function(){for(var e in t)t[e].add()}}},n=function(t,e){"undefined"!=typeof console&&"undefined"!=typeof console.error&&console.error(t,e)},s={msPointer:["MSPointerDown","MSPointerMove","MSPointerUp"],touch:["touchstart","touchmove","touchend"],mouse:["mousedown","mousemove","mouseup"]},o={MSPointerDown:0,MSPointerMove:1,MSPointerUp:2,touchstart:0,touchmove:1,touchend:2,mousedown:0,mousemove:1,mouseup:2},a=(function(){t.supports={},window.navigator.msPointerEnabled&&(t.supports.msPointer=!0),t.getEventSupport("touchstart")&&(t.supports.touch=!0),t.getEventSupport("mousedown")&&(t.supports.mouse=!0)}(),function(){return function(e){var i=document.addEventListener?"":"on",r=o[e];if(isFinite(r)){var n=[];for(var a in t.supports)n.push(i+s[a][r]);return n}return[i+e]}}()),h={},c=0,l=function(t){return t===window?"#window":t===document?"#document":(t.uniqueID||(t.uniqueID="e"+c++),t.uniqueID)},u=document.addEventListener?"addEventListener":"attachEvent",f=document.removeEventListener?"removeEventListener":"detachEvent";return t.createPointerEvent=function(e,i,r){var n=i.gesture,s=i.target,o=e.changedTouches||t.proxy.getCoords(e);if(o.length){var a=o[0];i.pointers=r?[]:o,i.pageX=a.pageX,i.pageY=a.pageY,i.x=i.pageX,i.y=i.pageY}var h=document.createEvent("Event");h.initEvent(n,!0,!0),h.originalEvent=e;for(var c in i)"target"!==c&&(h[c]=i[c]);var l=h.type;t.Gesture&&t.Gesture._gestureHandlers[l]&&i.oldListener.call(s,h,i,!1)},t.modifyEventListener&&window.HTMLElement&&function(){var e=function(e){var r=function(r){var n=r+"EventListener",s=e[n];e[n]=function(e,n,o){if(t.Gesture&&t.Gesture._gestureHandlers[e]){var h=o;"object"==typeof o?h.useCall=!0:h={useCall:!0,useCapture:o},i(this,e,n,h,r,!0)}else for(var c=a(e),l=0;l<c.length;l++)s.call(this,c[l],n,o)}};r("add"),r("remove")};navigator.userAgent.match(/Firefox/)?(e(HTMLDivElement.prototype),e(HTMLCanvasElement.prototype)):e(HTMLElement.prototype),e(document),e(window)}(),t.modifySelectors&&function(){var t=NodeList.prototype;t.removeEventListener=function(t,e,i){for(var r=0,n=this.length;n>r;r++)this[r].removeEventListener(t,e,i)},t.addEventListener=function(t,e,i){for(var r=0,n=this.length;n>r;r++)this[r].addEventListener(t,e,i)}}(),t}(Event),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";t.pointerSetup=function(t,e){t.doc=t.target.ownerDocument||t.target,t.minFingers=t.minFingers||t.fingers||1,t.maxFingers=t.maxFingers||t.fingers||1/0,t.position=t.position||"relative",delete t.fingers,e=e||{},e.enabled=!0,e.gesture=t.gesture,e.target=t.target,e.env=t.env,Event.modifyEventListener&&t.fromOverwrite&&(t.oldListener=t.listener,t.listener=Event.createPointerEvent);var i=0,r=0===e.gesture.indexOf("pointer")&&Event.modifyEventListener?"pointer":"mouse";return t.oldListener&&(e.oldListener=t.oldListener),e.listener=t.listener,e.proxy=function(i){e.defaultListener=t.listener,t.listener=i,i(t.event,e)},e.add=function(){e.enabled!==!0&&(t.onPointerDown&&Event.add(t.target,r+"down",t.onPointerDown),t.onPointerMove&&Event.add(t.doc,r+"move",t.onPointerMove),t.onPointerUp&&Event.add(t.doc,r+"up",t.onPointerUp),e.enabled=!0)},e.remove=function(){e.enabled!==!1&&(t.onPointerDown&&Event.remove(t.target,r+"down",t.onPointerDown),t.onPointerMove&&Event.remove(t.doc,r+"move",t.onPointerMove),t.onPointerUp&&Event.remove(t.doc,r+"up",t.onPointerUp),e.reset(),e.enabled=!1)},e.pause=function(e){!t.onPointerMove||e&&!e.move||Event.remove(t.doc,r+"move",t.onPointerMove),!t.onPointerUp||e&&!e.up||Event.remove(t.doc,r+"up",t.onPointerUp),i=t.fingers,t.fingers=0},e.resume=function(e){!t.onPointerMove||e&&!e.move||Event.add(t.doc,r+"move",t.onPointerMove),!t.onPointerUp||e&&!e.up||Event.add(t.doc,r+"up",t.onPointerUp),t.fingers=i},e.reset=function(){t.tracker={},t.fingers=0},e};var e=Event.supports;return Event.pointerType=e.mouse?"mouse":e.touch?"touch":"mspointer",t.pointerStart=function(e,i,r){var n=(e.type||"mousedown").toUpperCase();0===n.indexOf("MOUSE")?Event.pointerType="mouse":0===n.indexOf("TOUCH")?Event.pointerType="touch":0===n.indexOf("MSPOINTER")&&(Event.pointerType="mspointer");var s=function(t,e){var i=r.bbox,n=a[e]={};switch(r.position){case"absolute":n.offsetX=0,n.offsetY=0;break;case"differenceFromLast":n.offsetX=t.pageX,n.offsetY=t.pageY;break;case"difference":n.offsetX=t.pageX,n.offsetY=t.pageY;break;case"move":n.offsetX=t.pageX-i.x1,n.offsetY=t.pageY-i.y1;break;default:n.offsetX=i.x1,n.offsetY=i.y1}if("relative"===r.position)var s=t.pageX+i.scrollLeft-n.offsetX,o=t.pageY+i.scrollTop-n.offsetY;else var s=t.pageX-n.offsetX,o=t.pageY-n.offsetY;n.rotation=0,n.scale=1,n.startTime=n.moveTime=(new Date).getTime(),n.move={x:s,y:o},n.start={x:s,y:o},r.fingers++};r.event=e,i.defaultListener&&(r.listener=i.defaultListener,delete i.defaultListener);for(var o=!r.fingers,a=r.tracker,h=e.changedTouches||t.getCoords(e),c=h.length,l=0;c>l;l++){var u=h[l],f=u.identifier||1/0;if(r.fingers){if(r.fingers>=r.maxFingers){var d=[];for(var f in r.tracker)d.push(f);return i.identifier=d.join(","),o}var g=0;for(var p in a){if(a[p].up){delete a[p],s(u,f),r.cancel=!0;break}g++}if(a[f])continue;s(u,f)}else a=r.tracker={},i.bbox=r.bbox=t.getBoundingBox(r.target),r.fingers=0,r.cancel=!1,s(u,f)}var d=[];for(var f in r.tracker)d.push(f);return i.identifier=d.join(","),o},t.pointerEnd=function(t,e,i,r){for(var n=t.touches||[],s=n.length,o={},a=0;s>a;a++){var h=n[a],c=h.identifier;o[c||1/0]=!0}for(var c in i.tracker){var l=i.tracker[c];o[c]||l.up||(r&&r({pageX:l.pageX,pageY:l.pageY,changedTouches:[{pageX:l.pageX,pageY:l.pageY,identifier:"Infinity"===c?1/0:c}]},"up"),l.up=!0,i.fingers--)}if(0!==i.fingers)return!1;var u=[];i.gestureFingers=0;for(var c in i.tracker)i.gestureFingers++,u.push(c);return e.identifier=u.join(","),!0},t.getCoords=function(e){return t.getCoords="undefined"!=typeof e.pageX?function(t){return Array({type:"mouse",x:t.pageX,y:t.pageY,pageX:t.pageX,pageY:t.pageY,identifier:t.pointerId||1/0})}:function(t){return t=t||window.event,Array({type:"mouse",x:t.clientX+document.documentElement.scrollLeft,y:t.clientY+document.documentElement.scrollTop,pageX:t.clientX+document.documentElement.scrollLeft,pageY:t.clientY+document.documentElement.scrollTop,identifier:1/0})},t.getCoords(e)},t.getCoord=function(e){if("ontouchstart"in window){var i=0,r=0;t.getCoord=function(t){var e=t.changedTouches;return e&&e.length?{x:i=e[0].pageX,y:r=e[0].pageY}:{x:i,y:r}}}else t.getCoord="undefined"!=typeof e.pageX&&"undefined"!=typeof e.pageY?function(t){return{x:t.pageX,y:t.pageY}}:function(t){return t=t||window.event,{x:t.clientX+document.documentElement.scrollLeft,y:t.clientY+document.documentElement.scrollTop}};return t.getCoord(e)},t.getBoundingBox=function(t){(t===window||t===document)&&(t=document.body);var e={},i=t.getBoundingClientRect();e.width=i.width,e.height=i.height,e.x1=i.left,e.y1=i.top,e.x2=e.x1+e.width,e.y2=e.y1+e.height,e.scaleX=i.width/t.offsetWidth||1,e.scaleY=i.height/t.offsetHeight||1,e.scrollLeft=0,e.scrollTop=0;for(var r=t.parentNode;null!==r&&r!==document.body&&void 0!==r.scrollTop;){var n=window.getComputedStyle(r),s=n.getPropertyValue("position");if("absolute"===s)break;if("fixed"===s){e.scrollTop-=r.parentNode.scrollTop;break}e.scrollLeft+=r.scrollLeft,e.scrollTop+=r.scrollTop,r=r.parentNode}return e},function(){var e=navigator.userAgent.toLowerCase(),i=-1!==e.indexOf("macintosh");if(i&&-1!==e.indexOf("khtml"))var r={91:!0,93:!0};else if(i&&-1!==e.indexOf("firefox"))var r={224:!0};else var r={17:!0};t.metaTrackerReset=function(){t.metaKey=!1,t.ctrlKey=!1,t.shiftKey=!1,t.altKey=!1},t.metaTracker=function(e){var i=!!r[e.keyCode];return i&&(t.metaKey="keydown"===e.type),t.ctrlKey=e.ctrlKey,t.shiftKey=e.shiftKey,t.altKey=e.altKey,i}}(),t}(Event.proxy),"undefined"==typeof Event)var Event={};if(Event.MutationObserver=function(){var t=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver,e=function(){var t=document.createElement("p"),e=!1,i=function(){e=!0};if(t.addEventListener)t.addEventListener("DOMAttrModified",i,!1);else{if(!t.attachEvent)return!1;t.attachEvent("onDOMAttrModified",i)}return t.setAttribute("id","target"),e}();return function(i,r){if(t){var n={subtree:!1,attributes:!0},s=new t(function(t){t.forEach(function(t){r.call(t.target,t.attributeName)})});s.observe(i,n)}else e?Event.add(i,"DOMAttrModified",function(t){r.call(i,t.attrName)}):"onpropertychange"in document.body&&Event.add(i,"propertychange",function(){r.call(i,window.event.propertyName)})}}(),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";
return t.click=function(e){e.gesture=e.gesture||"click",e.maxFingers=e.maxFingers||e.fingers||1;var i;e.onPointerDown=function(i){t.pointerStart(i,r,e)&&(Event.add(e.doc,"mousemove",e.onPointerMove).listener(i),Event.add(e.doc,"mouseup",e.onPointerUp))},e.onPointerMove=function(t){i=t},e.onPointerUp=function(n){if(t.pointerEnd(n,r,e)){if(Event.remove(e.doc,"mousemove",e.onPointerMove),Event.remove(e.doc,"mouseup",e.onPointerUp),i.cancelBubble&&++i.bubble>1)return;var s=i.changedTouches||t.getCoords(i),o=s[0],a=e.bbox,h=t.getBoundingBox(e.target);if("relative"===e.position)var c=o.pageX+a.scrollLeft-a.x1,l=o.pageY+a.scrollTop-a.y1;else var c=o.pageX-a.x1,l=o.pageY-a.y1;if(c>0&&c<a.width&&l>0&&l<a.height&&a.scrollTop===h.scrollTop){for(var u in e.tracker)break;var f=e.tracker[u];r.x=f.start.x,r.y=f.start.y,e.listener(i,r)}}};var r=t.pointerSetup(e);return r.state="click",Event.add(e.target,"mousedown",e.onPointerDown),r},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.click=t.click,t}(Event.proxy),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";return t.dbltap=t.dblclick=function(e){e.gesture=e.gesture||"dbltap",e.maxFingers=e.maxFingers||e.fingers||1;var i,r,n,s,o,a=700;e.onPointerDown=function(c){var l=c.changedTouches||t.getCoords(c);i&&!r?(o=l[0],r=(new Date).getTime()-i):(s=l[0],i=(new Date).getTime(),r=0,clearTimeout(n),n=setTimeout(function(){i=0},a)),t.pointerStart(c,h,e)&&(Event.add(e.doc,"mousemove",e.onPointerMove).listener(c),Event.add(e.doc,"mouseup",e.onPointerUp))},e.onPointerMove=function(a){if(i&&!r){var h=a.changedTouches||t.getCoords(a);o=h[0]}var c=e.bbox;if("relative"===e.position)var l=o.pageX+c.scrollLeft-c.x1,u=o.pageY+c.scrollTop-c.y1;else var l=o.pageX-c.x1,u=o.pageY-c.y1;l>0&&l<c.width&&u>0&&u<c.height&&Math.abs(o.pageX-s.pageX)<=25&&Math.abs(o.pageY-s.pageY)<=25||(Event.remove(e.doc,"mousemove",e.onPointerMove),clearTimeout(n),i=r=0)},e.onPointerUp=function(s){if(t.pointerEnd(s,h,e)&&(Event.remove(e.doc,"mousemove",e.onPointerMove),Event.remove(e.doc,"mouseup",e.onPointerUp)),i&&r){if(a>=r&&!(s.cancelBubble&&++s.bubble>1)){h.state=e.gesture;for(var o in e.tracker)break;var c=e.tracker[o];h.x=c.start.x,h.y=c.start.y,e.listener(s,h)}clearTimeout(n),i=r=0}};var h=t.pointerSetup(e);return h.state="dblclick",Event.add(e.target,"mousedown",e.onPointerDown),h},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.dbltap=t.dbltap,Event.Gesture._gestureHandlers.dblclick=t.dblclick,t}(Event.proxy),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";return t.dragElement=function(e,i){t.drag({event:i,target:e,position:"move",listener:function(t,i){e.style.left=i.x+"px",e.style.top=i.y+"px",Event.prevent(t)}})},t.drag=function(e){e.gesture="drag",e.onPointerDown=function(r){t.pointerStart(r,i,e)&&(e.monitor||(Event.add(e.doc,"mousemove",e.onPointerMove),Event.add(e.doc,"mouseup",e.onPointerUp))),e.onPointerMove(r,"down")},e.onPointerMove=function(r,n){if(!e.tracker)return e.onPointerDown(r);for(var s=e.bbox,o=r.changedTouches||t.getCoords(r),a=o.length,h=0;a>h;h++){var c=o[h],l=c.identifier||1/0,u=e.tracker[l];u&&(u.pageX=c.pageX,u.pageY=c.pageY,i.state=n||"move",i.identifier=l,i.start=u.start,i.fingers=e.fingers,"differenceFromLast"===e.position?(i.x=u.pageX-u.offsetX,i.y=u.pageY-u.offsetY,u.offsetX=u.pageX,u.offsetY=u.pageY):"relative"===e.position?(i.x=u.pageX+s.scrollLeft-u.offsetX,i.y=u.pageY+s.scrollTop-u.offsetY):(i.x=u.pageX-u.offsetX,i.y=u.pageY-u.offsetY),e.listener(r,i))}},e.onPointerUp=function(r){t.pointerEnd(r,i,e,e.onPointerMove)&&(e.monitor||(Event.remove(e.doc,"mousemove",e.onPointerMove),Event.remove(e.doc,"mouseup",e.onPointerUp)))};var i=t.pointerSetup(e);return e.event?e.onPointerDown(e.event):(Event.add(e.target,"mousedown",e.onPointerDown),e.monitor&&(Event.add(e.doc,"mousemove",e.onPointerMove),Event.add(e.doc,"mouseup",e.onPointerUp))),i},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.drag=t.drag,t}(Event.proxy),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";var e=Math.PI/180;return t.gesture=function(i){i.gesture=i.gesture||"gesture",i.minFingers=i.minFingers||i.fingers||2,i.onPointerDown=function(e){var n=i.fingers;if(t.pointerStart(e,r,i)&&(Event.add(i.doc,"mousemove",i.onPointerMove),Event.add(i.doc,"mouseup",i.onPointerUp)),i.fingers===i.minFingers&&n!==i.fingers){r.fingers=i.minFingers,r.scale=1,r.rotation=0,r.state="start";var s="";for(var o in i.tracker)s+=o;r.identifier=parseInt(s),i.listener(e,r)}},i.onPointerMove=function(n){for(var s=i.bbox,o=i.tracker,a=n.changedTouches||t.getCoords(n),h=a.length,c=0;h>c;c++){var l=a[c],u=l.identifier||1/0,f=o[u];f&&("relative"===i.position?(f.move.x=l.pageX+s.scrollLeft-s.x1,f.move.y=l.pageY+s.scrollTop-s.y1):(f.move.x=l.pageX-s.x1,f.move.y=l.pageY-s.y1))}if(!(i.fingers<i.minFingers)){var a=[],d=0,g=0,p=0,v=0,h=0;for(var u in o){var l=o[u];l.up||(p+=l.move.x,v+=l.move.y,h++)}p/=h,v/=h;for(var u in o){var l=o[u];if(!l.up){var m=l.start;if(!m.distance){var y=m.x-p,b=m.y-v;m.distance=Math.sqrt(y*y+b*b),m.angle=Math.atan2(y,b)/e}var y=l.move.x-p,b=l.move.y-v,x=Math.sqrt(y*y+b*b);d+=x/m.distance;var _=Math.atan2(y,b)/e,C=(m.angle-_+360)%360-180;l.DEG2=l.DEG1,l.DEG1=C>0?C:-C,"undefined"!=typeof l.DEG2&&(C>0?l.rotation+=l.DEG1-l.DEG2:l.rotation-=l.DEG1-l.DEG2,g+=l.rotation),a.push(l.move)}}r.touches=a,r.fingers=i.fingers,r.scale=d/i.fingers,r.rotation=g/i.fingers,r.state="change",i.listener(n,r)}},i.onPointerUp=function(e){var n=i.fingers;t.pointerEnd(e,r,i)&&(Event.remove(i.doc,"mousemove",i.onPointerMove),Event.remove(i.doc,"mouseup",i.onPointerUp)),n===i.minFingers&&i.fingers<i.minFingers&&(r.fingers=i.fingers,r.state="end",i.listener(e,r))};var r=t.pointerSetup(i);return Event.add(i.target,"mousedown",i.onPointerDown),r},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.gesture=t.gesture,t}(Event.proxy),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";return t.pointerdown=t.pointermove=t.pointerup=function(e){if(e.gesture=e.gesture||"pointer",!e.target.isPointerEmitter){var i=!0;e.onPointerDown=function(t){i=!1,r.gesture="pointerdown",e.listener(t,r)},e.onPointerMove=function(t){r.gesture="pointermove",e.listener(t,r,i)},e.onPointerUp=function(t){i=!0,r.gesture="pointerup",e.listener(t,r,!0)};var r=t.pointerSetup(e);return Event.add(e.target,"mousedown",e.onPointerDown),Event.add(e.target,"mousemove",e.onPointerMove),Event.add(e.doc,"mouseup",e.onPointerUp),e.target.isPointerEmitter=!0,r}},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.pointerdown=t.pointerdown,Event.Gesture._gestureHandlers.pointermove=t.pointermove,Event.Gesture._gestureHandlers.pointerup=t.pointerup,t}(Event.proxy),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";return t.shake=function(t){var e={gesture:"devicemotion",acceleration:{},accelerationIncludingGravity:{},target:t.target,listener:t.listener,remove:function(){window.removeEventListener("devicemotion",c,!1)}},i=4,r=1e3,n=200,s=3,o=(new Date).getTime(),a={x:0,y:0,z:0},h={x:{count:0,value:0},y:{count:0,value:0},z:{count:0,value:0}},c=function(c){var l=.8,u=c.accelerationIncludingGravity;if(a.x=l*a.x+(1-l)*u.x,a.y=l*a.y+(1-l)*u.y,a.z=l*a.z+(1-l)*u.z,e.accelerationIncludingGravity=a,e.acceleration.x=u.x-a.x,e.acceleration.y=u.y-a.y,e.acceleration.z=u.z-a.z,"devicemotion"===t.gesture)return void t.listener(c,e);for(var f="xyz",d=(new Date).getTime(),g=0,p=f.length;p>g;g++){var v=f[g],m=e.acceleration[v],y=h[v],b=Math.abs(m);if(!(r>d-o)&&b>i){var x=d*m/b,_=Math.abs(x+y.value);y.value&&n>_?(y.value=x,y.count++,y.count===s&&(t.listener(c,e),o=d,y.value=0,y.count=0)):(y.value=x,y.count=1)}}};return window.addEventListener?(window.addEventListener("devicemotion",c,!1),e):void 0},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.shake=t.shake,t}(Event.proxy),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";var e=Math.PI/180;return t.swipe=function(i){i.snap=i.snap||90,i.threshold=i.threshold||1,i.gesture=i.gesture||"swipe",i.onPointerDown=function(e){t.pointerStart(e,r,i)&&(Event.add(i.doc,"mousemove",i.onPointerMove).listener(e),Event.add(i.doc,"mouseup",i.onPointerUp))},i.onPointerMove=function(e){for(var r=e.changedTouches||t.getCoords(e),n=r.length,s=0;n>s;s++){var o=r[s],a=o.identifier||1/0,h=i.tracker[a];h&&(h.move.x=o.pageX,h.move.y=o.pageY,h.moveTime=(new Date).getTime())}},i.onPointerUp=function(n){if(t.pointerEnd(n,r,i)){Event.remove(i.doc,"mousemove",i.onPointerMove),Event.remove(i.doc,"mouseup",i.onPointerUp);var s,o,a,h,c={x:0,y:0},l=0,u=0,f=0;for(var d in i.tracker){var g=i.tracker[d],p=g.move.x-g.start.x,v=g.move.y-g.start.y;l+=g.move.x,u+=g.move.y,c.x+=g.start.x,c.y+=g.start.y,f++;var m=Math.sqrt(p*p+v*v),y=g.moveTime-g.startTime,h=Math.atan2(p,v)/e+180,o=y?m/y:0;if("undefined"==typeof a)a=h,s=o;else{if(!(Math.abs(h-a)<=20))return;a=(a+h)/2,s=(s+o)/2}}var b=i.gestureFingers;i.minFingers<=b&&i.maxFingers>=b&&s>i.threshold&&(c.x/=f,c.y/=f,r.start=c,r.x=l/f,r.y=u/f,r.angle=-(((a/i.snap+.5>>0)*i.snap||360)-360),r.velocity=s,r.fingers=b,r.state="swipe",i.listener(n,r))}};var r=t.pointerSetup(i);return Event.add(i.target,"mousedown",i.onPointerDown),r},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.swipe=t.swipe,t}(Event.proxy),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";return t.longpress=function(e){return e.gesture="longpress",t.tap(e)},t.tap=function(e){e.delay=e.delay||500,e.timeout=e.timeout||250,e.driftDeviance=e.driftDeviance||10,e.gesture=e.gesture||"tap";var i,r;e.onPointerDown=function(s){if(t.pointerStart(s,n,e)){if(i=(new Date).getTime(),Event.add(e.doc,"mousemove",e.onPointerMove).listener(s),Event.add(e.doc,"mouseup",e.onPointerUp),"longpress"!==e.gesture)return;r=setTimeout(function(){if(!(s.cancelBubble&&++s.bubble>1)){var t=0;for(var i in e.tracker){var r=e.tracker[i];if(r.end===!0)return;if(e.cancel)return;t++}e.minFingers<=t&&e.maxFingers>=t&&(n.state="start",n.fingers=t,n.x=r.start.x,n.y=r.start.y,e.listener(s,n))}},e.delay)}},e.onPointerMove=function(i){for(var r=e.bbox,n=i.changedTouches||t.getCoords(i),s=n.length,o=0;s>o;o++){var a=n[o],h=a.identifier||1/0,c=e.tracker[h];if(c){if("relative"===e.position)var l=a.pageX+r.scrollLeft-r.x1,u=a.pageY+r.scrollTop-r.y1;else var l=a.pageX-r.x1,u=a.pageY-r.y1;var f=l-c.start.x,d=u-c.start.y,g=Math.sqrt(f*f+d*d);if(!(l>0&&l<r.width&&u>0&&u<r.height&&g<=e.driftDeviance))return Event.remove(e.doc,"mousemove",e.onPointerMove),void(e.cancel=!0)}}},e.onPointerUp=function(s){if(t.pointerEnd(s,n,e)){if(clearTimeout(r),Event.remove(e.doc,"mousemove",e.onPointerMove),Event.remove(e.doc,"mouseup",e.onPointerUp),s.cancelBubble&&++s.bubble>1)return;if("longpress"===e.gesture)return void("start"===n.state&&(n.state="end",e.listener(s,n)));if(e.cancel)return;if((new Date).getTime()-i>e.timeout)return;var o=e.gestureFingers;e.minFingers<=o&&e.maxFingers>=o&&(n.state="tap",n.fingers=e.gestureFingers,e.listener(s,n))}};var n=t.pointerSetup(e);return Event.add(e.target,"mousedown",e.onPointerDown),n},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.tap=t.tap,Event.Gesture._gestureHandlers.longpress=t.longpress,t}(Event.proxy),"undefined"==typeof Event)var Event={};if("undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";return t.wheel=function(t){var e,i=t.timeout||150,r=0,n={gesture:"wheel",state:"start",wheelDelta:0,target:t.target,listener:t.listener,preventElasticBounce:function(){var t=this.target,e=t.scrollTop,i=e+t.offsetHeight,r=t.scrollHeight;i===r&&this.wheelDelta<=0?Event.cancel(event):0===e&&this.wheelDelta>=0&&Event.cancel(event),Event.stop(event)},add:function(){t.target[o](h,s,!1)},remove:function(){t.target[a](h,s,!1)}},s=function(s){s=s||window.event,n.state=r++?"change":"start",n.wheelDelta=s.detail?-20*s.detail:s.wheelDelta,t.listener(s,n),clearTimeout(e),e=setTimeout(function(){r=0,n.state="end",n.wheelDelta=0,t.listener(s,n)},i)},o=document.addEventListener?"addEventListener":"attachEvent",a=document.removeEventListener?"removeEventListener":"detachEvent",h=Event.getEventSupport("mousewheel")?"mousewheel":"DOMMouseScroll";return t.target[o](h,s,!1),n},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.wheel=t.wheel,t}(Event.proxy),"undefined"==typeof Event)var Event={};"undefined"==typeof Event.proxy&&(Event.proxy={}),Event.proxy=function(t){"use strict";return t.orientation=function(t){var e={gesture:"orientationchange",previous:null,current:window.orientation,target:t.target,listener:t.listener,remove:function(){window.removeEventListener("orientationchange",i,!1)}},i=function(i){return e.previous=e.current,e.current=window.orientation,null!==e.previous&&e.previous!=e.current?void t.listener(i,e):void 0};return window.DeviceOrientationEvent&&window.addEventListener("orientationchange",i,!1),e},Event.Gesture=Event.Gesture||{},Event.Gesture._gestureHandlers=Event.Gesture._gestureHandlers||{},Event.Gesture._gestureHandlers.orientation=t.orientation,t}(Event.proxy),function(){function t(t,e){this.__eventListeners[t]&&(e?fabric.util.removeFromArray(this.__eventListeners[t],e):this.__eventListeners[t].length=0)}function e(t,e){if(this.__eventListeners||(this.__eventListeners={}),1===arguments.length)for(var i in t)this.on(i,t[i]);else this.__eventListeners[t]||(this.__eventListeners[t]=[]),this.__eventListeners[t].push(e);return this}function i(e,i){if(this.__eventListeners){if(0===arguments.length)this.__eventListeners={};else if(1===arguments.length&&"object"==typeof arguments[0])for(var r in e)t.call(this,r,e[r]);else t.call(this,e,i);return this}}function r(t,e){if(this.__eventListeners){var i=this.__eventListeners[t];if(i){for(var r=0,n=i.length;n>r;r++)i[r].call(this,e||{});return this}}}fabric.Observable={observe:e,stopObserving:i,fire:r,on:e,off:i,trigger:r}}(),fabric.Collection={add:function(){this._objects.push.apply(this._objects,arguments);for(var t=0,e=arguments.length;e>t;t++)this._onObjectAdded(arguments[t]);return this.renderOnAddRemove&&this.renderAll(),this},insertAt:function(t,e,i){var r=this.getObjects();return i?r[e]=t:r.splice(e,0,t),this._onObjectAdded(t),this.renderOnAddRemove&&this.renderAll(),this},remove:function(){for(var t,e=this.getObjects(),i=0,r=arguments.length;r>i;i++)t=e.indexOf(arguments[i]),-1!==t&&(e.splice(t,1),this._onObjectRemoved(arguments[i]));return this.renderOnAddRemove&&this.renderAll(),this},forEachObject:function(t,e){for(var i=this.getObjects(),r=i.length;r--;)t.call(e,i[r],r,i);return this},getObjects:function(t){return"undefined"==typeof t?this._objects:this._objects.filter(function(e){return e.type===t})},item:function(t){return this.getObjects()[t]},isEmpty:function(){return 0===this.getObjects().length},size:function(){return this.getObjects().length},contains:function(t){return this.getObjects().indexOf(t)>-1},complexity:function(){return this.getObjects().reduce(function(t,e){return t+=e.complexity?e.complexity():0},0)}},function(t){var e=Math.sqrt,i=Math.atan2,r=Math.PI/180;fabric.util={removeFromArray:function(t,e){var i=t.indexOf(e);return-1!==i&&t.splice(i,1),t},getRandomInt:function(t,e){return Math.floor(Math.random()*(e-t+1))+t},degreesToRadians:function(t){return t*r},radiansToDegrees:function(t){return t/r},rotatePoint:function(t,e,i){var r=Math.sin(i),n=Math.cos(i);t.subtractEquals(e);var s=t.x*n-t.y*r,o=t.x*r+t.y*n;return new fabric.Point(s,o).addEquals(e)},transformPoint:function(t,e,i){return i?new fabric.Point(e[0]*t.x+e[1]*t.y,e[2]*t.x+e[3]*t.y):new fabric.Point(e[0]*t.x+e[1]*t.y+e[4],e[2]*t.x+e[3]*t.y+e[5])},invertTransform:function(t){var e=t.slice(),i=1/(t[0]*t[3]-t[1]*t[2]);e=[i*t[3],-i*t[1],-i*t[2],i*t[0],0,0];var r=fabric.util.transformPoint({x:t[4],y:t[5]},e);return e[4]=-r.x,e[5]=-r.y,e},toFixed:function(t,e){return parseFloat(Number(t).toFixed(e))},parseUnit:function(t,e){var i=/\D{0,2}$/.exec(t),r=parseFloat(t);switch(e||(e=fabric.Text.DEFAULT_SVG_FONT_SIZE),i[0]){case"mm":return r*fabric.DPI/25.4;case"cm":return r*fabric.DPI/2.54;case"in":return r*fabric.DPI;case"pt":return r*fabric.DPI/72;case"pc":return r*fabric.DPI/72*12;case"em":return r*e;default:return r}},falseFunction:function(){return!1},getKlass:function(t,e){return t=fabric.util.string.camelize(t.charAt(0).toUpperCase()+t.slice(1)),fabric.util.resolveNamespace(e)[t]},resolveNamespace:function(e){if(!e)return fabric;for(var i=e.split("."),r=i.length,n=t||fabric.window,s=0;r>s;++s)n=n[i[s]];return n},loadImage:function(t,e,i,r){if(!t)return void(e&&e.call(i,t));var n=fabric.util.createImage();n.onload=function(){e&&e.call(i,n),n=n.onload=n.onerror=null},n.onerror=function(){fabric.log("Error loading "+n.src),e&&e.call(i,null,!0),n=n.onload=n.onerror=null},0!==t.indexOf("data")&&"undefined"!=typeof r&&(n.crossOrigin=r),n.src=t},enlivenObjects:function(t,e,i,r){function n(){++o===a&&e&&e(s)}t=t||[];var s=[],o=0,a=t.length;return a?void t.forEach(function(t,e){if(!t||!t.type)return void n();var o=fabric.util.getKlass(t.type,i);o.async?o.fromObject(t,function(i,o){o||(s[e]=i,r&&r(t,s[e])),n()}):(s[e]=o.fromObject(t),r&&r(t,s[e]),n())}):void(e&&e(s))},groupSVGElements:function(t,e,i){var r;return r=new fabric.PathGroup(t,e),"undefined"!=typeof i&&r.setSourcePath(i),r},populateWithProperties:function(t,e,i){if(i&&"[object Array]"===Object.prototype.toString.call(i))for(var r=0,n=i.length;n>r;r++)i[r]in t&&(e[i[r]]=t[i[r]])},drawDashedLine:function(t,r,n,s,o,a){var h=s-r,c=o-n,l=e(h*h+c*c),u=i(c,h),f=a.length,d=0,g=!0;for(t.save(),t.translate(r,n),t.moveTo(0,0),t.rotate(u),r=0;l>r;)r+=a[d++%f],r>l&&(r=l),t[g?"lineTo":"moveTo"](r,0),g=!g;t.restore()},createCanvasElement:function(t){return t||(t=fabric.document.createElement("canvas")),t.getContext||"undefined"==typeof G_vmlCanvasManager||G_vmlCanvasManager.initElement(t),t},createImage:function(){return fabric.isLikelyNode?new(require("canvas").Image):fabric.document.createElement("img")},createAccessors:function(t){for(var e=t.prototype,i=e.stateProperties.length;i--;){var r=e.stateProperties[i],n=r.charAt(0).toUpperCase()+r.slice(1),s="set"+n,o="get"+n;e[o]||(e[o]=function(t){return new Function('return this.get("'+t+'")')}(r)),e[s]||(e[s]=function(t){return new Function("value",'return this.set("'+t+'", value)')}(r))}},clipContext:function(t,e){e.save(),e.beginPath(),t.clipTo(e),e.clip()},multiplyTransformMatrices:function(t,e){for(var i=[[t[0],t[2],t[4]],[t[1],t[3],t[5]],[0,0,1]],r=[[e[0],e[2],e[4]],[e[1],e[3],e[5]],[0,0,1]],n=[],s=0;3>s;s++){n[s]=[];for(var o=0;3>o;o++){for(var a=0,h=0;3>h;h++)a+=i[s][h]*r[h][o];n[s][o]=a}}return[n[0][0],n[1][0],n[0][1],n[1][1],n[0][2],n[1][2]]},getFunctionBody:function(t){return(String(t).match(/function[^{]*\{([\s\S]*)\}/)||{})[1]},isTransparent:function(t,e,i,r){r>0&&(e>r?e-=r:e=0,i>r?i-=r:i=0);for(var n=!0,s=t.getImageData(e,i,2*r||1,2*r||1),o=3,a=s.data.length;a>o;o+=4){var h=s.data[o];if(n=0>=h,n===!1)break}return s=null,n}}}("undefined"!=typeof exports?exports:this),function(){function t(t,r,s,o,h,c,l){var u=a.call(arguments);if(n[u])return n[u];var f=Math.PI,d=l*f/180,g=Math.sin(d),p=Math.cos(d),v=0,m=0;s=Math.abs(s),o=Math.abs(o);var y=-p*t*.5-g*r*.5,b=-p*r*.5+g*t*.5,x=s*s,_=o*o,C=b*b,S=y*y,w=x*_-x*C-_*S,O=0;if(0>w){var T=Math.sqrt(1-w/(x*_));s*=T,o*=T}else O=(h===c?-1:1)*Math.sqrt(w/(x*C+_*S));var E=O*s*b/o,k=-O*o*y/s,P=p*E-g*k+.5*t,j=g*E+p*k+.5*r,A=i(1,0,(y-E)/s,(b-k)/o),M=i((y-E)/s,(b-k)/o,(-y-E)/s,(-b-k)/o);0===c&&M>0?M-=2*f:1===c&&0>M&&(M+=2*f);for(var D=Math.ceil(Math.abs(M/f*2)),L=[],I=M/D,F=8/3*Math.sin(I/4)*Math.sin(I/4)/Math.sin(I/2),X=A+I,B=0;D>B;B++)L[B]=e(A,X,p,g,s,o,P,j,F,v,m),v=L[B][4],m=L[B][5],A=X,X+=I;return n[u]=L,L}function e(t,e,i,r,n,o,h,c,l,u,f){var d=a.call(arguments);if(s[d])return s[d];var g=Math.cos(t),p=Math.sin(t),v=Math.cos(e),m=Math.sin(e),y=i*n*v-r*o*m+h,b=r*n*v+i*o*m+c,x=u+l*(-i*n*p-r*o*g),_=f+l*(-r*n*p+i*o*g),C=y+l*(i*n*m+r*o*v),S=b+l*(r*n*m-i*o*v);return s[d]=[x,_,C,S,y,b],s[d]}function i(t,e,i,r){var n=Math.atan2(e,t),s=Math.atan2(r,i);return s>=n?s-n:2*Math.PI-(n-s)}function r(t,e,i,r,n,s,h,c){var l=a.call(arguments);if(o[l])return o[l];var u,f,d,g,p,v,m,y,b=Math.sqrt,x=Math.min,_=Math.max,C=Math.abs,S=[],w=[[],[]];f=6*t-12*i+6*n,u=-3*t+9*i-9*n+3*h,d=3*i-3*t;for(var O=0;2>O;++O)if(O>0&&(f=6*e-12*r+6*s,u=-3*e+9*r-9*s+3*c,d=3*r-3*e),C(u)<1e-12){if(C(f)<1e-12)continue;g=-d/f,g>0&&1>g&&S.push(g)}else m=f*f-4*d*u,0>m||(y=b(m),p=(-f+y)/(2*u),p>0&&1>p&&S.push(p),v=(-f-y)/(2*u),v>0&&1>v&&S.push(v));for(var T,E,k,P=S.length,j=P;P--;)g=S[P],k=1-g,T=k*k*k*t+3*k*k*g*i+3*k*g*g*n+g*g*g*h,w[0][P]=T,E=k*k*k*e+3*k*k*g*r+3*k*g*g*s+g*g*g*c,w[1][P]=E;w[0][j]=t,w[1][j]=e,w[0][j+1]=h,w[1][j+1]=c;var A=[{x:x.apply(null,w[0]),y:x.apply(null,w[1])},{x:_.apply(null,w[0]),y:_.apply(null,w[1])}];return o[l]=A,A}var n={},s={},o={},a=Array.prototype.join;fabric.util.drawArc=function(e,i,r,n){for(var s=n[0],o=n[1],a=n[2],h=n[3],c=n[4],l=n[5],u=n[6],f=[[],[],[],[]],d=t(l-i,u-r,s,o,h,c,a),g=0,p=d.length;p>g;g++)f[g][0]=d[g][0]+i,f[g][1]=d[g][1]+r,f[g][2]=d[g][2]+i,f[g][3]=d[g][3]+r,f[g][4]=d[g][4]+i,f[g][5]=d[g][5]+r,e.bezierCurveTo.apply(e,f[g])},fabric.util.getBoundsOfArc=function(e,i,n,s,o,a,h,c,l){for(var u=0,f=0,d=[],g=[],p=t(c-e,l-i,n,s,a,h,o),v=0,m=p.length;m>v;v++)d=r(u,f,p[v][0],p[v][1],p[v][2],p[v][3],p[v][4],p[v][5]),d[0].x+=e,d[0].y+=i,d[1].x+=e,d[1].y+=i,g.push(d[0]),g.push(d[1]),u=p[v][4],f=p[v][5];return g},fabric.util.getBoundsOfCurve=r}(),function(){function t(t,e){for(var i=n.call(arguments,2),r=[],s=0,o=t.length;o>s;s++)r[s]=i.length?t[s][e].apply(t[s],i):t[s][e].call(t[s]);return r}function e(t,e){return r(t,e,function(t,e){return t>=e})}function i(t,e){return r(t,e,function(t,e){return e>t})}function r(t,e,i){if(t&&0!==t.length){var r=t.length-1,n=e?t[r][e]:t[r];if(e)for(;r--;)i(t[r][e],n)&&(n=t[r][e]);else for(;r--;)i(t[r],n)&&(n=t[r]);return n}}var n=Array.prototype.slice;Array.prototype.indexOf||(Array.prototype.indexOf=function(t){if(void 0===this||null===this)throw new TypeError;var e=Object(this),i=e.length>>>0;if(0===i)return-1;var r=0;if(arguments.length>0&&(r=Number(arguments[1]),r!==r?r=0:0!==r&&r!==Number.POSITIVE_INFINITY&&r!==Number.NEGATIVE_INFINITY&&(r=(r>0||-1)*Math.floor(Math.abs(r)))),r>=i)return-1;for(var n=r>=0?r:Math.max(i-Math.abs(r),0);i>n;n++)if(n in e&&e[n]===t)return n;return-1}),Array.prototype.forEach||(Array.prototype.forEach=function(t,e){for(var i=0,r=this.length>>>0;r>i;i++)i in this&&t.call(e,this[i],i,this)}),Array.prototype.map||(Array.prototype.map=function(t,e){for(var i=[],r=0,n=this.length>>>0;n>r;r++)r in this&&(i[r]=t.call(e,this[r],r,this));return i}),Array.prototype.every||(Array.prototype.every=function(t,e){for(var i=0,r=this.length>>>0;r>i;i++)if(i in this&&!t.call(e,this[i],i,this))return!1;return!0}),Array.prototype.some||(Array.prototype.some=function(t,e){for(var i=0,r=this.length>>>0;r>i;i++)if(i in this&&t.call(e,this[i],i,this))return!0;return!1}),Array.prototype.filter||(Array.prototype.filter=function(t,e){for(var i,r=[],n=0,s=this.length>>>0;s>n;n++)n in this&&(i=this[n],t.call(e,i,n,this)&&r.push(i));return r}),Array.prototype.reduce||(Array.prototype.reduce=function(t){var e,i=this.length>>>0,r=0;if(arguments.length>1)e=arguments[1];else for(;;){if(r in this){e=this[r++];break}if(++r>=i)throw new TypeError}for(;i>r;r++)r in this&&(e=t.call(null,e,this[r],r,this));return e}),fabric.util.array={invoke:t,min:i,max:e}}(),function(){function t(t,e){for(var i in e)t[i]=e[i];return t}function e(e){return t({},e)}fabric.util.object={extend:t,clone:e}}(),function(){function t(t){return t.replace(/-+(.)?/g,function(t,e){return e?e.toUpperCase():""})}function e(t,e){return t.charAt(0).toUpperCase()+(e?t.slice(1):t.slice(1).toLowerCase())}function i(t){return t.replace(/&/g,"&").replace(/"/g,"&quot;").replace(/'/g,"&apos;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\xA0]+/,"").replace(/[\s\xA0]+$/,"")}),fabric.util.string={camelize:t,capitalize:e,escapeXml:i}}(),function(){var t=Array.prototype.slice,e=Function.prototype.apply,i=function(){};Function.prototype.bind||(Function.prototype.bind=function(r){var n,s=this,o=t.call(arguments,1);return n=o.length?function(){return e.call(s,this instanceof i?this:r,o.concat(t.call(arguments)))}:function(){return e.call(s,this instanceof i?this:r,arguments)},i.prototype=this.prototype,n.prototype=new i,n})}(),function(){function t(){}function e(t){var e=this.constructor.superclass.prototype[t];return arguments.length>1?e.apply(this,r.call(arguments,1)):e.call(this)}function i(){function i(){this.initialize.apply(this,arguments)}var s=null,a=r.call(arguments,0);"function"==typeof a[0]&&(s=a.shift()),i.superclass=s,i.subclasses=[],s&&(t.prototype=s.prototype,i.prototype=new t,s.subclasses.push(i));for(var h=0,c=a.length;c>h;h++)o(i,a[h],s);return i.prototype.initialize||(i.prototype.initialize=n),i.prototype.constructor=i,i.prototype.callSuper=e,i}var r=Array.prototype.slice,n=function(){},s=function(){for(var t in{toString:1})if("toString"===t)return!1;return!0}(),o=function(t,e,i){for(var r in e)t.prototype[r]=r in t.prototype&&"function"==typeof t.prototype[r]&&(e[r]+"").indexOf("callSuper")>-1?function(t){return function(){var r=this.constructor.superclass;this.constructor.superclass=i;var n=e[t].apply(this,arguments);return this.constructor.superclass=r,"initialize"!==t?n:void 0}}(r):e[r],s&&(e.toString!==Object.prototype.toString&&(t.prototype.toString=e.toString),e.valueOf!==Object.prototype.valueOf&&(t.prototype.valueOf=e.valueOf))};fabric.util.createClass=i}(),function(){function t(t){var e,i,r=Array.prototype.slice.call(arguments,1),n=r.length;for(i=0;n>i;i++)if(e=typeof t[r[i]],!/^(?:function|object|unknown)$/.test(e))return!1;return!0}function e(t,e){return{handler:e,wrappedHandler:i(t,e)}}function i(t,e){return function(i){e.call(o(t),i||fabric.window.event)}}function r(t,e){return function(i){if(p[t]&&p[t][e])for(var r=p[t][e],n=0,s=r.length;s>n;n++)r[n].call(this,i||fabric.window.event)}}function n(t,e){t||(t=fabric.window.event);var i=t.target||(typeof t.srcElement!==h?t.srcElement:null),r=fabric.util.getScrollLeftTop(i,e);return{x:v(t)+r.left,y:m(t)+r.top}}function s(t,e,i){var r="touchend"===t.type?"changedTouches":"touches";return t[r]&&t[r][0]?t[r][0][e]-(t[r][0][e]-t[r][0][i])||t[i]:t[i]}var o,a,h="unknown",c=function(){var t=0;return function(e){return e.__uniqueID||(e.__uniqueID="uniqueID__"+t++)}}();!function(){var t={};o=function(e){return t[e]},a=function(e,i){t[e]=i}}();var l,u,f=t(fabric.document.documentElement,"addEventListener","removeEventListener")&&t(fabric.window,"addEventListener","removeEventListener"),d=t(fabric.document.documentElement,"attachEvent","detachEvent")&&t(fabric.window,"attachEvent","detachEvent"),g={},p={};f?(l=function(t,e,i){t.addEventListener(e,i,!1)},u=function(t,e,i){t.removeEventListener(e,i,!1)}):d?(l=function(t,i,r){var n=c(t);a(n,t),g[n]||(g[n]={}),g[n][i]||(g[n][i]=[]);var s=e(n,r);g[n][i].push(s),t.attachEvent("on"+i,s.wrappedHandler)},u=function(t,e,i){var r,n=c(t);if(g[n]&&g[n][e])for(var s=0,o=g[n][e].length;o>s;s++)r=g[n][e][s],r&&r.handler===i&&(t.detachEvent("on"+e,r.wrappedHandler),g[n][e][s]=null)}):(l=function(t,e,i){var n=c(t);if(p[n]||(p[n]={}),!p[n][e]){p[n][e]=[];var s=t["on"+e];s&&p[n][e].push(s),t["on"+e]=r(n,e)}p[n][e].push(i)},u=function(t,e,i){var r=c(t);if(p[r]&&p[r][e])for(var n=p[r][e],s=0,o=n.length;o>s;s++)n[s]===i&&n.splice(s,1)}),fabric.util.addListener=l,fabric.util.removeListener=u;var v=function(t){return typeof t.clientX!==h?t.clientX:0},m=function(t){return typeof t.clientY!==h?t.clientY:0};fabric.isTouchSupported&&(v=function(t){return s(t,"pageX","clientX")},m=function(t){return s(t,"pageY","clientY")}),fabric.util.getPointer=n,fabric.util.object.extend(fabric.util,fabric.Observable)}(),function(){function t(t,e){var i=t.style;if(!i)return t;if("string"==typeof e)return t.style.cssText+=";"+e,e.indexOf("opacity")>-1?s(t,e.match(/opacity:\s*(\d?\.?\d*)/)[1]):t;for(var r in e)if("opacity"===r)s(t,e[r]);else{var n="float"===r||"cssFloat"===r?"undefined"==typeof i.styleFloat?"cssFloat":"styleFloat":r;i[n]=e[r]}return t}var e=fabric.document.createElement("div"),i="string"==typeof e.style.opacity,r="string"==typeof e.style.filter,n=/alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/,s=function(t){return t};i?s=function(t,e){return t.style.opacity=e,t}:r&&(s=function(t,e){var i=t.style;return t.currentStyle&&!t.currentStyle.hasLayout&&(i.zoom=1),n.test(i.filter)?(e=e>=.9999?"":"alpha(opacity="+100*e+")",i.filter=i.filter.replace(n,e)):i.filter+=" alpha(opacity="+100*e+")",t}),fabric.util.setStyle=t}(),function(){function t(t){return"string"==typeof t?fabric.document.getElementById(t):t}function e(t,e){var i=fabric.document.createElement(t);for(var r in e)"class"===r?i.className=e[r]:"for"===r?i.htmlFor=e[r]:i.setAttribute(r,e[r]);return i}function i(t,e){t&&-1===(" "+t.className+" ").indexOf(" "+e+" ")&&(t.className+=(t.className?" ":"")+e)}function r(t,i,r){return"string"==typeof i&&(i=e(i,r)),t.parentNode&&t.parentNode.replaceChild(i,t),i.appendChild(t),i}function n(t,e){var i,r,n=0,s=0,o=fabric.document.documentElement,a=fabric.document.body||{scrollLeft:0,scrollTop:0};for(r=t;t&&t.parentNode&&!i;)t=t.parentNode,1===t.nodeType&&"fixed"===fabric.util.getElementStyle(t,"position")&&(i=t),1===t.nodeType&&r!==e&&"absolute"===fabric.util.getElementStyle(t,"position")?(n=0,s=0):t===fabric.document?(n=a.scrollLeft||o.scrollLeft||0,s=a.scrollTop||o.scrollTop||0):(n+=t.scrollLeft||0,s+=t.scrollTop||0);return{left:n,top:s}}function s(t){var e,i,r=t&&t.ownerDocument,n={left:0,top:0},s={left:0,top:0},o={borderLeftWidth:"left",borderTopWidth:"top",paddingLeft:"left",paddingTop:"top"};if(!r)return{left:0,top:0};for(var a in o)s[o[a]]+=parseInt(l(t,a),10)||0;return e=r.documentElement,"undefined"!=typeof t.getBoundingClientRect&&(n=t.getBoundingClientRect()),i=fabric.util.getScrollLeftTop(t,null),{left:n.left+i.left-(e.clientLeft||0)+s.left,top:n.top+i.top-(e.clientTop||0)+s.top}}var o,a=Array.prototype.slice,h=function(t){return a.call(t,0)};try{o=h(fabric.document.childNodes)instanceof Array}catch(c){}o||(h=function(t){for(var e=new Array(t.length),i=t.length;i--;)e[i]=t[i];return e});var l;l=fabric.document.defaultView&&fabric.document.defaultView.getComputedStyle?function(t,e){var i=fabric.document.defaultView.getComputedStyle(t,null);return i?i[e]:void 0}:function(t,e){var i=t.style[e];return!i&&t.currentStyle&&(i=t.currentStyle[e]),i},function(){function t(t){return"undefined"!=typeof t.onselectstart&&(t.onselectstart=fabric.util.falseFunction),r?t.style[r]="none":"string"==typeof t.unselectable&&(t.unselectable="on"),t}function e(t){return"undefined"!=typeof t.onselectstart&&(t.onselectstart=null),r?t.style[r]="":"string"==typeof t.unselectable&&(t.unselectable=""),t}var i=fabric.document.documentElement.style,r="userSelect"in i?"userSelect":"MozUserSelect"in i?"MozUserSelect":"WebkitUserSelect"in i?"WebkitUserSelect":"KhtmlUserSelect"in i?"KhtmlUserSelect":"";
fabric.util.makeElementUnselectable=t,fabric.util.makeElementSelectable=e}(),function(){function t(t,e){var i=fabric.document.getElementsByTagName("head")[0],r=fabric.document.createElement("script"),n=!0;r.onload=r.onreadystatechange=function(t){if(n){if("string"==typeof this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)return;n=!1,e(t||fabric.window.event),r=r.onload=r.onreadystatechange=null}},r.src=t,i.appendChild(r)}fabric.util.getScript=t}(),fabric.util.getById=t,fabric.util.toArray=h,fabric.util.makeElement=e,fabric.util.addClass=i,fabric.util.wrapElement=r,fabric.util.getScrollLeftTop=n,fabric.util.getElementOffset=s,fabric.util.getElementStyle=l}(),function(){function t(t,e){return t+(/\?/.test(t)?"&":"?")+e}function e(){}function i(i,n){n||(n={});var s,o=n.method?n.method.toUpperCase():"GET",a=n.onComplete||function(){},h=r();return h.onreadystatechange=function(){4===h.readyState&&(a(h),h.onreadystatechange=e)},"GET"===o&&(s=null,"string"==typeof n.parameters&&(i=t(i,n.parameters))),h.open(o,i,!0),("POST"===o||"PUT"===o)&&h.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),h.send(s),h}var r=function(){for(var t=[function(){return new ActiveXObject("Microsoft.XMLHTTP")},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml2.XMLHTTP.3.0")},function(){return new XMLHttpRequest}],e=t.length;e--;)try{var i=t[e]();if(i)return t[e]}catch(r){}}();fabric.util.request=i}(),fabric.log=function(){},fabric.warn=function(){},"undefined"!=typeof console&&["log","warn"].forEach(function(t){"undefined"!=typeof console[t]&&console[t].apply&&(fabric[t]=function(){return console[t].apply(console,arguments)})}),function(){function t(t){e(function(i){t||(t={});var r,n=i||+new Date,s=t.duration||500,o=n+s,a=t.onChange||function(){},h=t.abort||function(){return!1},c=t.easing||function(t,e,i,r){return-i*Math.cos(t/r*(Math.PI/2))+i+e},l="startValue"in t?t.startValue:0,u="endValue"in t?t.endValue:100,f=t.byValue||u-l;t.onStart&&t.onStart(),function d(i){r=i||+new Date;var u=r>o?s:r-n;return h()?void(t.onComplete&&t.onComplete()):(a(c(u,l,f,s)),r>o?void(t.onComplete&&t.onComplete()):void e(d))}(n)})}function e(){return i.apply(fabric.window,arguments)}var i=fabric.window.requestAnimationFrame||fabric.window.webkitRequestAnimationFrame||fabric.window.mozRequestAnimationFrame||fabric.window.oRequestAnimationFrame||fabric.window.msRequestAnimationFrame||function(t){fabric.window.setTimeout(t,1e3/60)};fabric.util.animate=t,fabric.util.requestAnimFrame=e}(),function(){function t(t,e,i,r){return t<Math.abs(e)?(t=e,r=i/4):r=i/(2*Math.PI)*Math.asin(e/t),{a:t,c:e,p:i,s:r}}function e(t,e,i){return t.a*Math.pow(2,10*(e-=1))*Math.sin(2*(e*i-t.s)*Math.PI/t.p)}function i(t,e,i,r){return i*((t=t/r-1)*t*t+1)+e}function r(t,e,i,r){return t/=r/2,1>t?i/2*t*t*t+e:i/2*((t-=2)*t*t+2)+e}function n(t,e,i,r){return i*(t/=r)*t*t*t+e}function s(t,e,i,r){return-i*((t=t/r-1)*t*t*t-1)+e}function o(t,e,i,r){return t/=r/2,1>t?i/2*t*t*t*t+e:-i/2*((t-=2)*t*t*t-2)+e}function a(t,e,i,r){return i*(t/=r)*t*t*t*t+e}function h(t,e,i,r){return i*((t=t/r-1)*t*t*t*t+1)+e}function c(t,e,i,r){return t/=r/2,1>t?i/2*t*t*t*t*t+e:i/2*((t-=2)*t*t*t*t+2)+e}function l(t,e,i,r){return-i*Math.cos(t/r*(Math.PI/2))+i+e}function u(t,e,i,r){return i*Math.sin(t/r*(Math.PI/2))+e}function f(t,e,i,r){return-i/2*(Math.cos(Math.PI*t/r)-1)+e}function d(t,e,i,r){return 0===t?e:i*Math.pow(2,10*(t/r-1))+e}function g(t,e,i,r){return t===r?e+i:i*(-Math.pow(2,-10*t/r)+1)+e}function p(t,e,i,r){return 0===t?e:t===r?e+i:(t/=r/2,1>t?i/2*Math.pow(2,10*(t-1))+e:i/2*(-Math.pow(2,-10*--t)+2)+e)}function v(t,e,i,r){return-i*(Math.sqrt(1-(t/=r)*t)-1)+e}function m(t,e,i,r){return i*Math.sqrt(1-(t=t/r-1)*t)+e}function y(t,e,i,r){return t/=r/2,1>t?-i/2*(Math.sqrt(1-t*t)-1)+e:i/2*(Math.sqrt(1-(t-=2)*t)+1)+e}function b(i,r,n,s){var o=1.70158,a=0,h=n;if(0===i)return r;if(i/=s,1===i)return r+n;a||(a=.3*s);var c=t(h,n,a,o);return-e(c,i,s)+r}function x(e,i,r,n){var s=1.70158,o=0,a=r;if(0===e)return i;if(e/=n,1===e)return i+r;o||(o=.3*n);var h=t(a,r,o,s);return h.a*Math.pow(2,-10*e)*Math.sin(2*(e*n-h.s)*Math.PI/h.p)+h.c+i}function _(i,r,n,s){var o=1.70158,a=0,h=n;if(0===i)return r;if(i/=s/2,2===i)return r+n;a||(a=.3*s*1.5);var c=t(h,n,a,o);return 1>i?-.5*e(c,i,s)+r:c.a*Math.pow(2,-10*(i-=1))*Math.sin(2*(i*s-c.s)*Math.PI/c.p)*.5+c.c+r}function C(t,e,i,r,n){return void 0===n&&(n=1.70158),i*(t/=r)*t*((n+1)*t-n)+e}function S(t,e,i,r,n){return void 0===n&&(n=1.70158),i*((t=t/r-1)*t*((n+1)*t+n)+1)+e}function w(t,e,i,r,n){return void 0===n&&(n=1.70158),t/=r/2,1>t?i/2*t*t*(((n*=1.525)+1)*t-n)+e:i/2*((t-=2)*t*(((n*=1.525)+1)*t+n)+2)+e}function O(t,e,i,r){return i-T(r-t,0,i,r)+e}function T(t,e,i,r){return(t/=r)<1/2.75?7.5625*i*t*t+e:2/2.75>t?i*(7.5625*(t-=1.5/2.75)*t+.75)+e:2.5/2.75>t?i*(7.5625*(t-=2.25/2.75)*t+.9375)+e:i*(7.5625*(t-=2.625/2.75)*t+.984375)+e}function E(t,e,i,r){return r/2>t?.5*O(2*t,0,i,r)+e:.5*T(2*t-r,0,i,r)+.5*i+e}fabric.util.ease={easeInQuad:function(t,e,i,r){return i*(t/=r)*t+e},easeOutQuad:function(t,e,i,r){return-i*(t/=r)*(t-2)+e},easeInOutQuad:function(t,e,i,r){return t/=r/2,1>t?i/2*t*t+e:-i/2*(--t*(t-2)-1)+e},easeInCubic:function(t,e,i,r){return i*(t/=r)*t*t+e},easeOutCubic:i,easeInOutCubic:r,easeInQuart:n,easeOutQuart:s,easeInOutQuart:o,easeInQuint:a,easeOutQuint:h,easeInOutQuint:c,easeInSine:l,easeOutSine:u,easeInOutSine:f,easeInExpo:d,easeOutExpo:g,easeInOutExpo:p,easeInCirc:v,easeOutCirc:m,easeInOutCirc:y,easeInElastic:b,easeOutElastic:x,easeInOutElastic:_,easeInBack:C,easeOutBack:S,easeInOutBack:w,easeInBounce:O,easeOutBounce:T,easeInOutBounce:E}}(),function(t){"use strict";function e(t){return t in _?_[t]:t}function i(t,e,i,r){var n,s="[object Array]"===Object.prototype.toString.call(e);return"fill"!==t&&"stroke"!==t||"none"!==e?"strokeDashArray"===t?e=e.replace(/,/g," ").split(/\s+/).map(function(t){return parseFloat(t)}):"transformMatrix"===t?e=i&&i.transformMatrix?x(i.transformMatrix,g.parseTransformAttribute(e)):g.parseTransformAttribute(e):"visible"===t?(e="none"===e||"hidden"===e?!1:!0,i&&i.visible===!1&&(e=!1)):"originX"===t?e="start"===e?"left":"end"===e?"right":"center":n=s?e.map(b):b(e,r):e="",!s&&isNaN(n)?e:n}function r(t){for(var e in C)if(t[e]&&"undefined"!=typeof t[C[e]]&&0!==t[e].indexOf("url(")){var i=new g.Color(t[e]);t[e]=i.setAlpha(y(i.getAlpha()*t[C[e]],2)).toRgba()}return t}function n(t,r){var n,s;t.replace(/;$/,"").split(";").forEach(function(t){var o=t.split(":");n=e(o[0].trim().toLowerCase()),s=i(n,o[1].trim()),r[n]=s})}function s(t,r){var n,s;for(var o in t)"undefined"!=typeof t[o]&&(n=e(o.toLowerCase()),s=i(n,t[o]),r[n]=s)}function o(t,e){var i={};for(var r in g.cssRules[e])if(a(t,r.split(" ")))for(var n in g.cssRules[e][r])i[n]=g.cssRules[e][r][n];return i}function a(t,e){var i,r=!0;return i=c(t,e.pop()),i&&e.length&&(r=h(t,e)),i&&r&&0===e.length}function h(t,e){for(var i,r=!0;t.parentNode&&1===t.parentNode.nodeType&&e.length;)r&&(i=e.pop()),t=t.parentNode,r=c(t,i);return 0===e.length}function c(t,e){var i,r=t.nodeName,n=t.getAttribute("class"),s=t.getAttribute("id");if(i=new RegExp("^"+r,"i"),e=e.replace(i,""),s&&e.length&&(i=new RegExp("#"+s+"(?![a-zA-Z\\-]+)","i"),e=e.replace(i,"")),n&&e.length){n=n.split(" ");for(var o=n.length;o--;)i=new RegExp("\\."+n[o]+"(?![a-zA-Z\\-]+)","i"),e=e.replace(i,"")}return 0===e.length}function l(t){for(var e=t.getElementsByTagName("use");e.length;){for(var i,r=e[0],n=r.getAttribute("xlink:href").substr(1),s=r.getAttribute("x")||0,o=r.getAttribute("y")||0,a=t.getElementById(n).cloneNode(!0),h=(a.getAttribute("transform")||"")+" translate("+s+", "+o+")",c=0,l=r.attributes,u=l.length;u>c;c++){var f=l.item(c);"x"!==f.nodeName&&"y"!==f.nodeName&&"xlink:href"!==f.nodeName&&("transform"===f.nodeName?h=f.nodeValue+" "+h:a.setAttribute(f.nodeName,f.nodeValue))}a.setAttribute("transform",h),a.setAttribute("instantiated_by_use","1"),a.removeAttribute("id"),i=r.parentNode,i.replaceChild(a,r)}}function u(t,e,i){var r,n,s,o,a=new RegExp("^\\s*("+g.reNum+"+)\\s*,?\\s*("+g.reNum+"+)\\s*,?\\s*("+g.reNum+"+)\\s*,?\\s*("+g.reNum+"+)\\s*$"),h=t.getAttribute("viewBox"),c=1,l=1,u=0,f=0;if(h&&(h=h.match(a))&&(u=-parseFloat(h[1]),f=-parseFloat(h[2]),r=parseFloat(h[3]),n=parseFloat(h[4]),e&&e!==r&&(c=e/r),i&&i!==n&&(l=i/n),l=c=c>l?l:c,1!==c||1!==l||0!==u||0!==f)){if(s="matrix("+c+" 0 0 "+l+" "+u*c+" "+f*l+")","svg"===t.tagName){for(o=t.ownerDocument.createElement("g");null!=t.firstChild;)o.appendChild(t.firstChild);t.appendChild(o)}else o=t,s+=o.getAttribute("transform");o.setAttribute("transform",s)}}function f(t){var e=t.objects,i=t.options;return e=e.map(function(t){return g[v(t.type)].fromObject(t)}),{objects:e,options:i}}function d(t,e,i){e[i]&&e[i].toSVG&&t.push('<pattern x="0" y="0" id="',i,'Pattern" ','width="',e[i].source.width,'" height="',e[i].source.height,'" patternUnits="userSpaceOnUse">','<image x="0" y="0" ','width="',e[i].source.width,'" height="',e[i].source.height,'" xlink:href="',e[i].source.src,'"></image></pattern>')}var g=t.fabric||(t.fabric={}),p=g.util.object.extend,v=g.util.string.capitalize,m=g.util.object.clone,y=g.util.toFixed,b=g.util.parseUnit,x=g.util.multiplyTransformMatrices,_={cx:"left",x:"left",r:"radius",cy:"top",y:"top",display:"visible",visibility:"visible",transform:"transformMatrix","fill-opacity":"fillOpacity","fill-rule":"fillRule","font-family":"fontFamily","font-size":"fontSize","font-style":"fontStyle","font-weight":"fontWeight","stroke-dasharray":"strokeDashArray","stroke-linecap":"strokeLineCap","stroke-linejoin":"strokeLineJoin","stroke-miterlimit":"strokeMiterLimit","stroke-opacity":"strokeOpacity","stroke-width":"strokeWidth","text-decoration":"textDecoration","text-anchor":"originX"},C={stroke:"strokeOpacity",fill:"fillOpacity"};g.cssRules={},g.gradientDefs={},g.parseTransformAttribute=function(){function t(t,e){var i=e[0];t[0]=Math.cos(i),t[1]=Math.sin(i),t[2]=-Math.sin(i),t[3]=Math.cos(i)}function e(t,e){var i=e[0],r=2===e.length?e[1]:e[0];t[0]=i,t[3]=r}function i(t,e){t[2]=Math.tan(g.util.degreesToRadians(e[0]))}function r(t,e){t[1]=Math.tan(g.util.degreesToRadians(e[0]))}function n(t,e){t[4]=e[0],2===e.length&&(t[5]=e[1])}var s=[1,0,0,1,0,0],o=g.reNum,a="(?:\\s+,?\\s*|,\\s*)",h="(?:(skewX)\\s*\\(\\s*("+o+")\\s*\\))",c="(?:(skewY)\\s*\\(\\s*("+o+")\\s*\\))",l="(?:(rotate)\\s*\\(\\s*("+o+")(?:"+a+"("+o+")"+a+"("+o+"))?\\s*\\))",u="(?:(scale)\\s*\\(\\s*("+o+")(?:"+a+"("+o+"))?\\s*\\))",f="(?:(translate)\\s*\\(\\s*("+o+")(?:"+a+"("+o+"))?\\s*\\))",d="(?:(matrix)\\s*\\(\\s*("+o+")"+a+"("+o+")"+a+"("+o+")"+a+"("+o+")"+a+"("+o+")"+a+"("+o+")\\s*\\))",p="(?:"+d+"|"+f+"|"+u+"|"+l+"|"+h+"|"+c+")",v="(?:"+p+"(?:"+a+p+")*)",m="^\\s*(?:"+v+"?)\\s*$",y=new RegExp(m),b=new RegExp(p,"g");return function(o){var a=s.concat(),h=[];if(!o||o&&!y.test(o))return a;o.replace(b,function(o){var c=new RegExp(p).exec(o).filter(function(t){return""!==t&&null!=t}),l=c[1],u=c.slice(2).map(parseFloat);switch(l){case"translate":n(a,u);break;case"rotate":u[0]=g.util.degreesToRadians(u[0]),t(a,u);break;case"scale":e(a,u);break;case"skewX":i(a,u);break;case"skewY":r(a,u);break;case"matrix":a=u}h.push(a.concat()),a=s.concat()});for(var c=h[0];h.length>1;)h.shift(),c=g.util.multiplyTransformMatrices(c,h[0]);return c}}(),g.parseSVGDocument=function(){function t(t,e){for(;t&&(t=t.parentNode);)if(e.test(t.nodeName)&&!t.getAttribute("instantiated_by_use"))return!0;return!1}var e=/^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/,i=/^(symbol|image|marker|pattern|view)$/;return function(r,n,s){if(r){l(r);var o=new Date,a=g.Object.__uid++,h=b(r.getAttribute("width")||"100%"),c=b(r.getAttribute("height")||"100%");u(r,h,c);var f=g.util.toArray(r.getElementsByTagName("*"));if(0===f.length&&g.isLikelyNode){f=r.selectNodes('//*[name(.)!="svg"]');for(var d=[],p=0,v=f.length;v>p;p++)d[p]=f[p];f=d}var y=f.filter(function(r){return i.test(r.tagName)&&u(r,0,0),e.test(r.tagName)&&!t(r,/^(?:pattern|defs|symbol)$/)});if(!y||y&&!y.length)return void(n&&n([],{}));var x={width:h,height:c,widthAttr:h,heightAttr:c,svgUid:a};g.gradientDefs[a]=g.getGradientDefs(r),g.cssRules[a]=g.getCSSRules(r),g.parseElements(y,function(t){g.documentParsingTime=new Date-o,n&&n(t,x)},m(x),s)}}}();var S={has:function(t,e){e(!1)},get:function(){},set:function(){}};p(g,{parseFontDeclaration:function(t,e){var i="(normal|italic)?\\s*(normal|small-caps)?\\s*(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\s*("+g.reNum+"(?:px|cm|mm|em|pt|pc|in)*)(?:\\/(normal|"+g.reNum+"))?\\s+(.*)",r=t.match(i);if(r){var n=r[1],s=r[3],o=r[4],a=r[5],h=r[6];n&&(e.fontStyle=n),s&&(e.fontWeight=isNaN(parseFloat(s))?s:parseFloat(s)),o&&(e.fontSize=b(o)),h&&(e.fontFamily=h),a&&(e.lineHeight="normal"===a?1:a)}},getGradientDefs:function(t){var e,i,r,n,s=t.getElementsByTagName("linearGradient"),o=t.getElementsByTagName("radialGradient"),a=0,h=[],c={},l={};for(h.length=s.length+o.length,i=s.length;i--;)h[a++]=s[i];for(i=o.length;i--;)h[a++]=o[i];for(;a--;)e=h[a],n=e.getAttribute("xlink:href"),r=e.getAttribute("id"),n&&(l[r]=n.substr(1)),c[r]=e;for(r in l){var u=c[l[r]].cloneNode(!0);for(e=c[r];u.firstChild;)e.appendChild(u.firstChild)}return c},parseAttributes:function(t,n,s){if(t){var a,h,c={};"undefined"==typeof s&&(s=t.getAttribute("svgUid")),t.parentNode&&/^symbol|[g|a]$/i.test(t.parentNode.nodeName)&&(c=g.parseAttributes(t.parentNode,n,s)),h=c&&c.fontSize||t.getAttribute("font-size")||g.Text.DEFAULT_SVG_FONT_SIZE;var l=n.reduce(function(r,n){return a=t.getAttribute(n),a&&(n=e(n),a=i(n,a,c,h),r[n]=a),r},{});return l=p(l,p(o(t,s),g.parseStyleAttribute(t))),l.font&&g.parseFontDeclaration(l.font,l),r(p(c,l))}},parseElements:function(t,e,i,r){new g.ElementsParser(t,e,i,r).parse()},parseStyleAttribute:function(t){var e={},i=t.getAttribute("style");return i?("string"==typeof i?n(i,e):s(i,e),e):e},parsePointsAttribute:function(t){if(!t)return null;t=t.replace(/,/g," ").trim(),t=t.split(/\s+/);var e,i,r=[];for(e=0,i=t.length;i>e;e+=2)r.push({x:parseFloat(t[e]),y:parseFloat(t[e+1])});return r},getCSSRules:function(t){for(var r,n=t.getElementsByTagName("style"),s={},o=0,a=n.length;a>o;o++){var h=n[o].textContent;h=h.replace(/\/\*[\s\S]*?\*\//g,""),""!==h.trim()&&(r=h.match(/[^{]*\{[\s\S]*?\}/g),r=r.map(function(t){return t.trim()}),r.forEach(function(t){for(var r=t.match(/([\s\S]*?)\s*\{([^}]*)\}/),n={},o=r[2].trim(),a=o.replace(/;$/,"").split(/\s*;\s*/),h=0,c=a.length;c>h;h++){var l=a[h].split(/\s*:\s*/),u=e(l[0]),f=i(u,l[1],l[0]);n[u]=f}t=r[1],t.split(",").forEach(function(t){t=t.replace(/^svg/i,"").trim(),""!==t&&(s[t]=g.util.object.clone(n))})}))}return s},loadSVGFromURL:function(t,e,i){function r(r){var n=r.responseXML;n&&!n.documentElement&&g.window.ActiveXObject&&r.responseText&&(n=new ActiveXObject("Microsoft.XMLDOM"),n.async="false",n.loadXML(r.responseText.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i,""))),n&&n.documentElement&&g.parseSVGDocument(n.documentElement,function(i,r){S.set(t,{objects:g.util.array.invoke(i,"toObject"),options:r}),e(i,r)},i)}t=t.replace(/^\n\s*/,"").trim(),S.has(t,function(i){i?S.get(t,function(t){var i=f(t);e(i.objects,i.options)}):new g.util.request(t,{method:"get",onComplete:r})})},loadSVGFromString:function(t,e,i){t=t.trim();var r;if("undefined"!=typeof DOMParser){var n=new DOMParser;n&&n.parseFromString&&(r=n.parseFromString(t,"text/xml"))}else g.window.ActiveXObject&&(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(t.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i,"")));g.parseSVGDocument(r.documentElement,function(t,i){e(t,i)},i)},createSVGFontFacesMarkup:function(t){for(var e="",i=0,r=t.length;r>i;i++)"text"===t[i].type&&t[i].path&&(e+=["@font-face {","font-family: ",t[i].fontFamily,"; ","src: url('",t[i].path,"')","}"].join(""));return e&&(e=['<style type="text/css">',"<![CDATA[",e,"]]>","</style>"].join("")),e},createSVGRefElementsMarkup:function(t){var e=[];return d(e,t,"backgroundColor"),d(e,t,"overlayColor"),e.join("")}})}("undefined"!=typeof exports?exports:this),fabric.ElementsParser=function(t,e,i,r){this.elements=t,this.callback=e,this.options=i,this.reviver=r,this.svgUid=i&&i.svgUid||0},fabric.ElementsParser.prototype.parse=function(){this.instances=new Array(this.elements.length),this.numElements=this.elements.length,this.createObjects()},fabric.ElementsParser.prototype.createObjects=function(){for(var t=0,e=this.elements.length;e>t;t++)this.elements[t].setAttribute("svgUid",this.svgUid),function(t,e){setTimeout(function(){t.createObject(t.elements[e],e)},0)}(this,t)},fabric.ElementsParser.prototype.createObject=function(t,e){var i=fabric[fabric.util.string.capitalize(t.tagName)];if(i&&i.fromElement)try{this._createObject(i,t,e)}catch(r){fabric.log(r)}else this.checkIfDone()},fabric.ElementsParser.prototype._createObject=function(t,e,i){if(t.async)t.fromElement(e,this.createCallback(i,e),this.options);else{var r=t.fromElement(e,this.options);this.resolveGradient(r,"fill"),this.resolveGradient(r,"stroke"),this.reviver&&this.reviver(e,r),this.instances[i]=r,this.checkIfDone()}},fabric.ElementsParser.prototype.createCallback=function(t,e){var i=this;return function(r){i.resolveGradient(r,"fill"),i.resolveGradient(r,"stroke"),i.reviver&&i.reviver(e,r),i.instances[t]=r,i.checkIfDone()}},fabric.ElementsParser.prototype.resolveGradient=function(t,e){var i=t.get(e);if(/^url\(/.test(i)){var r=i.slice(5,i.length-1);fabric.gradientDefs[this.svgUid][r]&&t.set(e,fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][r],t))}},fabric.ElementsParser.prototype.checkIfDone=function(){0===--this.numElements&&(this.instances=this.instances.filter(function(t){return null!=t}),this.callback(this.instances))},function(t){"use strict";function e(t,e){this.x=t,this.y=e}var i=t.fabric||(t.fabric={});return i.Point?void i.warn("fabric.Point is already defined"):(i.Point=e,void(e.prototype={constructor:e,add:function(t){return new e(this.x+t.x,this.y+t.y)},addEquals:function(t){return this.x+=t.x,this.y+=t.y,this},scalarAdd:function(t){return new e(this.x+t,this.y+t)},scalarAddEquals:function(t){return this.x+=t,this.y+=t,this},subtract:function(t){return new e(this.x-t.x,this.y-t.y)},subtractEquals:function(t){return this.x-=t.x,this.y-=t.y,this},scalarSubtract:function(t){return new e(this.x-t,this.y-t)},scalarSubtractEquals:function(t){return this.x-=t,this.y-=t,this},multiply:function(t){return new e(this.x*t,this.y*t)},multiplyEquals:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return new e(this.x/t,this.y/t)},divideEquals:function(t){return this.x/=t,this.y/=t,this},eq:function(t){return this.x===t.x&&this.y===t.y},lt:function(t){return this.x<t.x&&this.y<t.y},lte:function(t){return this.x<=t.x&&this.y<=t.y},gt:function(t){return this.x>t.x&&this.y>t.y},gte:function(t){return this.x>=t.x&&this.y>=t.y},lerp:function(t,i){return new e(this.x+(t.x-this.x)*i,this.y+(t.y-this.y)*i)},distanceFrom:function(t){var e=this.x-t.x,i=this.y-t.y;return Math.sqrt(e*e+i*i)},midPointFrom:function(t){return new e(this.x+(t.x-this.x)/2,this.y+(t.y-this.y)/2)},min:function(t){return new e(Math.min(this.x,t.x),Math.min(this.y,t.y))},max:function(t){return new e(Math.max(this.x,t.x),Math.max(this.y,t.y))},toString:function(){return this.x+","+this.y},setXY:function(t,e){this.x=t,this.y=e},setFromPoint:function(t){this.x=t.x,this.y=t.y},swap:function(t){var e=this.x,i=this.y;this.x=t.x,this.y=t.y,t.x=e,t.y=i}}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";function e(t){this.status=t,this.points=[]}var i=t.fabric||(t.fabric={});return i.Intersection?void i.warn("fabric.Intersection is already defined"):(i.Intersection=e,i.Intersection.prototype={appendPoint:function(t){this.points.push(t)},appendPoints:function(t){this.points=this.points.concat(t)}},i.Intersection.intersectLineLine=function(t,r,n,s){var o,a=(s.x-n.x)*(t.y-n.y)-(s.y-n.y)*(t.x-n.x),h=(r.x-t.x)*(t.y-n.y)-(r.y-t.y)*(t.x-n.x),c=(s.y-n.y)*(r.x-t.x)-(s.x-n.x)*(r.y-t.y);if(0!==c){var l=a/c,u=h/c;l>=0&&1>=l&&u>=0&&1>=u?(o=new e("Intersection"),o.points.push(new i.Point(t.x+l*(r.x-t.x),t.y+l*(r.y-t.y)))):o=new e}else o=new e(0===a||0===h?"Coincident":"Parallel");return o},i.Intersection.intersectLinePolygon=function(t,i,r){for(var n=new e,s=r.length,o=0;s>o;o++){var a=r[o],h=r[(o+1)%s],c=e.intersectLineLine(t,i,a,h);n.appendPoints(c.points)}return n.points.length>0&&(n.status="Intersection"),n},i.Intersection.intersectPolygonPolygon=function(t,i){for(var r=new e,n=t.length,s=0;n>s;s++){var o=t[s],a=t[(s+1)%n],h=e.intersectLinePolygon(o,a,i);r.appendPoints(h.points)}return r.points.length>0&&(r.status="Intersection"),r},void(i.Intersection.intersectPolygonRectangle=function(t,r,n){var s=r.min(n),o=r.max(n),a=new i.Point(o.x,s.y),h=new i.Point(s.x,o.y),c=e.intersectLinePolygon(s,a,t),l=e.intersectLinePolygon(a,o,t),u=e.intersectLinePolygon(o,h,t),f=e.intersectLinePolygon(h,s,t),d=new e;return d.appendPoints(c.points),d.appendPoints(l.points),d.appendPoints(u.points),d.appendPoints(f.points),d.points.length>0&&(d.status="Intersection"),d}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";function e(t){t?this._tryParsingColor(t):this.setSource([0,0,0,1])}function i(t,e,i){return 0>i&&(i+=1),i>1&&(i-=1),1/6>i?t+6*(e-t)*i:.5>i?e:2/3>i?t+(e-t)*(2/3-i)*6:t}var r=t.fabric||(t.fabric={});return r.Color?void r.warn("fabric.Color is already defined."):(r.Color=e,r.Color.prototype={_tryParsingColor:function(t){var i;return t in e.colorNameMap&&(t=e.colorNameMap[t]),"transparent"===t?void this.setSource([255,255,255,0]):(i=e.sourceFromHex(t),i||(i=e.sourceFromRgb(t)),i||(i=e.sourceFromHsl(t)),void(i&&this.setSource(i)))},_rgbToHsl:function(t,e,i){t/=255,e/=255,i/=255;var n,s,o,a=r.util.array.max([t,e,i]),h=r.util.array.min([t,e,i]);if(o=(a+h)/2,a===h)n=s=0;else{var c=a-h;switch(s=o>.5?c/(2-a-h):c/(a+h),a){case t:n=(e-i)/c+(i>e?6:0);break;case e:n=(i-t)/c+2;break;case i:n=(t-e)/c+4}n/=6}return[Math.round(360*n),Math.round(100*s),Math.round(100*o)]},getSource:function(){return this._source},setSource:function(t){this._source=t},toRgb:function(){var t=this.getSource();return"rgb("+t[0]+","+t[1]+","+t[2]+")"},toRgba:function(){var t=this.getSource();return"rgba("+t[0]+","+t[1]+","+t[2]+","+t[3]+")"},toHsl:function(){var t=this.getSource(),e=this._rgbToHsl(t[0],t[1],t[2]);return"hsl("+e[0]+","+e[1]+"%,"+e[2]+"%)"},toHsla:function(){var t=this.getSource(),e=this._rgbToHsl(t[0],t[1],t[2]);return"hsla("+e[0]+","+e[1]+"%,"+e[2]+"%,"+t[3]+")"},toHex:function(){var t,e,i,r=this.getSource();return t=r[0].toString(16),t=1===t.length?"0"+t:t,e=r[1].toString(16),e=1===e.length?"0"+e:e,i=r[2].toString(16),i=1===i.length?"0"+i:i,t.toUpperCase()+e.toUpperCase()+i.toUpperCase()},getAlpha:function(){return this.getSource()[3]},setAlpha:function(t){var e=this.getSource();return e[3]=t,this.setSource(e),this},toGrayscale:function(){var t=this.getSource(),e=parseInt((.3*t[0]+.59*t[1]+.11*t[2]).toFixed(0),10),i=t[3];return this.setSource([e,e,e,i]),this},toBlackWhite:function(t){var e=this.getSource(),i=(.3*e[0]+.59*e[1]+.11*e[2]).toFixed(0),r=e[3];return t=t||127,i=Number(i)<Number(t)?0:255,this.setSource([i,i,i,r]),this},overlayWith:function(t){t instanceof e||(t=new e(t));for(var i=[],r=this.getAlpha(),n=.5,s=this.getSource(),o=t.getSource(),a=0;3>a;a++)i.push(Math.round(s[a]*(1-n)+o[a]*n));return i[3]=r,this.setSource(i),this}},r.Color.reRGBa=/^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/,r.Color.reHSLa=/^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/,r.Color.reHex=/^#?([0-9a-f]{6}|[0-9a-f]{3})$/i,r.Color.colorNameMap={aqua:"#00FFFF",black:"#000000",blue:"#0000FF",fuchsia:"#FF00FF",gray:"#808080",green:"#008000",lime:"#00FF00",maroon:"#800000",navy:"#000080",olive:"#808000",orange:"#FFA500",purple:"#800080",red:"#FF0000",silver:"#C0C0C0",teal:"#008080",white:"#FFFFFF",yellow:"#FFFF00"},r.Color.fromRgb=function(t){return e.fromSource(e.sourceFromRgb(t))},r.Color.sourceFromRgb=function(t){var i=t.match(e.reRGBa);if(i){var r=parseInt(i[1],10)/(/%$/.test(i[1])?100:1)*(/%$/.test(i[1])?255:1),n=parseInt(i[2],10)/(/%$/.test(i[2])?100:1)*(/%$/.test(i[2])?255:1),s=parseInt(i[3],10)/(/%$/.test(i[3])?100:1)*(/%$/.test(i[3])?255:1);return[parseInt(r,10),parseInt(n,10),parseInt(s,10),i[4]?parseFloat(i[4]):1]}},r.Color.fromRgba=e.fromRgb,r.Color.fromHsl=function(t){return e.fromSource(e.sourceFromHsl(t))},r.Color.sourceFromHsl=function(t){var r=t.match(e.reHSLa);if(r){var n,s,o,a=(parseFloat(r[1])%360+360)%360/360,h=parseFloat(r[2])/(/%$/.test(r[2])?100:1),c=parseFloat(r[3])/(/%$/.test(r[3])?100:1);if(0===h)n=s=o=c;else{var l=.5>=c?c*(h+1):c+h-c*h,u=2*c-l;n=i(u,l,a+1/3),s=i(u,l,a),o=i(u,l,a-1/3)}return[Math.round(255*n),Math.round(255*s),Math.round(255*o),r[4]?parseFloat(r[4]):1]}},r.Color.fromHsla=e.fromHsl,r.Color.fromHex=function(t){return e.fromSource(e.sourceFromHex(t))},r.Color.sourceFromHex=function(t){if(t.match(e.reHex)){var i=t.slice(t.indexOf("#")+1),r=3===i.length,n=r?i.charAt(0)+i.charAt(0):i.substring(0,2),s=r?i.charAt(1)+i.charAt(1):i.substring(2,4),o=r?i.charAt(2)+i.charAt(2):i.substring(4,6);return[parseInt(n,16),parseInt(s,16),parseInt(o,16),1]}},void(r.Color.fromSource=function(t){var i=new e;return i.setSource(t),i}))}("undefined"!=typeof exports?exports:this),function(){function t(t){var e,i,r,n=t.getAttribute("style"),s=t.getAttribute("offset");if(s=parseFloat(s)/(/%$/.test(s)?100:1),s=0>s?0:s>1?1:s,n){var o=n.split(/\s*;\s*/);""===o[o.length-1]&&o.pop();for(var a=o.length;a--;){var h=o[a].split(/\s*:\s*/),c=h[0].trim(),l=h[1].trim();"stop-color"===c?e=l:"stop-opacity"===c&&(r=l)}}return e||(e=t.getAttribute("stop-color")||"rgb(0,0,0)"),r||(r=t.getAttribute("stop-opacity")),e=new fabric.Color(e),i=e.getAlpha(),r=isNaN(parseFloat(r))?1:parseFloat(r),r*=i,{offset:s,color:e.toRgb(),opacity:r}}function e(t){return{x1:t.getAttribute("x1")||0,y1:t.getAttribute("y1")||0,x2:t.getAttribute("x2")||"100%",y2:t.getAttribute("y2")||0}}function i(t){return{x1:t.getAttribute("fx")||t.getAttribute("cx")||"50%",y1:t.getAttribute("fy")||t.getAttribute("cy")||"50%",r1:0,x2:t.getAttribute("cx")||"50%",y2:t.getAttribute("cy")||"50%",r2:t.getAttribute("r")||"50%"}}function r(t,e,i){var r,n=0,s=1,o="";for(var a in e)r=parseFloat(e[a],10),s="string"==typeof e[a]&&/^\d+%$/.test(e[a])?.01:1,"x1"===a||"x2"===a||"r2"===a?(s*="objectBoundingBox"===i?t.width:1,n="objectBoundingBox"===i?t.left||0:0):("y1"===a||"y2"===a)&&(s*="objectBoundingBox"===i?t.height:1,n="objectBoundingBox"===i?t.top||0:0),e[a]=r*s+n;if("ellipse"===t.type&&null!==e.r2&&"objectBoundingBox"===i&&t.rx!==t.ry){var h=t.ry/t.rx;o=" scale(1, "+h+")",e.y1&&(e.y1/=h),e.y2&&(e.y2/=h)}return o}fabric.Gradient=fabric.util.createClass({offsetX:0,offsetY:0,initialize:function(t){t||(t={});var e={};this.id=fabric.Object.__uid++,this.type=t.type||"linear",e={x1:t.coords.x1||0,y1:t.coords.y1||0,x2:t.coords.x2||0,y2:t.coords.y2||0},"radial"===this.type&&(e.r1=t.coords.r1||0,e.r2=t.coords.r2||0),this.coords=e,this.colorStops=t.colorStops.slice(),t.gradientTransform&&(this.gradientTransform=t.gradientTransform),this.offsetX=t.offsetX||this.offsetX,this.offsetY=t.offsetY||this.offsetY},addColorStop:function(t){for(var e in t){var i=new fabric.Color(t[e]);this.colorStops.push({offset:e,color:i.toRgb(),opacity:i.getAlpha()})}return this},toObject:function(){return{type:this.type,coords:this.coords,colorStops:this.colorStops,offsetX:this.offsetX,offsetY:this.offsetY}},toSVG:function(t){var e,i,r=fabric.util.object.clone(this.coords);if(this.colorStops.sort(function(t,e){return t.offset-e.offset}),!t.group||"path-group"!==t.group.type)for(var n in r)"x1"===n||"x2"===n||"r2"===n?r[n]+=this.offsetX-t.width/2:("y1"===n||"y2"===n)&&(r[n]+=this.offsetY-t.height/2);i='id="SVGID_'+this.id+'" gradientUnits="userSpaceOnUse"',this.gradientTransform&&(i+=' gradientTransform="matrix('+this.gradientTransform.join(" ")+')" '),"linear"===this.type?e=["<linearGradient ",i,' x1="',r.x1,'" y1="',r.y1,'" x2="',r.x2,'" y2="',r.y2,'">\n']:"radial"===this.type&&(e=["<radialGradient ",i,' cx="',r.x2,'" cy="',r.y2,'" r="',r.r2,'" fx="',r.x1,'" fy="',r.y1,'">\n']);for(var s=0;s<this.colorStops.length;s++)e.push("<stop ",'offset="',100*this.colorStops[s].offset+"%",'" style="stop-color:',this.colorStops[s].color,null!=this.colorStops[s].opacity?";stop-opacity: "+this.colorStops[s].opacity:";",'"/>\n');return e.push("linear"===this.type?"</linearGradient>\n":"</radialGradient>\n"),e.join("")},toLive:function(t,e){var i,r=fabric.util.object.clone(this.coords);if(this.type){if(e.group&&"path-group"===e.group.type)for(var n in r)"x1"===n||"x2"===n?r[n]+=-this.offsetX+e.width/2:("y1"===n||"y2"===n)&&(r[n]+=-this.offsetY+e.height/2);"linear"===this.type?i=t.createLinearGradient(r.x1,r.y1,r.x2,r.y2):"radial"===this.type&&(i=t.createRadialGradient(r.x1,r.y1,r.r1,r.x2,r.y2,r.r2));for(var s=0,o=this.colorStops.length;o>s;s++){var a=this.colorStops[s].color,h=this.colorStops[s].opacity,c=this.colorStops[s].offset;"undefined"!=typeof h&&(a=new fabric.Color(a).setAlpha(h).toRgba()),i.addColorStop(parseFloat(c),a)}return i}}}),fabric.util.object.extend(fabric.Gradient,{fromElement:function(n,s){var o,a=n.getElementsByTagName("stop"),h="linearGradient"===n.nodeName?"linear":"radial",c=n.getAttribute("gradientUnits")||"objectBoundingBox",l=n.getAttribute("gradientTransform"),u=[],f={};"linear"===h?f=e(n):"radial"===h&&(f=i(n));for(var d=a.length;d--;)u.push(t(a[d]));o=r(s,f,c);var g=new fabric.Gradient({type:h,coords:f,colorStops:u,offsetX:-s.left,offsetY:-s.top});return(l||""!==o)&&(g.gradientTransform=fabric.parseTransformAttribute((l||"")+o)),g},forObject:function(t,e){return e||(e={}),r(t,e.coords,"userSpaceOnUse"),new fabric.Gradient(e)}})}(),fabric.Pattern=fabric.util.createClass({repeat:"repeat",offsetX:0,offsetY:0,initialize:function(t){if(t||(t={}),this.id=fabric.Object.__uid++,t.source)if("string"==typeof t.source)if("undefined"!=typeof fabric.util.getFunctionBody(t.source))this.source=new Function(fabric.util.getFunctionBody(t.source));else{var e=this;this.source=fabric.util.createImage(),fabric.util.loadImage(t.source,function(t){e.source=t})}else this.source=t.source;t.repeat&&(this.repeat=t.repeat),t.offsetX&&(this.offsetX=t.offsetX),t.offsetY&&(this.offsetY=t.offsetY)},toObject:function(){var t;return"function"==typeof this.source?t=String(this.source):"string"==typeof this.source.src&&(t=this.source.src),{source:t,repeat:this.repeat,offsetX:this.offsetX,offsetY:this.offsetY}},toSVG:function(t){var e="function"==typeof this.source?this.source():this.source,i=e.width/t.getWidth(),r=e.height/t.getHeight(),n=this.offsetX/t.getWidth(),s=this.offsetY/t.getHeight(),o="";return("repeat-x"===this.repeat||"no-repeat"===this.repeat)&&(r=1),("repeat-y"===this.repeat||"no-repeat"===this.repeat)&&(i=1),e.src?o=e.src:e.toDataURL&&(o=e.toDataURL()),'<pattern id="SVGID_'+this.id+'" x="'+n+'" y="'+s+'" width="'+i+'" height="'+r+'">\n<image x="0" y="0" width="'+e.width+'" height="'+e.height+'" xlink:href="'+o+'"></image>\n</pattern>\n'},toLive:function(t){var e="function"==typeof this.source?this.source():this.source;if(!e)return"";if("undefined"!=typeof e.src){if(!e.complete)return"";if(0===e.naturalWidth||0===e.naturalHeight)return""}return t.createPattern(e,this.repeat)}}),function(t){"use strict";var e=t.fabric||(t.fabric={});return e.Shadow?void e.warn("fabric.Shadow is already defined."):(e.Shadow=e.util.createClass({color:"rgb(0,0,0)",blur:0,offsetX:0,offsetY:0,affectStroke:!1,includeDefaultValues:!0,initialize:function(t){"string"==typeof t&&(t=this._parseShadow(t));for(var i in t)this[i]=t[i];this.id=e.Object.__uid++},_parseShadow:function(t){var i=t.trim(),r=e.Shadow.reOffsetsAndBlur.exec(i)||[],n=i.replace(e.Shadow.reOffsetsAndBlur,"")||"rgb(0,0,0)";return{color:n.trim(),offsetX:parseInt(r[1],10)||0,offsetY:parseInt(r[2],10)||0,blur:parseInt(r[3],10)||0}
},toString:function(){return[this.offsetX,this.offsetY,this.blur,this.color].join("px ")},toSVG:function(t){var e="SourceAlpha",i=40,r=40;return!t||t.fill!==this.color&&t.stroke!==this.color||(e="SourceGraphic"),t.width&&t.height&&(i=100*Math.abs(this.offsetX/t.getWidth())+20,r=100*Math.abs(this.offsetY/t.getHeight())+20),'<filter id="SVGID_'+this.id+'" y="-'+r+'%" height="'+(100+2*r)+'%" x="-'+i+'%" width="'+(100+2*i)+'%" >\n	<feGaussianBlur in="'+e+'" stdDeviation="'+(this.blur?this.blur/3:0)+'"></feGaussianBlur>\n	<feOffset dx="'+this.offsetX+'" dy="'+this.offsetY+'"></feOffset>\n	<feMerge>\n		<feMergeNode></feMergeNode>\n		<feMergeNode in="SourceGraphic"></feMergeNode>\n	</feMerge>\n</filter>\n'},toObject:function(){if(this.includeDefaultValues)return{color:this.color,blur:this.blur,offsetX:this.offsetX,offsetY:this.offsetY};var t={},i=e.Shadow.prototype;return this.color!==i.color&&(t.color=this.color),this.blur!==i.blur&&(t.blur=this.blur),this.offsetX!==i.offsetX&&(t.offsetX=this.offsetX),this.offsetY!==i.offsetY&&(t.offsetY=this.offsetY),t}}),void(e.Shadow.reOffsetsAndBlur=/(?:\s|^)(-?\d+(?:px)?(?:\s?|$))?(-?\d+(?:px)?(?:\s?|$))?(\d+(?:px)?)?(?:\s?|$)(?:$|\s)/))}("undefined"!=typeof exports?exports:this),function(){"use strict";if(fabric.StaticCanvas)return void fabric.warn("fabric.StaticCanvas is already defined.");var t=fabric.util.object.extend,e=fabric.util.getElementOffset,i=fabric.util.removeFromArray,r=new Error("Could not initialize `canvas` element");fabric.StaticCanvas=fabric.util.createClass({initialize:function(t,e){e||(e={}),this._initStatic(t,e),fabric.StaticCanvas.activeInstance=this},backgroundColor:"",backgroundImage:null,overlayColor:"",overlayImage:null,includeDefaultValues:!0,stateful:!0,renderOnAddRemove:!0,clipTo:null,controlsAboveOverlay:!1,allowTouchScrolling:!1,imageSmoothingEnabled:!0,preserveObjectStacking:!1,viewportTransform:[1,0,0,1,0,0],onBeforeScaleRotate:function(){},_initStatic:function(t,e){this._objects=[],this._createLowerCanvas(t),this._initOptions(e),this._setImageSmoothing(),e.overlayImage&&this.setOverlayImage(e.overlayImage,this.renderAll.bind(this)),e.backgroundImage&&this.setBackgroundImage(e.backgroundImage,this.renderAll.bind(this)),e.backgroundColor&&this.setBackgroundColor(e.backgroundColor,this.renderAll.bind(this)),e.overlayColor&&this.setOverlayColor(e.overlayColor,this.renderAll.bind(this)),this.calcOffset()},calcOffset:function(){return this._offset=e(this.lowerCanvasEl),this},setOverlayImage:function(t,e,i){return this.__setBgOverlayImage("overlayImage",t,e,i)},setBackgroundImage:function(t,e,i){return this.__setBgOverlayImage("backgroundImage",t,e,i)},setOverlayColor:function(t,e){return this.__setBgOverlayColor("overlayColor",t,e)},setBackgroundColor:function(t,e){return this.__setBgOverlayColor("backgroundColor",t,e)},_setImageSmoothing:function(){var t=this.getContext();t.imageSmoothingEnabled=this.imageSmoothingEnabled,t.webkitImageSmoothingEnabled=this.imageSmoothingEnabled,t.mozImageSmoothingEnabled=this.imageSmoothingEnabled,t.msImageSmoothingEnabled=this.imageSmoothingEnabled,t.oImageSmoothingEnabled=this.imageSmoothingEnabled},__setBgOverlayImage:function(t,e,i,r){return"string"==typeof e?fabric.util.loadImage(e,function(e){this[t]=new fabric.Image(e,r),i&&i()},this,r&&r.crossOrigin):(this[t]=e,i&&i()),this},__setBgOverlayColor:function(t,e,i){if(e&&e.source){var r=this;fabric.util.loadImage(e.source,function(n){r[t]=new fabric.Pattern({source:n,repeat:e.repeat,offsetX:e.offsetX,offsetY:e.offsetY}),i&&i()})}else this[t]=e,i&&i();return this},_createCanvasElement:function(){var t=fabric.document.createElement("canvas");if(t.style||(t.style={}),!t)throw r;return this._initCanvasElement(t),t},_initCanvasElement:function(t){if(fabric.util.createCanvasElement(t),"undefined"==typeof t.getContext)throw r},_initOptions:function(t){for(var e in t)this[e]=t[e];this.width=this.width||parseInt(this.lowerCanvasEl.width,10)||0,this.height=this.height||parseInt(this.lowerCanvasEl.height,10)||0,this.lowerCanvasEl.style&&(this.lowerCanvasEl.width=this.width,this.lowerCanvasEl.height=this.height,this.lowerCanvasEl.style.width=this.width+"px",this.lowerCanvasEl.style.height=this.height+"px",this.viewportTransform=this.viewportTransform.slice())},_createLowerCanvas:function(t){this.lowerCanvasEl=fabric.util.getById(t)||this._createCanvasElement(),this._initCanvasElement(this.lowerCanvasEl),fabric.util.addClass(this.lowerCanvasEl,"lower-canvas"),this.interactive&&this._applyCanvasStyle(this.lowerCanvasEl),this.contextContainer=this.lowerCanvasEl.getContext("2d")},getWidth:function(){return this.width},getHeight:function(){return this.height},setWidth:function(t,e){return this.setDimensions({width:t},e)},setHeight:function(t,e){return this.setDimensions({height:t},e)},setDimensions:function(t,e){var i;e=e||{};for(var r in t)i=t[r],e.cssOnly||(this._setBackstoreDimension(r,t[r]),i+="px"),e.backstoreOnly||this._setCssDimension(r,i);return e.cssOnly||this.renderAll(),this.calcOffset(),this},_setBackstoreDimension:function(t,e){return this.lowerCanvasEl[t]=e,this.upperCanvasEl&&(this.upperCanvasEl[t]=e),this.cacheCanvasEl&&(this.cacheCanvasEl[t]=e),this[t]=e,this},_setCssDimension:function(t,e){return this.lowerCanvasEl.style[t]=e,this.upperCanvasEl&&(this.upperCanvasEl.style[t]=e),this.wrapperEl&&(this.wrapperEl.style[t]=e),this},getZoom:function(){return Math.sqrt(this.viewportTransform[0]*this.viewportTransform[3])},setViewportTransform:function(t){this.viewportTransform=t,this.renderAll();for(var e=0,i=this._objects.length;i>e;e++)this._objects[e].setCoords();return this},zoomToPoint:function(t,e){var i=t;t=fabric.util.transformPoint(t,fabric.util.invertTransform(this.viewportTransform)),this.viewportTransform[0]=e,this.viewportTransform[3]=e;var r=fabric.util.transformPoint(t,this.viewportTransform);this.viewportTransform[4]+=i.x-r.x,this.viewportTransform[5]+=i.y-r.y,this.renderAll();for(var n=0,s=this._objects.length;s>n;n++)this._objects[n].setCoords();return this},setZoom:function(t){return this.zoomToPoint(new fabric.Point(0,0),t),this},absolutePan:function(t){this.viewportTransform[4]=-t.x,this.viewportTransform[5]=-t.y,this.renderAll();for(var e=0,i=this._objects.length;i>e;e++)this._objects[e].setCoords();return this},relativePan:function(t){return this.absolutePan(new fabric.Point(-t.x-this.viewportTransform[4],-t.y-this.viewportTransform[5]))},getElement:function(){return this.lowerCanvasEl},getActiveObject:function(){return null},getActiveGroup:function(){return null},_draw:function(t,e){if(e){t.save();var i=this.viewportTransform;t.transform(i[0],i[1],i[2],i[3],i[4],i[5]),this._shouldRenderObject(e)&&e.render(t),t.restore(),this.controlsAboveOverlay||e._renderControls(t)}},_shouldRenderObject:function(t){return t?t!==this.getActiveGroup()||!this.preserveObjectStacking:!1},_onObjectAdded:function(t){this.stateful&&t.setupState(),t.canvas=this,t.setCoords(),this.fire("object:added",{target:t}),t.fire("added")},_onObjectRemoved:function(t){this.getActiveObject()===t&&(this.fire("before:selection:cleared",{target:t}),this._discardActiveObject(),this.fire("selection:cleared")),this.fire("object:removed",{target:t}),t.fire("removed")},clearContext:function(t){return t.clearRect(0,0,this.width,this.height),this},getContext:function(){return this.contextContainer},clear:function(){return this._objects.length=0,this.discardActiveGroup&&this.discardActiveGroup(),this.discardActiveObject&&this.discardActiveObject(),this.clearContext(this.contextContainer),this.contextTop&&this.clearContext(this.contextTop),this.fire("canvas:cleared"),this.renderAll(),this},renderAll:function(t){var e=this[t===!0&&this.interactive?"contextTop":"contextContainer"],i=this.getActiveGroup();return this.contextTop&&this.selection&&!this._groupSelector&&this.clearContext(this.contextTop),t||this.clearContext(e),this.fire("before:render"),this.clipTo&&fabric.util.clipContext(this,e),this._renderBackground(e),this._renderObjects(e,i),this._renderActiveGroup(e,i),this.clipTo&&e.restore(),this._renderOverlay(e),this.controlsAboveOverlay&&this.interactive&&this.drawControls(e),this.fire("after:render"),this},_renderObjects:function(t,e){var i,r;if(!e||this.preserveObjectStacking)for(i=0,r=this._objects.length;r>i;++i)this._draw(t,this._objects[i]);else for(i=0,r=this._objects.length;r>i;++i)this._objects[i]&&!e.contains(this._objects[i])&&this._draw(t,this._objects[i])},_renderActiveGroup:function(t,e){if(e){var i=[];this.forEachObject(function(t){e.contains(t)&&i.push(t)}),e._set("objects",i),this._draw(t,e)}},_renderBackground:function(t){this.backgroundColor&&(t.fillStyle=this.backgroundColor.toLive?this.backgroundColor.toLive(t):this.backgroundColor,t.fillRect(this.backgroundColor.offsetX||0,this.backgroundColor.offsetY||0,this.width,this.height)),this.backgroundImage&&this._draw(t,this.backgroundImage)},_renderOverlay:function(t){this.overlayColor&&(t.fillStyle=this.overlayColor.toLive?this.overlayColor.toLive(t):this.overlayColor,t.fillRect(this.overlayColor.offsetX||0,this.overlayColor.offsetY||0,this.width,this.height)),this.overlayImage&&this._draw(t,this.overlayImage)},renderTop:function(){var t=this.contextTop||this.contextContainer;this.clearContext(t),this.selection&&this._groupSelector&&this._drawSelection();var e=this.getActiveGroup();return e&&e.render(t),this._renderOverlay(t),this.fire("after:render"),this},getCenter:function(){return{top:this.getHeight()/2,left:this.getWidth()/2}},centerObjectH:function(t){return this._centerObject(t,new fabric.Point(this.getCenter().left,t.getCenterPoint().y)),this.renderAll(),this},centerObjectV:function(t){return this._centerObject(t,new fabric.Point(t.getCenterPoint().x,this.getCenter().top)),this.renderAll(),this},centerObject:function(t){var e=this.getCenter();return this._centerObject(t,new fabric.Point(e.left,e.top)),this.renderAll(),this},_centerObject:function(t,e){return t.setPositionByOrigin(e,"center","center"),this},toDatalessJSON:function(t){return this.toDatalessObject(t)},toObject:function(t){return this._toObjectMethod("toObject",t)},toDatalessObject:function(t){return this._toObjectMethod("toDatalessObject",t)},_toObjectMethod:function(e,i){var r=this.getActiveGroup();r&&this.discardActiveGroup();var n={objects:this._toObjects(e,i)};return t(n,this.__serializeBgOverlay()),fabric.util.populateWithProperties(this,n,i),r&&(this.setActiveGroup(new fabric.Group(r.getObjects(),{originX:"center",originY:"center"})),r.forEachObject(function(t){t.set("active",!0)}),this._currentTransform&&(this._currentTransform.target=this.getActiveGroup())),n},_toObjects:function(t,e){return this.getObjects().map(function(i){return this._toObject(i,t,e)},this)},_toObject:function(t,e,i){var r;this.includeDefaultValues||(r=t.includeDefaultValues,t.includeDefaultValues=!1);var n=t[e](i);return this.includeDefaultValues||(t.includeDefaultValues=r),n},__serializeBgOverlay:function(){var t={background:this.backgroundColor&&this.backgroundColor.toObject?this.backgroundColor.toObject():this.backgroundColor};return this.overlayColor&&(t.overlay=this.overlayColor.toObject?this.overlayColor.toObject():this.overlayColor),this.backgroundImage&&(t.backgroundImage=this.backgroundImage.toObject()),this.overlayImage&&(t.overlayImage=this.overlayImage.toObject()),t},svgViewportTransformation:!0,toSVG:function(t,e){t||(t={});var i=[];return this._setSVGPreamble(i,t),this._setSVGHeader(i,t),this._setSVGBgOverlayColor(i,"backgroundColor"),this._setSVGBgOverlayImage(i,"backgroundImage"),this._setSVGObjects(i,e),this._setSVGBgOverlayColor(i,"overlayColor"),this._setSVGBgOverlayImage(i,"overlayImage"),i.push("</svg>"),i.join("")},_setSVGPreamble:function(t,e){e.suppressPreamble||t.push('<?xml version="1.0" encoding="',e.encoding||"UTF-8",'" standalone="no" ?>','<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ','"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n')},_setSVGHeader:function(t,e){var i,r,n;e.viewBox?(i=e.viewBox.width,r=e.viewBox.height):(i=this.width,r=this.height,this.svgViewportTransformation||(n=this.viewportTransform,i/=n[0],r/=n[3])),t.push("<svg ",'xmlns="http://www.w3.org/2000/svg" ','xmlns:xlink="http://www.w3.org/1999/xlink" ','version="1.1" ','width="',i,'" ','height="',r,'" ',this.backgroundColor&&!this.backgroundColor.toLive?'style="background-color: '+this.backgroundColor+'" ':null,e.viewBox?'viewBox="'+e.viewBox.x+" "+e.viewBox.y+" "+e.viewBox.width+" "+e.viewBox.height+'" ':null,'xml:space="preserve">',"<desc>Created with Fabric.js ",fabric.version,"</desc>","<defs>",fabric.createSVGFontFacesMarkup(this.getObjects()),fabric.createSVGRefElementsMarkup(this),"</defs>")},_setSVGObjects:function(t,e){var i=this.getActiveGroup();i&&this.discardActiveGroup();for(var r=0,n=this.getObjects(),s=n.length;s>r;r++)t.push(n[r].toSVG(e));i&&(this.setActiveGroup(new fabric.Group(i.getObjects())),i.forEachObject(function(t){t.set("active",!0)}))},_setSVGBgOverlayImage:function(t,e){this[e]&&this[e].toSVG&&t.push(this[e].toSVG())},_setSVGBgOverlayColor:function(t,e){this[e]&&this[e].source?t.push('<rect x="',this[e].offsetX,'" y="',this[e].offsetY,'" ','width="',"repeat-y"===this[e].repeat||"no-repeat"===this[e].repeat?this[e].source.width:this.width,'" height="',"repeat-x"===this[e].repeat||"no-repeat"===this[e].repeat?this[e].source.height:this.height,'" fill="url(#'+e+'Pattern)"',"></rect>"):this[e]&&"overlayColor"===e&&t.push('<rect x="0" y="0" ','width="',this.width,'" height="',this.height,'" fill="',this[e],'"',"></rect>")},sendToBack:function(t){return i(this._objects,t),this._objects.unshift(t),this.renderAll&&this.renderAll()},bringToFront:function(t){return i(this._objects,t),this._objects.push(t),this.renderAll&&this.renderAll()},sendBackwards:function(t,e){var r=this._objects.indexOf(t);if(0!==r){var n=this._findNewLowerIndex(t,r,e);i(this._objects,t),this._objects.splice(n,0,t),this.renderAll&&this.renderAll()}return this},_findNewLowerIndex:function(t,e,i){var r;if(i){r=e;for(var n=e-1;n>=0;--n){var s=t.intersectsWithObject(this._objects[n])||t.isContainedWithinObject(this._objects[n])||this._objects[n].isContainedWithinObject(t);if(s){r=n;break}}}else r=e-1;return r},bringForward:function(t,e){var r=this._objects.indexOf(t);if(r!==this._objects.length-1){var n=this._findNewUpperIndex(t,r,e);i(this._objects,t),this._objects.splice(n,0,t),this.renderAll&&this.renderAll()}return this},_findNewUpperIndex:function(t,e,i){var r;if(i){r=e;for(var n=e+1;n<this._objects.length;++n){var s=t.intersectsWithObject(this._objects[n])||t.isContainedWithinObject(this._objects[n])||this._objects[n].isContainedWithinObject(t);if(s){r=n;break}}}else r=e+1;return r},moveTo:function(t,e){return i(this._objects,t),this._objects.splice(e,0,t),this.renderAll&&this.renderAll()},dispose:function(){return this.clear(),this.interactive&&this.removeListeners(),this},toString:function(){return"#<fabric.Canvas ("+this.complexity()+"): { objects: "+this.getObjects().length+" }>"}}),t(fabric.StaticCanvas.prototype,fabric.Observable),t(fabric.StaticCanvas.prototype,fabric.Collection),t(fabric.StaticCanvas.prototype,fabric.DataURLExporter),t(fabric.StaticCanvas,{EMPTY_JSON:'{"objects": [], "background": "white"}',supports:function(t){var e=fabric.util.createCanvasElement();if(!e||!e.getContext)return null;var i=e.getContext("2d");if(!i)return null;switch(t){case"getImageData":return"undefined"!=typeof i.getImageData;case"setLineDash":return"undefined"!=typeof i.setLineDash;case"toDataURL":return"undefined"!=typeof e.toDataURL;case"toDataURLWithQuality":try{return e.toDataURL("image/jpeg",0),!0}catch(r){}return!1;default:return null}}}),fabric.StaticCanvas.prototype.toJSON=fabric.StaticCanvas.prototype.toObject}(),fabric.BaseBrush=fabric.util.createClass({color:"rgb(0, 0, 0)",width:1,shadow:null,strokeLineCap:"round",strokeLineJoin:"round",setShadow:function(t){return this.shadow=new fabric.Shadow(t),this},_setBrushStyles:function(){var t=this.canvas.contextTop;t.strokeStyle=this.color,t.lineWidth=this.width,t.lineCap=this.strokeLineCap,t.lineJoin=this.strokeLineJoin},_setShadow:function(){if(this.shadow){var t=this.canvas.contextTop;t.shadowColor=this.shadow.color,t.shadowBlur=this.shadow.blur,t.shadowOffsetX=this.shadow.offsetX,t.shadowOffsetY=this.shadow.offsetY}},_resetShadow:function(){var t=this.canvas.contextTop;t.shadowColor="",t.shadowBlur=t.shadowOffsetX=t.shadowOffsetY=0}}),function(){fabric.PencilBrush=fabric.util.createClass(fabric.BaseBrush,{initialize:function(t){this.canvas=t,this._points=[]},onMouseDown:function(t){this._prepareForDrawing(t),this._captureDrawingPath(t),this._render()},onMouseMove:function(t){this._captureDrawingPath(t),this.canvas.clearContext(this.canvas.contextTop),this._render()},onMouseUp:function(){this._finalizeAndAddPath()},_prepareForDrawing:function(t){var e=new fabric.Point(t.x,t.y);this._reset(),this._addPoint(e),this.canvas.contextTop.moveTo(e.x,e.y)},_addPoint:function(t){this._points.push(t)},_reset:function(){this._points.length=0,this._setBrushStyles(),this._setShadow()},_captureDrawingPath:function(t){var e=new fabric.Point(t.x,t.y);this._addPoint(e)},_render:function(){var t=this.canvas.contextTop,e=this.canvas.viewportTransform,i=this._points[0],r=this._points[1];t.save(),t.transform(e[0],e[1],e[2],e[3],e[4],e[5]),t.beginPath(),2===this._points.length&&i.x===r.x&&i.y===r.y&&(i.x-=.5,r.x+=.5),t.moveTo(i.x,i.y);for(var n=1,s=this._points.length;s>n;n++){var o=i.midPointFrom(r);t.quadraticCurveTo(i.x,i.y,o.x,o.y),i=this._points[n],r=this._points[n+1]}t.lineTo(i.x,i.y),t.stroke(),t.restore()},convertPointsToSVGPath:function(t){var e=[],i=new fabric.Point(t[0].x,t[0].y),r=new fabric.Point(t[1].x,t[1].y);e.push("M ",t[0].x," ",t[0].y," ");for(var n=1,s=t.length;s>n;n++){var o=i.midPointFrom(r);e.push("Q ",i.x," ",i.y," ",o.x," ",o.y," "),i=new fabric.Point(t[n].x,t[n].y),n+1<t.length&&(r=new fabric.Point(t[n+1].x,t[n+1].y))}return e.push("L ",i.x," ",i.y," "),e},createPath:function(t){var e=new fabric.Path(t,{fill:null,stroke:this.color,strokeWidth:this.width,strokeLineCap:this.strokeLineCap,strokeLineJoin:this.strokeLineJoin,originX:"center",originY:"center"});return this.shadow&&(this.shadow.affectStroke=!0,e.setShadow(this.shadow)),e},_finalizeAndAddPath:function(){var t=this.canvas.contextTop;t.closePath();var e=this.convertPointsToSVGPath(this._points).join("");if("M 0 0 Q 0 0 0 0 L 0 0"===e)return void this.canvas.renderAll();var i=this.createPath(e);this.canvas.add(i),i.setCoords(),this.canvas.clearContext(this.canvas.contextTop),this._resetShadow(),this.canvas.renderAll(),this.canvas.fire("path:created",{path:i})}})}(),fabric.CircleBrush=fabric.util.createClass(fabric.BaseBrush,{width:10,initialize:function(t){this.canvas=t,this.points=[]},drawDot:function(t){var e=this.addPoint(t),i=this.canvas.contextTop,r=this.canvas.viewportTransform;i.save(),i.transform(r[0],r[1],r[2],r[3],r[4],r[5]),i.fillStyle=e.fill,i.beginPath(),i.arc(e.x,e.y,e.radius,0,2*Math.PI,!1),i.closePath(),i.fill(),i.restore()},onMouseDown:function(t){this.points.length=0,this.canvas.clearContext(this.canvas.contextTop),this._setShadow(),this.drawDot(t)},onMouseMove:function(t){this.drawDot(t)},onMouseUp:function(){var t=this.canvas.renderOnAddRemove;this.canvas.renderOnAddRemove=!1;for(var e=[],i=0,r=this.points.length;r>i;i++){var n=this.points[i],s=new fabric.Circle({radius:n.radius,left:n.x,top:n.y,originX:"center",originY:"center",fill:n.fill});this.shadow&&s.setShadow(this.shadow),e.push(s)}var o=new fabric.Group(e,{originX:"center",originY:"center"});o.canvas=this.canvas,this.canvas.add(o),this.canvas.fire("path:created",{path:o}),this.canvas.clearContext(this.canvas.contextTop),this._resetShadow(),this.canvas.renderOnAddRemove=t,this.canvas.renderAll()},addPoint:function(t){var e=new fabric.Point(t.x,t.y),i=fabric.util.getRandomInt(Math.max(0,this.width-20),this.width+20)/2,r=new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0,100)/100).toRgba();return e.radius=i,e.fill=r,this.points.push(e),e}}),fabric.SprayBrush=fabric.util.createClass(fabric.BaseBrush,{width:10,density:20,dotWidth:1,dotWidthVariance:1,randomOpacity:!1,optimizeOverlapping:!0,initialize:function(t){this.canvas=t,this.sprayChunks=[]},onMouseDown:function(t){this.sprayChunks.length=0,this.canvas.clearContext(this.canvas.contextTop),this._setShadow(),this.addSprayChunk(t),this.render()},onMouseMove:function(t){this.addSprayChunk(t),this.render()},onMouseUp:function(){var t=this.canvas.renderOnAddRemove;this.canvas.renderOnAddRemove=!1;for(var e=[],i=0,r=this.sprayChunks.length;r>i;i++)for(var n=this.sprayChunks[i],s=0,o=n.length;o>s;s++){var a=new fabric.Rect({width:n[s].width,height:n[s].width,left:n[s].x+1,top:n[s].y+1,originX:"center",originY:"center",fill:this.color});this.shadow&&a.setShadow(this.shadow),e.push(a)}this.optimizeOverlapping&&(e=this._getOptimizedRects(e));var h=new fabric.Group(e,{originX:"center",originY:"center"});h.canvas=this.canvas,this.canvas.add(h),this.canvas.fire("path:created",{path:h}),this.canvas.clearContext(this.canvas.contextTop),this._resetShadow(),this.canvas.renderOnAddRemove=t,this.canvas.renderAll()},_getOptimizedRects:function(t){for(var e,i={},r=0,n=t.length;n>r;r++)e=t[r].left+""+t[r].top,i[e]||(i[e]=t[r]);var s=[];for(e in i)s.push(i[e]);return s},render:function(){var t=this.canvas.contextTop;t.fillStyle=this.color;var e=this.canvas.viewportTransform;t.save(),t.transform(e[0],e[1],e[2],e[3],e[4],e[5]);for(var i=0,r=this.sprayChunkPoints.length;r>i;i++){var n=this.sprayChunkPoints[i];"undefined"!=typeof n.opacity&&(t.globalAlpha=n.opacity),t.fillRect(n.x,n.y,n.width,n.width)}t.restore()},addSprayChunk:function(t){this.sprayChunkPoints=[];for(var e,i,r,n=this.width/2,s=0;s<this.density;s++){e=fabric.util.getRandomInt(t.x-n,t.x+n),i=fabric.util.getRandomInt(t.y-n,t.y+n),r=this.dotWidthVariance?fabric.util.getRandomInt(Math.max(1,this.dotWidth-this.dotWidthVariance),this.dotWidth+this.dotWidthVariance):this.dotWidth;var o=new fabric.Point(e,i);o.width=r,this.randomOpacity&&(o.opacity=fabric.util.getRandomInt(0,100)/100),this.sprayChunkPoints.push(o)}this.sprayChunks.push(this.sprayChunkPoints)}}),fabric.PatternBrush=fabric.util.createClass(fabric.PencilBrush,{getPatternSrc:function(){var t=20,e=5,i=fabric.document.createElement("canvas"),r=i.getContext("2d");return i.width=i.height=t+e,r.fillStyle=this.color,r.beginPath(),r.arc(t/2,t/2,t/2,0,2*Math.PI,!1),r.closePath(),r.fill(),i},getPatternSrcFunction:function(){return String(this.getPatternSrc).replace("this.color",'"'+this.color+'"')},getPattern:function(){return this.canvas.contextTop.createPattern(this.source||this.getPatternSrc(),"repeat")},_setBrushStyles:function(){this.callSuper("_setBrushStyles"),this.canvas.contextTop.strokeStyle=this.getPattern()},createPath:function(t){var e=this.callSuper("createPath",t);return e.stroke=new fabric.Pattern({source:this.source||this.getPatternSrcFunction()}),e}}),function(){var t=fabric.util.getPointer,e=fabric.util.degreesToRadians,i=fabric.util.radiansToDegrees,r=Math.atan2,n=Math.abs,s=.5;fabric.Canvas=fabric.util.createClass(fabric.StaticCanvas,{initialize:function(t,e){e||(e={}),this._initStatic(t,e),this._initInteractive(),this._createCacheCanvas(),fabric.Canvas.activeInstance=this},uniScaleTransform:!1,centeredScaling:!1,centeredRotation:!1,interactive:!0,selection:!0,selectionColor:"rgba(100, 100, 255, 0.3)",selectionDashArray:[],selectionBorderColor:"rgba(255, 255, 255, 0.3)",selectionLineWidth:1,hoverCursor:"move",moveCursor:"move",defaultCursor:"default",freeDrawingCursor:"crosshair",rotationCursor:"crosshair",containerClass:"canvas-container",perPixelTargetFind:!1,targetFindTolerance:0,skipTargetFind:!1,_initInteractive:function(){this._currentTransform=null,this._groupSelector=null,this._initWrapperElement(),this._createUpperCanvas(),this._initEventListeners(),this.freeDrawingBrush=fabric.PencilBrush&&new fabric.PencilBrush(this),this.calcOffset()},_resetCurrentTransform:function(t){var e=this._currentTransform;e.target.set({scaleX:e.original.scaleX,scaleY:e.original.scaleY,left:e.original.left,top:e.original.top}),this._shouldCenterTransform(t,e.target)?"rotate"===e.action?this._setOriginToCenter(e.target):("center"!==e.originX&&(e.mouseXSign="right"===e.originX?-1:1),"center"!==e.originY&&(e.mouseYSign="bottom"===e.originY?-1:1),e.originX="center",e.originY="center"):(e.originX=e.original.originX,e.originY=e.original.originY)},containsPoint:function(t,e){var i=this.getPointer(t,!0),r=this._normalizePointer(e,i);return e.containsPoint(r)||e._findTargetCorner(i)},_normalizePointer:function(t,e){var i,r=this.getActiveGroup(),n=e.x,s=e.y,o=r&&"group"!==t.type&&r.contains(t);return o&&(i=new fabric.Point(r.left,r.top),i=fabric.util.transformPoint(i,this.viewportTransform,!0),n-=i.x,s-=i.y),{x:n,y:s}},isTargetTransparent:function(t,e,i){var r=t.hasBorders,n=t.transparentCorners;t.hasBorders=t.transparentCorners=!1,this._draw(this.contextCache,t),t.hasBorders=r,t.transparentCorners=n;var s=fabric.util.isTransparent(this.contextCache,e,i,this.targetFindTolerance);return this.clearContext(this.contextCache),s},_shouldClearSelection:function(t,e){var i=this.getActiveGroup(),r=this.getActiveObject();return!e||e&&i&&!i.contains(e)&&i!==e&&!t.shiftKey||e&&!e.evented||e&&!e.selectable&&r&&r!==e},_shouldCenterTransform:function(t,e){if(e){var i,r=this._currentTransform;return"scale"===r.action||"scaleX"===r.action||"scaleY"===r.action?i=this.centeredScaling||e.centeredScaling:"rotate"===r.action&&(i=this.centeredRotation||e.centeredRotation),i?!t.altKey:t.altKey}},_getOriginFromCorner:function(t,e){var i={x:t.originX,y:t.originY};return"ml"===e||"tl"===e||"bl"===e?i.x="right":("mr"===e||"tr"===e||"br"===e)&&(i.x="left"),"tl"===e||"mt"===e||"tr"===e?i.y="bottom":("bl"===e||"mb"===e||"br"===e)&&(i.y="top"),i},_getActionFromCorner:function(t,e){var i="drag";return e&&(i="ml"===e||"mr"===e?"scaleX":"mt"===e||"mb"===e?"scaleY":"mtr"===e?"rotate":"scale"),i},_setupCurrentTransform:function(t,i){if(i){var r=this.getPointer(t),n=i._findTargetCorner(this.getPointer(t,!0)),s=this._getActionFromCorner(i,n),o=this._getOriginFromCorner(i,n);this._currentTransform={target:i,action:s,scaleX:i.scaleX,scaleY:i.scaleY,offsetX:r.x-i.left,offsetY:r.y-i.top,originX:o.x,originY:o.y,ex:r.x,ey:r.y,left:i.left,top:i.top,theta:e(i.angle),width:i.width*i.scaleX,mouseXSign:1,mouseYSign:1},this._currentTransform.original={left:i.left,top:i.top,scaleX:i.scaleX,scaleY:i.scaleY,originX:o.x,originY:o.y},this._resetCurrentTransform(t)}},_translateObject:function(t,e){var i=this._currentTransform.target;i.get("lockMovementX")||i.set("left",t-this._currentTransform.offsetX),i.get("lockMovementY")||i.set("top",e-this._currentTransform.offsetY)},_scaleObject:function(t,e,i){var r=this._currentTransform,n=r.target,s=n.get("lockScalingX"),o=n.get("lockScalingY"),a=n.get("lockScalingFlip");if(!s||!o){var h=n.translateToOriginPoint(n.getCenterPoint(),r.originX,r.originY),c=n.toLocalPoint(new fabric.Point(t,e),r.originX,r.originY);this._setLocalMouse(c,r),this._setObjectScale(c,r,s,o,i,a),n.setPositionByOrigin(h,r.originX,r.originY)}},_setObjectScale:function(t,e,i,r,n,s){var o=e.target,a=!1,h=!1,c=o.stroke?o.strokeWidth:0;e.newScaleX=t.x/(o.width+c/2),e.newScaleY=t.y/(o.height+c/2),s&&e.newScaleX<=0&&e.newScaleX<o.scaleX&&(a=!0),s&&e.newScaleY<=0&&e.newScaleY<o.scaleY&&(h=!0),"equally"!==n||i||r?n?"x"!==n||o.get("lockUniScaling")?"y"!==n||o.get("lockUniScaling")||h||r||o.set("scaleY",e.newScaleY):a||i||o.set("scaleX",e.newScaleX):(a||i||o.set("scaleX",e.newScaleX),h||r||o.set("scaleY",e.newScaleY)):a||h||this._scaleObjectEqually(t,o,e),a||h||this._flipObject(e,n)},_scaleObjectEqually:function(t,e,i){var r=t.y+t.x,n=e.stroke?e.strokeWidth:0,s=(e.height+n/2)*i.original.scaleY+(e.width+n/2)*i.original.scaleX;i.newScaleX=i.original.scaleX*r/s,i.newScaleY=i.original.scaleY*r/s,e.set("scaleX",i.newScaleX),e.set("scaleY",i.newScaleY)},_flipObject:function(t,e){t.newScaleX<0&&"y"!==e&&("left"===t.originX?t.originX="right":"right"===t.originX&&(t.originX="left")),t.newScaleY<0&&"x"!==e&&("top"===t.originY?t.originY="bottom":"bottom"===t.originY&&(t.originY="top"))},_setLocalMouse:function(t,e){var i=e.target;"right"===e.originX?t.x*=-1:"center"===e.originX&&(t.x*=2*e.mouseXSign,t.x<0&&(e.mouseXSign=-e.mouseXSign)),"bottom"===e.originY?t.y*=-1:"center"===e.originY&&(t.y*=2*e.mouseYSign,t.y<0&&(e.mouseYSign=-e.mouseYSign)),n(t.x)>i.padding?t.x<0?t.x+=i.padding:t.x-=i.padding:t.x=0,n(t.y)>i.padding?t.y<0?t.y+=i.padding:t.y-=i.padding:t.y=0},_rotateObject:function(t,e){var n=this._currentTransform;if(!n.target.get("lockRotation")){var s=r(n.ey-n.top,n.ex-n.left),o=r(e-n.top,t-n.left),a=i(o-s+n.theta);0>a&&(a=360+a),n.target.angle=a%360}},setCursor:function(t){this.upperCanvasEl.style.cursor=t},_resetObjectTransform:function(t){t.scaleX=1,t.scaleY=1,t.setAngle(0)},_drawSelection:function(){var t=this.contextTop,e=this._groupSelector,i=e.left,r=e.top,o=n(i),a=n(r);if(t.fillStyle=this.selectionColor,t.fillRect(e.ex-(i>0?0:-i),e.ey-(r>0?0:-r),o,a),t.lineWidth=this.selectionLineWidth,t.strokeStyle=this.selectionBorderColor,this.selectionDashArray.length>1){var h=e.ex+s-(i>0?0:o),c=e.ey+s-(r>0?0:a);t.beginPath(),fabric.util.drawDashedLine(t,h,c,h+o,c,this.selectionDashArray),fabric.util.drawDashedLine(t,h,c+a-1,h+o,c+a-1,this.selectionDashArray),fabric.util.drawDashedLine(t,h,c,h,c+a,this.selectionDashArray),fabric.util.drawDashedLine(t,h+o-1,c,h+o-1,c+a,this.selectionDashArray),t.closePath(),t.stroke()}else t.strokeRect(e.ex+s-(i>0?0:o),e.ey+s-(r>0?0:a),o,a)},_isLastRenderedObject:function(t){return this.controlsAboveOverlay&&this.lastRenderedObjectWithControlsAboveOverlay&&this.lastRenderedObjectWithControlsAboveOverlay.visible&&this.containsPoint(t,this.lastRenderedObjectWithControlsAboveOverlay)&&this.lastRenderedObjectWithControlsAboveOverlay._findTargetCorner(this.getPointer(t,!0))},findTarget:function(t,e){if(!this.skipTargetFind){if(this._isLastRenderedObject(t))return this.lastRenderedObjectWithControlsAboveOverlay;var i=this.getActiveGroup();if(i&&!e&&this.containsPoint(t,i))return i;var r=this._searchPossibleTargets(t);return this._fireOverOutEvents(r),r}},_fireOverOutEvents:function(t){t?this._hoveredTarget!==t&&(this.fire("mouse:over",{target:t}),t.fire("mouseover"),this._hoveredTarget&&(this.fire("mouse:out",{target:this._hoveredTarget}),this._hoveredTarget.fire("mouseout")),this._hoveredTarget=t):this._hoveredTarget&&(this.fire("mouse:out",{target:this._hoveredTarget}),this._hoveredTarget.fire("mouseout"),this._hoveredTarget=null)},_checkTarget:function(t,e,i){if(e&&e.visible&&e.evented&&this.containsPoint(t,e)){if(!this.perPixelTargetFind&&!e.perPixelTargetFind||e.isEditing)return!0;var r=this.isTargetTransparent(e,i.x,i.y);if(!r)return!0}},_searchPossibleTargets:function(t){for(var e,i=this.getPointer(t,!0),r=this._objects.length;r--;)if(this._checkTarget(t,this._objects[r],i)){this.relatedTarget=this._objects[r],e=this._objects[r];break}return e},getPointer:function(e,i,r){r||(r=this.upperCanvasEl);var n,s=t(e,r),o=r.getBoundingClientRect(),a=o.width||0,h=o.height||0;return a&&h||("top"in o&&"bottom"in o&&(h=Math.abs(o.top-o.bottom)),"right"in o&&"left"in o&&(a=Math.abs(o.right-o.left))),this.calcOffset(),s.x=s.x-this._offset.left,s.y=s.y-this._offset.top,i||(s=fabric.util.transformPoint(s,fabric.util.invertTransform(this.viewportTransform))),n=0===a||0===h?{width:1,height:1}:{width:r.width/a,height:r.height/h},{x:s.x*n.width,y:s.y*n.height}},_createUpperCanvas:function(){var t=this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/,"");this.upperCanvasEl=this._createCanvasElement(),fabric.util.addClass(this.upperCanvasEl,"upper-canvas "+t),this.wrapperEl.appendChild(this.upperCanvasEl),this._copyCanvasStyle(this.lowerCanvasEl,this.upperCanvasEl),this._applyCanvasStyle(this.upperCanvasEl),this.contextTop=this.upperCanvasEl.getContext("2d")
},_createCacheCanvas:function(){this.cacheCanvasEl=this._createCanvasElement(),this.cacheCanvasEl.setAttribute("width",this.width),this.cacheCanvasEl.setAttribute("height",this.height),this.contextCache=this.cacheCanvasEl.getContext("2d")},_initWrapperElement:function(){this.wrapperEl=fabric.util.wrapElement(this.lowerCanvasEl,"div",{"class":this.containerClass}),fabric.util.setStyle(this.wrapperEl,{width:this.getWidth()+"px",height:this.getHeight()+"px",position:"relative"}),fabric.util.makeElementUnselectable(this.wrapperEl)},_applyCanvasStyle:function(t){var e=this.getWidth()||t.width,i=this.getHeight()||t.height;fabric.util.setStyle(t,{position:"absolute",width:e+"px",height:i+"px",left:0,top:0}),t.width=e,t.height=i,fabric.util.makeElementUnselectable(t)},_copyCanvasStyle:function(t,e){e.style.cssText=t.style.cssText},getSelectionContext:function(){return this.contextTop},getSelectionElement:function(){return this.upperCanvasEl},_setActiveObject:function(t){this._activeObject&&this._activeObject.set("active",!1),this._activeObject=t,t.set("active",!0)},setActiveObject:function(t,e){return this._setActiveObject(t),this.renderAll(),this.fire("object:selected",{target:t,e:e}),t.fire("selected",{e:e}),this},getActiveObject:function(){return this._activeObject},_discardActiveObject:function(){this._activeObject&&this._activeObject.set("active",!1),this._activeObject=null},discardActiveObject:function(t){return this._discardActiveObject(),this.renderAll(),this.fire("selection:cleared",{e:t}),this},_setActiveGroup:function(t){this._activeGroup=t,t&&t.set("active",!0)},setActiveGroup:function(t,e){return this._setActiveGroup(t),t&&(this.fire("object:selected",{target:t,e:e}),t.fire("selected",{e:e})),this},getActiveGroup:function(){return this._activeGroup},_discardActiveGroup:function(){var t=this.getActiveGroup();t&&t.destroy(),this.setActiveGroup(null)},discardActiveGroup:function(t){return this._discardActiveGroup(),this.fire("selection:cleared",{e:t}),this},deactivateAll:function(){for(var t=this.getObjects(),e=0,i=t.length;i>e;e++)t[e].set("active",!1);return this._discardActiveGroup(),this._discardActiveObject(),this},deactivateAllWithDispatch:function(t){var e=this.getActiveGroup()||this.getActiveObject();return e&&this.fire("before:selection:cleared",{target:e,e:t}),this.deactivateAll(),e&&this.fire("selection:cleared",{e:t}),this},drawControls:function(t){var e=this.getActiveGroup();e?this._drawGroupControls(t,e):this._drawObjectsControls(t)},_drawGroupControls:function(t,e){e._renderControls(t)},_drawObjectsControls:function(t){for(var e=0,i=this._objects.length;i>e;++e)this._objects[e]&&this._objects[e].active&&(this._objects[e]._renderControls(t),this.lastRenderedObjectWithControlsAboveOverlay=this._objects[e])}});for(var o in fabric.StaticCanvas)"prototype"!==o&&(fabric.Canvas[o]=fabric.StaticCanvas[o]);fabric.isTouchSupported&&(fabric.Canvas.prototype._setCursorFromEvent=function(){}),fabric.Element=fabric.Canvas}(),function(){var t={mt:0,tr:1,mr:2,br:3,mb:4,bl:5,ml:6,tl:7},e=fabric.util.addListener,i=fabric.util.removeListener;fabric.util.object.extend(fabric.Canvas.prototype,{cursorMap:["n-resize","ne-resize","e-resize","se-resize","s-resize","sw-resize","w-resize","nw-resize"],_initEventListeners:function(){this._bindEvents(),e(fabric.window,"resize",this._onResize),e(this.upperCanvasEl,"mousedown",this._onMouseDown),e(this.upperCanvasEl,"mousemove",this._onMouseMove),e(this.upperCanvasEl,"mousewheel",this._onMouseWheel),e(this.upperCanvasEl,"touchstart",this._onMouseDown),e(this.upperCanvasEl,"touchmove",this._onMouseMove),"undefined"!=typeof Event&&"add"in Event&&(Event.add(this.upperCanvasEl,"gesture",this._onGesture),Event.add(this.upperCanvasEl,"drag",this._onDrag),Event.add(this.upperCanvasEl,"orientation",this._onOrientationChange),Event.add(this.upperCanvasEl,"shake",this._onShake),Event.add(this.upperCanvasEl,"longpress",this._onLongPress))},_bindEvents:function(){this._onMouseDown=this._onMouseDown.bind(this),this._onMouseMove=this._onMouseMove.bind(this),this._onMouseUp=this._onMouseUp.bind(this),this._onResize=this._onResize.bind(this),this._onGesture=this._onGesture.bind(this),this._onDrag=this._onDrag.bind(this),this._onShake=this._onShake.bind(this),this._onLongPress=this._onLongPress.bind(this),this._onOrientationChange=this._onOrientationChange.bind(this),this._onMouseWheel=this._onMouseWheel.bind(this)},removeListeners:function(){i(fabric.window,"resize",this._onResize),i(this.upperCanvasEl,"mousedown",this._onMouseDown),i(this.upperCanvasEl,"mousemove",this._onMouseMove),i(this.upperCanvasEl,"mousewheel",this._onMouseWheel),i(this.upperCanvasEl,"touchstart",this._onMouseDown),i(this.upperCanvasEl,"touchmove",this._onMouseMove),"undefined"!=typeof Event&&"remove"in Event&&(Event.remove(this.upperCanvasEl,"gesture",this._onGesture),Event.remove(this.upperCanvasEl,"drag",this._onDrag),Event.remove(this.upperCanvasEl,"orientation",this._onOrientationChange),Event.remove(this.upperCanvasEl,"shake",this._onShake),Event.remove(this.upperCanvasEl,"longpress",this._onLongPress))},_onGesture:function(t,e){this.__onTransformGesture&&this.__onTransformGesture(t,e)},_onDrag:function(t,e){this.__onDrag&&this.__onDrag(t,e)},_onMouseWheel:function(t,e){this.__onMouseWheel&&this.__onMouseWheel(t,e)},_onOrientationChange:function(t,e){this.__onOrientationChange&&this.__onOrientationChange(t,e)},_onShake:function(t,e){this.__onShake&&this.__onShake(t,e)},_onLongPress:function(t,e){this.__onLongPress&&this.__onLongPress(t,e)},_onMouseDown:function(t){this.__onMouseDown(t),e(fabric.document,"touchend",this._onMouseUp),e(fabric.document,"touchmove",this._onMouseMove),i(this.upperCanvasEl,"mousemove",this._onMouseMove),i(this.upperCanvasEl,"touchmove",this._onMouseMove),"touchstart"===t.type?i(this.upperCanvasEl,"mousedown",this._onMouseDown):(e(fabric.document,"mouseup",this._onMouseUp),e(fabric.document,"mousemove",this._onMouseMove))},_onMouseUp:function(t){if(this.__onMouseUp(t),i(fabric.document,"mouseup",this._onMouseUp),i(fabric.document,"touchend",this._onMouseUp),i(fabric.document,"mousemove",this._onMouseMove),i(fabric.document,"touchmove",this._onMouseMove),e(this.upperCanvasEl,"mousemove",this._onMouseMove),e(this.upperCanvasEl,"touchmove",this._onMouseMove),"touchend"===t.type){var r=this;setTimeout(function(){e(r.upperCanvasEl,"mousedown",r._onMouseDown)},400)}},_onMouseMove:function(t){!this.allowTouchScrolling&&t.preventDefault&&t.preventDefault(),this.__onMouseMove(t)},_onResize:function(){this.calcOffset()},_shouldRender:function(t,e){var i=this.getActiveGroup()||this.getActiveObject();return!!(t&&(t.isMoving||t!==i)||!t&&i||!t&&!i&&!this._groupSelector||e&&this._previousPointer&&this.selection&&(e.x!==this._previousPointer.x||e.y!==this._previousPointer.y))},__onMouseUp:function(t){var e;if(this.isDrawingMode&&this._isCurrentlyDrawing)return void this._onMouseUpInDrawingMode(t);this._currentTransform?(this._finalizeCurrentTransform(),e=this._currentTransform.target):e=this.findTarget(t,!0);var i=this._shouldRender(e,this.getPointer(t));this._maybeGroupObjects(t),e&&(e.isMoving=!1),i&&this.renderAll(),this._handleCursorAndEvent(t,e)},_handleCursorAndEvent:function(t,e){this._setCursorFromEvent(t,e);var i=this;setTimeout(function(){i._setCursorFromEvent(t,e)},50),this.fire("mouse:up",{target:e,e:t}),e&&e.fire("mouseup",{e:t})},_finalizeCurrentTransform:function(){var t=this._currentTransform,e=t.target;e._scaling&&(e._scaling=!1),e.setCoords(),this.stateful&&e.hasStateChanged()&&(this.fire("object:modified",{target:e}),e.fire("modified")),this._restoreOriginXY(e)},_restoreOriginXY:function(t){if(this._previousOriginX&&this._previousOriginY){var e=t.translateToOriginPoint(t.getCenterPoint(),this._previousOriginX,this._previousOriginY);t.originX=this._previousOriginX,t.originY=this._previousOriginY,t.left=e.x,t.top=e.y,this._previousOriginX=null,this._previousOriginY=null}},_onMouseDownInDrawingMode:function(t){this._isCurrentlyDrawing=!0,this.discardActiveObject(t).renderAll(),this.clipTo&&fabric.util.clipContext(this,this.contextTop);var e=fabric.util.invertTransform(this.viewportTransform),i=fabric.util.transformPoint(this.getPointer(t,!0),e);this.freeDrawingBrush.onMouseDown(i),this.fire("mouse:down",{e:t});var r=this.findTarget(t);"undefined"!=typeof r&&r.fire("mousedown",{e:t,target:r})},_onMouseMoveInDrawingMode:function(t){if(this._isCurrentlyDrawing){var e=fabric.util.invertTransform(this.viewportTransform),i=fabric.util.transformPoint(this.getPointer(t,!0),e);this.freeDrawingBrush.onMouseMove(i)}this.setCursor(this.freeDrawingCursor),this.fire("mouse:move",{e:t});var r=this.findTarget(t);"undefined"!=typeof r&&r.fire("mousemove",{e:t,target:r})},_onMouseUpInDrawingMode:function(t){this._isCurrentlyDrawing=!1,this.clipTo&&this.contextTop.restore(),this.freeDrawingBrush.onMouseUp(),this.fire("mouse:up",{e:t});var e=this.findTarget(t);"undefined"!=typeof e&&e.fire("mouseup",{e:t,target:e})},__onMouseDown:function(t){var e="which"in t?1===t.which:1===t.button;if(e||fabric.isTouchSupported){if(this.isDrawingMode)return void this._onMouseDownInDrawingMode(t);if(!this._currentTransform){var i=this.findTarget(t),r=this.getPointer(t,!0);this._previousPointer=r;var n=this._shouldRender(i,r),s=this._shouldGroup(t,i);this._shouldClearSelection(t,i)?this._clearSelection(t,i,r):s&&(this._handleGrouping(t,i),i=this.getActiveGroup()),i&&i.selectable&&!s&&(this._beforeTransform(t,i),this._setupCurrentTransform(t,i)),n&&this.renderAll(),this.fire("mouse:down",{target:i,e:t}),i&&i.fire("mousedown",{e:t})}}},_beforeTransform:function(t,e){var i;this.stateful&&e.saveState(),(i=e._findTargetCorner(this.getPointer(t)))&&this.onBeforeScaleRotate(e),e!==this.getActiveGroup()&&e!==this.getActiveObject()&&(this.deactivateAll(),this.setActiveObject(e,t))},_clearSelection:function(t,e,i){this.deactivateAllWithDispatch(t),e&&e.selectable?this.setActiveObject(e,t):this.selection&&(this._groupSelector={ex:i.x,ey:i.y,top:0,left:0})},_setOriginToCenter:function(t){this._previousOriginX=this._currentTransform.target.originX,this._previousOriginY=this._currentTransform.target.originY;var e=t.getCenterPoint();t.originX="center",t.originY="center",t.left=e.x,t.top=e.y,this._currentTransform.left=t.left,this._currentTransform.top=t.top},_setCenterToOrigin:function(t){var e=t.translateToOriginPoint(t.getCenterPoint(),this._previousOriginX,this._previousOriginY);t.originX=this._previousOriginX,t.originY=this._previousOriginY,t.left=e.x,t.top=e.y,this._previousOriginX=null,this._previousOriginY=null},__onMouseMove:function(t){var e,i;if(this.isDrawingMode)return void this._onMouseMoveInDrawingMode(t);if(!("undefined"!=typeof t.touches&&t.touches.length>1)){var r=this._groupSelector;r?(i=this.getPointer(t,!0),r.left=i.x-r.ex,r.top=i.y-r.ey,this.renderTop()):this._currentTransform?this._transformObject(t):(e=this.findTarget(t),!e||e&&!e.selectable?this.setCursor(this.defaultCursor):this._setCursorFromEvent(t,e)),this.fire("mouse:move",{target:e,e:t}),e&&e.fire("mousemove",{e:t})}},_transformObject:function(t){var e=this.getPointer(t),i=this._currentTransform;i.reset=!1,i.target.isMoving=!0,this._beforeScaleTransform(t,i),this._performTransformAction(t,i,e),this.renderAll()},_performTransformAction:function(t,e,i){var r=i.x,n=i.y,s=e.target,o=e.action;"rotate"===o?(this._rotateObject(r,n),this._fire("rotating",s,t)):"scale"===o?(this._onScale(t,e,r,n),this._fire("scaling",s,t)):"scaleX"===o?(this._scaleObject(r,n,"x"),this._fire("scaling",s,t)):"scaleY"===o?(this._scaleObject(r,n,"y"),this._fire("scaling",s,t)):(this._translateObject(r,n),this._fire("moving",s,t),this.setCursor(this.moveCursor))},_fire:function(t,e,i){this.fire("object:"+t,{target:e,e:i}),e.fire(t,{e:i})},_beforeScaleTransform:function(t,e){if("scale"===e.action||"scaleX"===e.action||"scaleY"===e.action){var i=this._shouldCenterTransform(t,e.target);(i&&("center"!==e.originX||"center"!==e.originY)||!i&&"center"===e.originX&&"center"===e.originY)&&(this._resetCurrentTransform(t),e.reset=!0)}},_onScale:function(t,e,i,r){!t.shiftKey&&!this.uniScaleTransform||e.target.get("lockUniScaling")?(e.reset||"scale"!==e.currentAction||this._resetCurrentTransform(t,e.target),e.currentAction="scaleEqually",this._scaleObject(i,r,"equally")):(e.currentAction="scale",this._scaleObject(i,r))},_setCursorFromEvent:function(t,e){if(!e||!e.selectable)return this.setCursor(this.defaultCursor),!1;var i=this.getActiveGroup(),r=e._findTargetCorner&&(!i||!i.contains(e))&&e._findTargetCorner(this.getPointer(t,!0));return r?this._setCornerCursor(r,e):this.setCursor(e.hoverCursor||this.hoverCursor),!0},_setCornerCursor:function(e,i){if(e in t)this.setCursor(this._getRotatedCornerCursor(e,i));else{if("mtr"!==e||!i.hasRotatingPoint)return this.setCursor(this.defaultCursor),!1;this.setCursor(this.rotationCursor)}},_getRotatedCornerCursor:function(e,i){var r=Math.round(i.getAngle()%360/45);return 0>r&&(r+=8),r+=t[e],r%=8,this.cursorMap[r]}})}(),function(){var t=Math.min,e=Math.max;fabric.util.object.extend(fabric.Canvas.prototype,{_shouldGroup:function(t,e){var i=this.getActiveObject();return t.shiftKey&&(this.getActiveGroup()||i&&i!==e)&&this.selection},_handleGrouping:function(t,e){(e!==this.getActiveGroup()||(e=this.findTarget(t,!0),e&&!e.isType("group")))&&(this.getActiveGroup()?this._updateActiveGroup(e,t):this._createActiveGroup(e,t),this._activeGroup&&this._activeGroup.saveCoords())},_updateActiveGroup:function(t,e){var i=this.getActiveGroup();if(i.contains(t)){if(i.removeWithUpdate(t),this._resetObjectTransform(i),t.set("active",!1),1===i.size())return this.discardActiveGroup(e),void this.setActiveObject(i.item(0))}else i.addWithUpdate(t),this._resetObjectTransform(i);this.fire("selection:created",{target:i,e:e}),i.set("active",!0)},_createActiveGroup:function(t,e){if(this._activeObject&&t!==this._activeObject){var i=this._createGroup(t);i.addWithUpdate(),this.setActiveGroup(i),this._activeObject=null,this.fire("selection:created",{target:i,e:e})}t.set("active",!0)},_createGroup:function(t){var e=this.getObjects(),i=e.indexOf(this._activeObject)<e.indexOf(t),r=i?[this._activeObject,t]:[t,this._activeObject];return new fabric.Group(r,{canvas:this})},_groupSelectedObjects:function(t){var e=this._collectObjects();1===e.length?this.setActiveObject(e[0],t):e.length>1&&(e=new fabric.Group(e.reverse(),{canvas:this}),e.addWithUpdate(),this.setActiveGroup(e,t),e.saveCoords(),this.fire("selection:created",{target:e}),this.renderAll())},_collectObjects:function(){for(var i,r=[],n=this._groupSelector.ex,s=this._groupSelector.ey,o=n+this._groupSelector.left,a=s+this._groupSelector.top,h=new fabric.Point(t(n,o),t(s,a)),c=new fabric.Point(e(n,o),e(s,a)),l=n===o&&s===a,u=this._objects.length;u--&&(i=this._objects[u],!(i&&i.selectable&&i.visible&&(i.intersectsWithRect(h,c)||i.isContainedWithinRect(h,c)||i.containsPoint(h)||i.containsPoint(c))&&(i.set("active",!0),r.push(i),l))););return r},_maybeGroupObjects:function(t){this.selection&&this._groupSelector&&this._groupSelectedObjects(t);var e=this.getActiveGroup();e&&(e.setObjectsCoords().setCoords(),e.isMoving=!1,this.setCursor(this.defaultCursor)),this._groupSelector=null,this._currentTransform=null}})}(),fabric.util.object.extend(fabric.StaticCanvas.prototype,{toDataURL:function(t){t||(t={});var e=t.format||"png",i=t.quality||1,r=t.multiplier||1,n={left:t.left,top:t.top,width:t.width,height:t.height};return 1!==r?this.__toDataURLWithMultiplier(e,i,n,r):this.__toDataURL(e,i,n)},__toDataURL:function(t,e,i){this.renderAll(!0);var r=this.upperCanvasEl||this.lowerCanvasEl,n=this.__getCroppedCanvas(r,i);"jpg"===t&&(t="jpeg");var s=fabric.StaticCanvas.supports("toDataURLWithQuality")?(n||r).toDataURL("image/"+t,e):(n||r).toDataURL("image/"+t);return this.contextTop&&this.clearContext(this.contextTop),this.renderAll(),n&&(n=null),s},__getCroppedCanvas:function(t,e){var i,r,n="left"in e||"top"in e||"width"in e||"height"in e;return n&&(i=fabric.util.createCanvasElement(),r=i.getContext("2d"),i.width=e.width||this.width,i.height=e.height||this.height,r.drawImage(t,-e.left||0,-e.top||0)),i},__toDataURLWithMultiplier:function(t,e,i,r){var n=this.getWidth(),s=this.getHeight(),o=n*r,a=s*r,h=this.getActiveObject(),c=this.getActiveGroup(),l=this.contextTop||this.contextContainer;r>1&&this.setWidth(o).setHeight(a),l.scale(r,r),i.left&&(i.left*=r),i.top&&(i.top*=r),i.width?i.width*=r:1>r&&(i.width=o),i.height?i.height*=r:1>r&&(i.height=a),c?this._tempRemoveBordersControlsFromGroup(c):h&&this.deactivateAll&&this.deactivateAll(),this.renderAll(!0);var u=this.__toDataURL(t,e,i);return this.width=n,this.height=s,l.scale(1/r,1/r),this.setWidth(n).setHeight(s),c?this._restoreBordersControlsOnGroup(c):h&&this.setActiveObject&&this.setActiveObject(h),this.contextTop&&this.clearContext(this.contextTop),this.renderAll(),u},toDataURLWithMultiplier:function(t,e,i){return this.toDataURL({format:t,multiplier:e,quality:i})},_tempRemoveBordersControlsFromGroup:function(t){t.origHasControls=t.hasControls,t.origBorderColor=t.borderColor,t.hasControls=!0,t.borderColor="rgba(0,0,0,0)",t.forEachObject(function(t){t.origBorderColor=t.borderColor,t.borderColor="rgba(0,0,0,0)"})},_restoreBordersControlsOnGroup:function(t){t.hideControls=t.origHideControls,t.borderColor=t.origBorderColor,t.forEachObject(function(t){t.borderColor=t.origBorderColor,delete t.origBorderColor})}}),fabric.util.object.extend(fabric.StaticCanvas.prototype,{loadFromDatalessJSON:function(t,e,i){return this.loadFromJSON(t,e,i)},loadFromJSON:function(t,e,i){if(t){var r="string"==typeof t?JSON.parse(t):t;this.clear();var n=this;return this._enlivenObjects(r.objects,function(){n._setBgOverlay(r,e)},i),this}},_setBgOverlay:function(t,e){var i=this,r={backgroundColor:!1,overlayColor:!1,backgroundImage:!1,overlayImage:!1};if(!(t.backgroundImage||t.overlayImage||t.background||t.overlay))return void(e&&e());var n=function(){r.backgroundImage&&r.overlayImage&&r.backgroundColor&&r.overlayColor&&(i.renderAll(),e&&e())};this.__setBgOverlay("backgroundImage",t.backgroundImage,r,n),this.__setBgOverlay("overlayImage",t.overlayImage,r,n),this.__setBgOverlay("backgroundColor",t.background,r,n),this.__setBgOverlay("overlayColor",t.overlay,r,n),n()},__setBgOverlay:function(t,e,i,r){var n=this;return e?void("backgroundImage"===t||"overlayImage"===t?fabric.Image.fromObject(e,function(e){n[t]=e,i[t]=!0,r&&r()}):this["set"+fabric.util.string.capitalize(t,!0)](e,function(){i[t]=!0,r&&r()})):void(i[t]=!0)},_enlivenObjects:function(t,e,i){var r=this;if(!t||0===t.length)return void(e&&e());var n=this.renderOnAddRemove;this.renderOnAddRemove=!1,fabric.util.enlivenObjects(t,function(t){t.forEach(function(t,e){r.insertAt(t,e,!0)}),r.renderOnAddRemove=n,e&&e()},null,i)},_toDataURL:function(t,e){this.clone(function(i){e(i.toDataURL(t))})},_toDataURLWithMultiplier:function(t,e,i){this.clone(function(r){i(r.toDataURLWithMultiplier(t,e))})},clone:function(t,e){var i=JSON.stringify(this.toJSON(e));this.cloneWithoutData(function(e){e.loadFromJSON(i,function(){t&&t(e)})})},cloneWithoutData:function(t){var e=fabric.document.createElement("canvas");e.width=this.getWidth(),e.height=this.getHeight();var i=new fabric.Canvas(e);i.clipTo=this.clipTo,this.backgroundImage?(i.setBackgroundImage(this.backgroundImage.src,function(){i.renderAll(),t&&t(i)}),i.backgroundImageOpacity=this.backgroundImageOpacity,i.backgroundImageStretch=this.backgroundImageStretch):t&&t(i)}}),function(){var t=fabric.util.degreesToRadians,e=fabric.util.radiansToDegrees;fabric.util.object.extend(fabric.Canvas.prototype,{__onTransformGesture:function(t,e){if(!this.isDrawingMode&&t.touches&&2===t.touches.length&&"gesture"===e.gesture){var i=this.findTarget(t);"undefined"!=typeof i&&(this.__gesturesParams={e:t,self:e,target:i},this.__gesturesRenderer()),this.fire("touch:gesture",{target:i,e:t,self:e})}},__gesturesParams:null,__gesturesRenderer:function(){if(null!==this.__gesturesParams&&null!==this._currentTransform){var t=this.__gesturesParams.self,e=this._currentTransform;e.action="scale",e.originX=e.originY="center",this._setOriginToCenter(e.target),this._scaleObjectBy(t.scale),0!==t.rotation&&(e.action="rotate",this._rotateObjectByAngle(t.rotation)),this.renderAll(),e.action="drag"}},__onDrag:function(t,e){this.fire("touch:drag",{e:t,self:e})},__onOrientationChange:function(t,e){this.fire("touch:orientation",{e:t,self:e})},__onShake:function(t,e){this.fire("touch:shake",{e:t,self:e})},__onLongPress:function(t,e){this.fire("touch:longpress",{e:t,self:e})},_scaleObjectBy:function(t,e){var i=this._currentTransform,r=i.target,n=r.get("lockScalingX"),s=r.get("lockScalingY");if(!n||!s){r._scaling=!0;var o=r.translateToOriginPoint(r.getCenterPoint(),i.originX,i.originY);e||(i.newScaleX=i.scaleX*t,i.newScaleY=i.scaleY*t,n||r.set("scaleX",i.scaleX*t),s||r.set("scaleY",i.scaleY*t)),r.setPositionByOrigin(o,i.originX,i.originY)}},_rotateObjectByAngle:function(i){var r=this._currentTransform;r.target.get("lockRotation")||(r.target.angle=e(t(i)+r.theta))}})}(),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend,r=e.util.toFixed,n=e.util.string.capitalize,s=e.util.degreesToRadians,o=e.StaticCanvas.supports("setLineDash");e.Object||(e.Object=e.util.createClass({type:"object",originX:"left",originY:"top",top:0,left:0,width:0,height:0,scaleX:1,scaleY:1,flipX:!1,flipY:!1,opacity:1,angle:0,cornerSize:12,transparentCorners:!0,hoverCursor:null,padding:0,borderColor:"rgba(102,153,255,0.75)",cornerColor:"rgba(102,153,255,0.5)",centeredScaling:!1,centeredRotation:!0,fill:"rgb(0,0,0)",fillRule:"nonzero",globalCompositeOperation:"source-over",backgroundColor:"",stroke:null,strokeWidth:1,strokeDashArray:null,strokeLineCap:"butt",strokeLineJoin:"miter",strokeMiterLimit:10,shadow:null,borderOpacityWhenMoving:.4,borderScaleFactor:1,transformMatrix:null,minScaleLimit:.01,selectable:!0,evented:!0,visible:!0,hasControls:!0,hasBorders:!0,hasRotatingPoint:!0,rotatingPointOffset:40,perPixelTargetFind:!1,includeDefaultValues:!0,clipTo:null,lockMovementX:!1,lockMovementY:!1,lockRotation:!1,lockScalingX:!1,lockScalingY:!1,lockUniScaling:!1,lockScalingFlip:!1,stateProperties:"top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor".split(" "),initialize:function(t){t&&this.setOptions(t)},_initGradient:function(t){!t.fill||!t.fill.colorStops||t.fill instanceof e.Gradient||this.set("fill",new e.Gradient(t.fill))},_initPattern:function(t){!t.fill||!t.fill.source||t.fill instanceof e.Pattern||this.set("fill",new e.Pattern(t.fill)),!t.stroke||!t.stroke.source||t.stroke instanceof e.Pattern||this.set("stroke",new e.Pattern(t.stroke))},_initClipping:function(t){if(t.clipTo&&"string"==typeof t.clipTo){var i=e.util.getFunctionBody(t.clipTo);"undefined"!=typeof i&&(this.clipTo=new Function("ctx",i))}},setOptions:function(t){for(var e in t)this.set(e,t[e]);this._initGradient(t),this._initPattern(t),this._initClipping(t)},transform:function(t,e){this.group&&this.group.transform(t,e);var i=e?this._getLeftTopCoords():this.getCenterPoint();t.translate(i.x,i.y),t.rotate(s(this.angle)),t.scale(this.scaleX*(this.flipX?-1:1),this.scaleY*(this.flipY?-1:1))},toObject:function(t){var i=e.Object.NUM_FRACTION_DIGITS,n={type:this.type,originX:this.originX,originY:this.originY,left:r(this.left,i),top:r(this.top,i),width:r(this.width,i),height:r(this.height,i),fill:this.fill&&this.fill.toObject?this.fill.toObject():this.fill,stroke:this.stroke&&this.stroke.toObject?this.stroke.toObject():this.stroke,strokeWidth:r(this.strokeWidth,i),strokeDashArray:this.strokeDashArray,strokeLineCap:this.strokeLineCap,strokeLineJoin:this.strokeLineJoin,strokeMiterLimit:r(this.strokeMiterLimit,i),scaleX:r(this.scaleX,i),scaleY:r(this.scaleY,i),angle:r(this.getAngle(),i),flipX:this.flipX,flipY:this.flipY,opacity:r(this.opacity,i),shadow:this.shadow&&this.shadow.toObject?this.shadow.toObject():this.shadow,visible:this.visible,clipTo:this.clipTo&&String(this.clipTo),backgroundColor:this.backgroundColor,fillRule:this.fillRule,globalCompositeOperation:this.globalCompositeOperation};return this.includeDefaultValues||(n=this._removeDefaultValues(n)),e.util.populateWithProperties(this,n,t),n},toDatalessObject:function(t){return this.toObject(t)},_removeDefaultValues:function(t){var i=e.util.getKlass(t.type).prototype,r=i.stateProperties;return r.forEach(function(e){t[e]===i[e]&&delete t[e]}),t},toString:function(){return"#<fabric."+n(this.type)+">"},get:function(t){return this[t]},_setObject:function(t){for(var e in t)this._set(e,t[e])},set:function(t,e){return"object"==typeof t?this._setObject(t):"function"==typeof e&&"clipTo"!==t?this._set(t,e(this.get(t))):this._set(t,e),this},_set:function(t,i){var n="scaleX"===t||"scaleY"===t;return n&&(i=this._constrainScale(i)),"scaleX"===t&&0>i?(this.flipX=!this.flipX,i*=-1):"scaleY"===t&&0>i?(this.flipY=!this.flipY,i*=-1):"width"===t||"height"===t?this.minScaleLimit=r(Math.min(.1,1/Math.max(this.width,this.height)),2):"shadow"!==t||!i||i instanceof e.Shadow||(i=new e.Shadow(i)),this[t]=i,this},toggle:function(t){var e=this.get(t);return"boolean"==typeof e&&this.set(t,!e),this},setSourcePath:function(t){return this.sourcePath=t,this},getViewportTransform:function(){return this.canvas&&this.canvas.viewportTransform?this.canvas.viewportTransform:[1,0,0,1,0,0]},render:function(t,i){0===this.width&&0===this.height||!this.visible||(t.save(),this._setupCompositeOperation(t),i||this.transform(t),this._setStrokeStyles(t),this._setFillStyles(t),this.group&&"path-group"===this.group.type&&t.translate(-this.group.width/2,-this.group.height/2),this.transformMatrix&&t.transform.apply(t,this.transformMatrix),this._setOpacity(t),this._setShadow(t),this.clipTo&&e.util.clipContext(this,t),this._render(t,i),this.clipTo&&t.restore(),this._removeShadow(t),this._restoreCompositeOperation(t),t.restore())},_setOpacity:function(t){this.group&&this.group._setOpacity(t),t.globalAlpha*=this.opacity},_setStrokeStyles:function(t){this.stroke&&(t.lineWidth=this.strokeWidth,t.lineCap=this.strokeLineCap,t.lineJoin=this.strokeLineJoin,t.miterLimit=this.strokeMiterLimit,t.strokeStyle=this.stroke.toLive?this.stroke.toLive(t,this):this.stroke)},_setFillStyles:function(t){this.fill&&(t.fillStyle=this.fill.toLive?this.fill.toLive(t,this):this.fill)},_renderControls:function(t,i){var r=this.getViewportTransform();if(t.save(),this.active&&!i){var n;this.group&&(n=e.util.transformPoint(this.group.getCenterPoint(),r),t.translate(n.x,n.y),t.rotate(s(this.group.angle))),n=e.util.transformPoint(this.getCenterPoint(),r,null!=this.group),this.group&&(n.x*=this.group.scaleX,n.y*=this.group.scaleY),t.translate(n.x,n.y),t.rotate(s(this.angle)),this.drawBorders(t),this.drawControls(t)}t.restore()},_setShadow:function(t){if(this.shadow){var e=this.canvas&&this.canvas._currentMultiplier||1;t.shadowColor=this.shadow.color,t.shadowBlur=this.shadow.blur*e*(this.scaleX+this.scaleY)/2,t.shadowOffsetX=this.shadow.offsetX*e*this.scaleX,t.shadowOffsetY=this.shadow.offsetY*e*this.scaleY}},_removeShadow:function(t){this.shadow&&(t.shadowColor="",t.shadowBlur=t.shadowOffsetX=t.shadowOffsetY=0)},_renderFill:function(t){if(this.fill){if(t.save(),this.fill.gradientTransform){var e=this.fill.gradientTransform;t.transform.apply(t,e)}this.fill.toLive&&t.translate(-this.width/2+this.fill.offsetX||0,-this.height/2+this.fill.offsetY||0),"evenodd"===this.fillRule?t.fill("evenodd"):t.fill(),t.restore(),this.shadow&&!this.shadow.affectStroke&&this._removeShadow(t)}},_renderStroke:function(t){if(this.stroke&&0!==this.strokeWidth){if(t.save(),this.strokeDashArray)1&this.strokeDashArray.length&&this.strokeDashArray.push.apply(this.strokeDashArray,this.strokeDashArray),o?(t.setLineDash(this.strokeDashArray),this._stroke&&this._stroke(t)):this._renderDashedStroke&&this._renderDashedStroke(t),t.stroke();else{if(this.stroke.gradientTransform){var e=this.stroke.gradientTransform;t.transform.apply(t,e)}this._stroke?this._stroke(t):t.stroke()}this._removeShadow(t),t.restore()}},clone:function(t,i){return this.constructor.fromObject?this.constructor.fromObject(this.toObject(i),t):new e.Object(this.toObject(i))},cloneAsImage:function(t){var i=this.toDataURL();return e.util.loadImage(i,function(i){t&&t(new e.Image(i))}),this},toDataURL:function(t){t||(t={});var i=e.util.createCanvasElement(),r=this.getBoundingRect();i.width=r.width,i.height=r.height,e.util.wrapElement(i,"div");var n=new e.Canvas(i);"jpg"===t.format&&(t.format="jpeg"),"jpeg"===t.format&&(n.backgroundColor="#fff");var s={active:this.get("active"),left:this.getLeft(),top:this.getTop()};this.set("active",!1),this.setPositionByOrigin(new e.Point(i.width/2,i.height/2),"center","center");var o=this.canvas;n.add(this);var a=n.toDataURL(t);return this.set(s).setCoords(),this.canvas=o,n.dispose(),n=null,a},isType:function(t){return this.type===t},complexity:function(){return 0},toJSON:function(t){return this.toObject(t)},setGradient:function(t,i){i||(i={});var r={colorStops:[]};r.type=i.type||(i.r1||i.r2?"radial":"linear"),r.coords={x1:i.x1,y1:i.y1,x2:i.x2,y2:i.y2},(i.r1||i.r2)&&(r.coords.r1=i.r1,r.coords.r2=i.r2);for(var n in i.colorStops){var s=new e.Color(i.colorStops[n]);r.colorStops.push({offset:n,color:s.toRgb(),opacity:s.getAlpha()})}return this.set(t,e.Gradient.forObject(this,r))},setPatternFill:function(t){return this.set("fill",new e.Pattern(t))},setShadow:function(t){return this.set("shadow",t?new e.Shadow(t):null)},setColor:function(t){return this.set("fill",t),this},setAngle:function(t){var e=("center"!==this.originX||"center"!==this.originY)&&this.centeredRotation;return e&&this._setOriginToCenter(),this.set("angle",t),e&&this._resetOrigin(),this},centerH:function(){return this.canvas.centerObjectH(this),this},centerV:function(){return this.canvas.centerObjectV(this),this},center:function(){return this.canvas.centerObject(this),this},remove:function(){return this.canvas.remove(this),this},getLocalPointer:function(t,e){e=e||this.canvas.getPointer(t);var i=this.translateToOriginPoint(this.getCenterPoint(),"left","top");return{x:e.x-i.x,y:e.y-i.y}},_setupCompositeOperation:function(t){this.globalCompositeOperation&&(this._prevGlobalCompositeOperation=t.globalCompositeOperation,t.globalCompositeOperation=this.globalCompositeOperation)},_restoreCompositeOperation:function(t){this.globalCompositeOperation&&this._prevGlobalCompositeOperation&&(t.globalCompositeOperation=this._prevGlobalCompositeOperation)}}),e.util.createAccessors(e.Object),e.Object.prototype.rotate=e.Object.prototype.setAngle,i(e.Object.prototype,e.Observable),e.Object.NUM_FRACTION_DIGITS=2,e.Object.__uid=0)}("undefined"!=typeof exports?exports:this),function(){var t=fabric.util.degreesToRadians;fabric.util.object.extend(fabric.Object.prototype,{translateToCenterPoint:function(e,i,r){var n=e.x,s=e.y,o=this.stroke?this.strokeWidth:0;return"left"===i?n=e.x+(this.getWidth()+o*this.scaleX)/2:"right"===i&&(n=e.x-(this.getWidth()+o*this.scaleX)/2),"top"===r?s=e.y+(this.getHeight()+o*this.scaleY)/2:"bottom"===r&&(s=e.y-(this.getHeight()+o*this.scaleY)/2),fabric.util.rotatePoint(new fabric.Point(n,s),e,t(this.angle))},translateToOriginPoint:function(e,i,r){var n=e.x,s=e.y,o=this.stroke?this.strokeWidth:0;return"left"===i?n=e.x-(this.getWidth()+o*this.scaleX)/2:"right"===i&&(n=e.x+(this.getWidth()+o*this.scaleX)/2),"top"===r?s=e.y-(this.getHeight()+o*this.scaleY)/2:"bottom"===r&&(s=e.y+(this.getHeight()+o*this.scaleY)/2),fabric.util.rotatePoint(new fabric.Point(n,s),e,t(this.angle))},getCenterPoint:function(){var t=new fabric.Point(this.left,this.top);return this.translateToCenterPoint(t,this.originX,this.originY)},getPointByOrigin:function(t,e){var i=this.getCenterPoint();return this.translateToOriginPoint(i,t,e)},toLocalPoint:function(e,i,r){var n,s,o=this.getCenterPoint(),a=this.stroke?this.strokeWidth:0;
return i&&r?(n="left"===i?o.x-(this.getWidth()+a*this.scaleX)/2:"right"===i?o.x+(this.getWidth()+a*this.scaleX)/2:o.x,s="top"===r?o.y-(this.getHeight()+a*this.scaleY)/2:"bottom"===r?o.y+(this.getHeight()+a*this.scaleY)/2:o.y):(n=this.left,s=this.top),fabric.util.rotatePoint(new fabric.Point(e.x,e.y),o,-t(this.angle)).subtractEquals(new fabric.Point(n,s))},setPositionByOrigin:function(t,e,i){var r=this.translateToCenterPoint(t,e,i),n=this.translateToOriginPoint(r,this.originX,this.originY);this.set("left",n.x),this.set("top",n.y)},adjustPosition:function(e){var i=t(this.angle),r=this.getWidth()/2,n=Math.cos(i)*r,s=Math.sin(i)*r,o=this.getWidth(),a=Math.cos(i)*o,h=Math.sin(i)*o;"center"===this.originX&&"left"===e||"right"===this.originX&&"center"===e?(this.left-=n,this.top-=s):"left"===this.originX&&"center"===e||"center"===this.originX&&"right"===e?(this.left+=n,this.top+=s):"left"===this.originX&&"right"===e?(this.left+=a,this.top+=h):"right"===this.originX&&"left"===e&&(this.left-=a,this.top-=h),this.setCoords(),this.originX=e},_setOriginToCenter:function(){this._originalOriginX=this.originX,this._originalOriginY=this.originY;var t=this.getCenterPoint();this.originX="center",this.originY="center",this.left=t.x,this.top=t.y},_resetOrigin:function(){var t=this.translateToOriginPoint(this.getCenterPoint(),this._originalOriginX,this._originalOriginY);this.originX=this._originalOriginX,this.originY=this._originalOriginY,this.left=t.x,this.top=t.y,this._originalOriginX=null,this._originalOriginY=null},_getLeftTopCoords:function(){return this.translateToOriginPoint(this.getCenterPoint(),"left","center")}})}(),function(){var t=fabric.util.degreesToRadians;fabric.util.object.extend(fabric.Object.prototype,{oCoords:null,intersectsWithRect:function(t,e){var i=this.oCoords,r=new fabric.Point(i.tl.x,i.tl.y),n=new fabric.Point(i.tr.x,i.tr.y),s=new fabric.Point(i.bl.x,i.bl.y),o=new fabric.Point(i.br.x,i.br.y),a=fabric.Intersection.intersectPolygonRectangle([r,n,o,s],t,e);return"Intersection"===a.status},intersectsWithObject:function(t){function e(t){return{tl:new fabric.Point(t.tl.x,t.tl.y),tr:new fabric.Point(t.tr.x,t.tr.y),bl:new fabric.Point(t.bl.x,t.bl.y),br:new fabric.Point(t.br.x,t.br.y)}}var i=e(this.oCoords),r=e(t.oCoords),n=fabric.Intersection.intersectPolygonPolygon([i.tl,i.tr,i.br,i.bl],[r.tl,r.tr,r.br,r.bl]);return"Intersection"===n.status},isContainedWithinObject:function(t){var e=t.getBoundingRect(),i=new fabric.Point(e.left,e.top),r=new fabric.Point(e.left+e.width,e.top+e.height);return this.isContainedWithinRect(i,r)},isContainedWithinRect:function(t,e){var i=this.getBoundingRect();return i.left>=t.x&&i.left+i.width<=e.x&&i.top>=t.y&&i.top+i.height<=e.y},containsPoint:function(t){var e=this._getImageLines(this.oCoords),i=this._findCrossPoints(t,e);return 0!==i&&i%2===1},_getImageLines:function(t){return{topline:{o:t.tl,d:t.tr},rightline:{o:t.tr,d:t.br},bottomline:{o:t.br,d:t.bl},leftline:{o:t.bl,d:t.tl}}},_findCrossPoints:function(t,e){var i,r,n,s,o,a,h,c=0;for(var l in e)if(h=e[l],!(h.o.y<t.y&&h.d.y<t.y||h.o.y>=t.y&&h.d.y>=t.y||(h.o.x===h.d.x&&h.o.x>=t.x?(o=h.o.x,a=t.y):(i=0,r=(h.d.y-h.o.y)/(h.d.x-h.o.x),n=t.y-i*t.x,s=h.o.y-r*h.o.x,o=-(n-s)/(i-r),a=n+i*o),o>=t.x&&(c+=1),2!==c)))break;return c},getBoundingRectWidth:function(){return this.getBoundingRect().width},getBoundingRectHeight:function(){return this.getBoundingRect().height},getBoundingRect:function(){this.oCoords||this.setCoords();var t=[this.oCoords.tl.x,this.oCoords.tr.x,this.oCoords.br.x,this.oCoords.bl.x],e=fabric.util.array.min(t),i=fabric.util.array.max(t),r=Math.abs(e-i),n=[this.oCoords.tl.y,this.oCoords.tr.y,this.oCoords.br.y,this.oCoords.bl.y],s=fabric.util.array.min(n),o=fabric.util.array.max(n),a=Math.abs(s-o);return{left:e,top:s,width:r,height:a}},getWidth:function(){return this.width*this.scaleX},getHeight:function(){return this.height*this.scaleY},_constrainScale:function(t){return Math.abs(t)<this.minScaleLimit?0>t?-this.minScaleLimit:this.minScaleLimit:t},scale:function(t){return t=this._constrainScale(t),0>t&&(this.flipX=!this.flipX,this.flipY=!this.flipY,t*=-1),this.scaleX=t,this.scaleY=t,this.setCoords(),this},scaleToWidth:function(t){var e=this.getBoundingRectWidth()/this.getWidth();return this.scale(t/this.width/e)},scaleToHeight:function(t){var e=this.getBoundingRectHeight()/this.getHeight();return this.scale(t/this.height/e)},setCoords:function(){var e=this.strokeWidth,i=t(this.angle),r=this.getViewportTransform(),n=function(t){return fabric.util.transformPoint(t,r)},s=this.width,o=this.height,a="round"===this.strokeLineCap||"square"===this.strokeLineCap,h="line"===this.type&&0===this.width,c="line"===this.type&&0===this.height,l=h||c,u=a&&c||!l,f=a&&h||!l;h?s=e:c&&(o=e),u&&(s+=s>0?e:-e),f&&(o+=o>0?e:-e),this.currentWidth=s*this.scaleX,this.currentHeight=o*this.scaleY,this.currentWidth<0&&(this.currentWidth=Math.abs(this.currentWidth));var d=Math.sqrt(Math.pow(this.currentWidth/2,2)+Math.pow(this.currentHeight/2,2)),g=Math.atan(isFinite(this.currentHeight/this.currentWidth)?this.currentHeight/this.currentWidth:0),p=Math.cos(g+i)*d,v=Math.sin(g+i)*d,m=Math.sin(i),y=Math.cos(i),b=this.getCenterPoint(),x=new fabric.Point(this.currentWidth,this.currentHeight),_=new fabric.Point(b.x-p,b.y-v),C=new fabric.Point(_.x+x.x*y,_.y+x.x*m),S=new fabric.Point(_.x-x.y*m,_.y+x.y*y),w=new fabric.Point(_.x+x.x/2*y,_.y+x.x/2*m),O=n(_),T=n(C),E=n(new fabric.Point(C.x-x.y*m,C.y+x.y*y)),k=n(S),P=n(new fabric.Point(_.x-x.y/2*m,_.y+x.y/2*y)),j=n(w),A=n(new fabric.Point(C.x-x.y/2*m,C.y+x.y/2*y)),M=n(new fabric.Point(S.x+x.x/2*y,S.y+x.x/2*m)),D=n(new fabric.Point(w.x,w.y)),L=Math.cos(g+i)*this.padding*Math.sqrt(2),I=Math.sin(g+i)*this.padding*Math.sqrt(2);return O=O.add(new fabric.Point(-L,-I)),T=T.add(new fabric.Point(I,-L)),E=E.add(new fabric.Point(L,I)),k=k.add(new fabric.Point(-I,L)),P=P.add(new fabric.Point((-L-I)/2,(-I+L)/2)),j=j.add(new fabric.Point((I-L)/2,-(I+L)/2)),A=A.add(new fabric.Point((I+L)/2,(I-L)/2)),M=M.add(new fabric.Point((L-I)/2,(L+I)/2)),D=D.add(new fabric.Point((I-L)/2,-(I+L)/2)),this.oCoords={tl:O,tr:T,br:E,bl:k,ml:P,mt:j,mr:A,mb:M,mtr:D},this._setCornerCoords&&this._setCornerCoords(),this}})}(),fabric.util.object.extend(fabric.Object.prototype,{sendToBack:function(){return this.group?fabric.StaticCanvas.prototype.sendToBack.call(this.group,this):this.canvas.sendToBack(this),this},bringToFront:function(){return this.group?fabric.StaticCanvas.prototype.bringToFront.call(this.group,this):this.canvas.bringToFront(this),this},sendBackwards:function(t){return this.group?fabric.StaticCanvas.prototype.sendBackwards.call(this.group,this,t):this.canvas.sendBackwards(this,t),this},bringForward:function(t){return this.group?fabric.StaticCanvas.prototype.bringForward.call(this.group,this,t):this.canvas.bringForward(this,t),this},moveTo:function(t){return this.group?fabric.StaticCanvas.prototype.moveTo.call(this.group,this,t):this.canvas.moveTo(this,t),this}}),fabric.util.object.extend(fabric.Object.prototype,{getSvgStyles:function(){var t=this.fill?this.fill.toLive?"url(#SVGID_"+this.fill.id+")":this.fill:"none",e=this.fillRule,i=this.stroke?this.stroke.toLive?"url(#SVGID_"+this.stroke.id+")":this.stroke:"none",r=this.strokeWidth?this.strokeWidth:"0",n=this.strokeDashArray?this.strokeDashArray.join(" "):"",s=this.strokeLineCap?this.strokeLineCap:"butt",o=this.strokeLineJoin?this.strokeLineJoin:"miter",a=this.strokeMiterLimit?this.strokeMiterLimit:"4",h="undefined"!=typeof this.opacity?this.opacity:"1",c=this.visible?"":" visibility: hidden;",l=this.shadow&&"text"!==this.type?"filter: url(#SVGID_"+this.shadow.id+");":"";return["stroke: ",i,"; ","stroke-width: ",r,"; ","stroke-dasharray: ",n,"; ","stroke-linecap: ",s,"; ","stroke-linejoin: ",o,"; ","stroke-miterlimit: ",a,"; ","fill: ",t,"; ","fill-rule: ",e,"; ","opacity: ",h,";",l,c].join("")},getSvgTransform:function(){if(this.group&&"path-group"===this.group.type)return"";var t=fabric.util.toFixed,e=this.getAngle(),i=!this.canvas||this.canvas.svgViewportTransformation?this.getViewportTransform():[1,0,0,1,0,0],r=fabric.util.transformPoint(this.getCenterPoint(),i),n=fabric.Object.NUM_FRACTION_DIGITS,s="path-group"===this.type?"":"translate("+t(r.x,n)+" "+t(r.y,n)+")",o=0!==e?" rotate("+t(e,n)+")":"",a=1===this.scaleX&&1===this.scaleY&&1===i[0]&&1===i[3]?"":" scale("+t(this.scaleX*i[0],n)+" "+t(this.scaleY*i[3],n)+")",h="path-group"===this.type?this.width*i[0]:0,c=this.flipX?" matrix(-1 0 0 1 "+h+" 0) ":"",l="path-group"===this.type?this.height*i[3]:0,u=this.flipY?" matrix(1 0 0 -1 0 "+l+")":"";return[s,o,a,c,u].join("")},getSvgTransformMatrix:function(){return this.transformMatrix?" matrix("+this.transformMatrix.join(" ")+")":""},_createBaseSVGMarkup:function(){var t=[];return this.fill&&this.fill.toLive&&t.push(this.fill.toSVG(this,!1)),this.stroke&&this.stroke.toLive&&t.push(this.stroke.toSVG(this,!1)),this.shadow&&t.push(this.shadow.toSVG(this)),t}}),fabric.util.object.extend(fabric.Object.prototype,{hasStateChanged:function(){return this.stateProperties.some(function(t){return this.get(t)!==this.originalState[t]},this)},saveState:function(t){return this.stateProperties.forEach(function(t){this.originalState[t]=this.get(t)},this),t&&t.stateProperties&&t.stateProperties.forEach(function(t){this.originalState[t]=this.get(t)},this),this},setupState:function(){return this.originalState={},this.saveState(),this}}),function(){var t=fabric.util.degreesToRadians,e=function(){return"undefined"!=typeof G_vmlCanvasManager};fabric.util.object.extend(fabric.Object.prototype,{_controlsVisibility:null,_findTargetCorner:function(t){if(!this.hasControls||!this.active)return!1;var e,i,r=t.x,n=t.y;for(var s in this.oCoords)if(this.isControlVisible(s)&&("mtr"!==s||this.hasRotatingPoint)&&(!this.get("lockUniScaling")||"mt"!==s&&"mr"!==s&&"mb"!==s&&"ml"!==s)&&(i=this._getImageLines(this.oCoords[s].corner),e=this._findCrossPoints({x:r,y:n},i),0!==e&&e%2===1))return this.__corner=s,s;return!1},_setCornerCoords:function(){var e=this.oCoords,i=t(this.angle),r=t(45-this.angle),n=Math.sqrt(2*Math.pow(this.cornerSize,2))/2,s=n*Math.cos(r),o=n*Math.sin(r),a=Math.sin(i),h=Math.cos(i);e.tl.corner={tl:{x:e.tl.x-o,y:e.tl.y-s},tr:{x:e.tl.x+s,y:e.tl.y-o},bl:{x:e.tl.x-s,y:e.tl.y+o},br:{x:e.tl.x+o,y:e.tl.y+s}},e.tr.corner={tl:{x:e.tr.x-o,y:e.tr.y-s},tr:{x:e.tr.x+s,y:e.tr.y-o},br:{x:e.tr.x+o,y:e.tr.y+s},bl:{x:e.tr.x-s,y:e.tr.y+o}},e.bl.corner={tl:{x:e.bl.x-o,y:e.bl.y-s},bl:{x:e.bl.x-s,y:e.bl.y+o},br:{x:e.bl.x+o,y:e.bl.y+s},tr:{x:e.bl.x+s,y:e.bl.y-o}},e.br.corner={tr:{x:e.br.x+s,y:e.br.y-o},bl:{x:e.br.x-s,y:e.br.y+o},br:{x:e.br.x+o,y:e.br.y+s},tl:{x:e.br.x-o,y:e.br.y-s}},e.ml.corner={tl:{x:e.ml.x-o,y:e.ml.y-s},tr:{x:e.ml.x+s,y:e.ml.y-o},bl:{x:e.ml.x-s,y:e.ml.y+o},br:{x:e.ml.x+o,y:e.ml.y+s}},e.mt.corner={tl:{x:e.mt.x-o,y:e.mt.y-s},tr:{x:e.mt.x+s,y:e.mt.y-o},bl:{x:e.mt.x-s,y:e.mt.y+o},br:{x:e.mt.x+o,y:e.mt.y+s}},e.mr.corner={tl:{x:e.mr.x-o,y:e.mr.y-s},tr:{x:e.mr.x+s,y:e.mr.y-o},bl:{x:e.mr.x-s,y:e.mr.y+o},br:{x:e.mr.x+o,y:e.mr.y+s}},e.mb.corner={tl:{x:e.mb.x-o,y:e.mb.y-s},tr:{x:e.mb.x+s,y:e.mb.y-o},bl:{x:e.mb.x-s,y:e.mb.y+o},br:{x:e.mb.x+o,y:e.mb.y+s}},e.mtr.corner={tl:{x:e.mtr.x-o+a*this.rotatingPointOffset,y:e.mtr.y-s-h*this.rotatingPointOffset},tr:{x:e.mtr.x+s+a*this.rotatingPointOffset,y:e.mtr.y-o-h*this.rotatingPointOffset},bl:{x:e.mtr.x-s+a*this.rotatingPointOffset,y:e.mtr.y+o-h*this.rotatingPointOffset},br:{x:e.mtr.x+o+a*this.rotatingPointOffset,y:e.mtr.y+s-h*this.rotatingPointOffset}}},drawBorders:function(t){if(!this.hasBorders)return this;var e=this.padding,i=2*e,r=this.getViewportTransform();t.save(),t.globalAlpha=this.isMoving?this.borderOpacityWhenMoving:1,t.strokeStyle=this.borderColor;var n=1/this._constrainScale(this.scaleX),s=1/this._constrainScale(this.scaleY);t.lineWidth=1/this.borderScaleFactor;var o=this.getWidth(),a=this.getHeight(),h=this.strokeWidth,c="round"===this.strokeLineCap||"square"===this.strokeLineCap,l="line"===this.type&&0===this.width,u="line"===this.type&&0===this.height,f=l||u,d=c&&u||!f,g=c&&l||!f;l?o=h/n:u&&(a=h/s),d&&(o+=h/n),g&&(a+=h/s);var p=fabric.util.transformPoint(new fabric.Point(o,a),r,!0),v=p.x,m=p.y;if(this.group&&(v*=this.group.scaleX,m*=this.group.scaleY),t.strokeRect(~~(-(v/2)-e)-.5,~~(-(m/2)-e)-.5,~~(v+i)+1,~~(m+i)+1),this.hasRotatingPoint&&this.isControlVisible("mtr")&&!this.get("lockRotation")&&this.hasControls){var y=(-m-2*e)/2;t.beginPath(),t.moveTo(0,y),t.lineTo(0,y-this.rotatingPointOffset),t.closePath(),t.stroke()}return t.restore(),this},drawControls:function(t){if(!this.hasControls)return this;var e=this.cornerSize,i=e/2,r=this.getViewportTransform(),n=this.strokeWidth,s=this.width,o=this.height,a="round"===this.strokeLineCap||"square"===this.strokeLineCap,h="line"===this.type&&0===this.width,c="line"===this.type&&0===this.height,l=h||c,u=a&&c||!l,f=a&&h||!l;h?s=n:c&&(o=n),u&&(s+=n),f&&(o+=n),s*=this.scaleX,o*=this.scaleY;var d=fabric.util.transformPoint(new fabric.Point(s,o),r,!0),g=d.x,p=d.y,v=-(g/2),m=-(p/2),y=this.padding,b=i,x=i-e,_=this.transparentCorners?"strokeRect":"fillRect";return t.save(),t.lineWidth=1,t.globalAlpha=this.isMoving?this.borderOpacityWhenMoving:1,t.strokeStyle=t.fillStyle=this.cornerColor,this._drawControl("tl",t,_,v-b-y,m-b-y),this._drawControl("tr",t,_,v+g-b+y,m-b-y),this._drawControl("bl",t,_,v-b-y,m+p+x+y),this._drawControl("br",t,_,v+g+x+y,m+p+x+y),this.get("lockUniScaling")||(this._drawControl("mt",t,_,v+g/2-b,m-b-y),this._drawControl("mb",t,_,v+g/2-b,m+p+x+y),this._drawControl("mr",t,_,v+g+x+y,m+p/2-b),this._drawControl("ml",t,_,v-b-y,m+p/2-b)),this.hasRotatingPoint&&this._drawControl("mtr",t,_,v+g/2-b,m-this.rotatingPointOffset-this.cornerSize/2-y),t.restore(),this},_drawControl:function(t,i,r,n,s){var o=this.cornerSize;this.isControlVisible(t)&&(e()||this.transparentCorners||i.clearRect(n,s,o,o),i[r](n,s,o,o))},isControlVisible:function(t){return this._getControlsVisibility()[t]},setControlVisible:function(t,e){return this._getControlsVisibility()[t]=e,this},setControlsVisibility:function(t){t||(t={});for(var e in t)this.setControlVisible(e,t[e]);return this},_getControlsVisibility:function(){return this._controlsVisibility||(this._controlsVisibility={tl:!0,tr:!0,br:!0,bl:!0,ml:!0,mt:!0,mr:!0,mb:!0,mtr:!0}),this._controlsVisibility}})}(),fabric.util.object.extend(fabric.StaticCanvas.prototype,{FX_DURATION:500,fxCenterObjectH:function(t,e){e=e||{};var i=function(){},r=e.onComplete||i,n=e.onChange||i,s=this;return fabric.util.animate({startValue:t.get("left"),endValue:this.getCenter().left,duration:this.FX_DURATION,onChange:function(e){t.set("left",e),s.renderAll(),n()},onComplete:function(){t.setCoords(),r()}}),this},fxCenterObjectV:function(t,e){e=e||{};var i=function(){},r=e.onComplete||i,n=e.onChange||i,s=this;return fabric.util.animate({startValue:t.get("top"),endValue:this.getCenter().top,duration:this.FX_DURATION,onChange:function(e){t.set("top",e),s.renderAll(),n()},onComplete:function(){t.setCoords(),r()}}),this},fxRemove:function(t,e){e=e||{};var i=function(){},r=e.onComplete||i,n=e.onChange||i,s=this;return fabric.util.animate({startValue:t.get("opacity"),endValue:0,duration:this.FX_DURATION,onStart:function(){t.set("active",!1)},onChange:function(e){t.set("opacity",e),s.renderAll(),n()},onComplete:function(){s.remove(t),r()}}),this}}),fabric.util.object.extend(fabric.Object.prototype,{animate:function(){if(arguments[0]&&"object"==typeof arguments[0]){var t,e,i=[];for(t in arguments[0])i.push(t);for(var r=0,n=i.length;n>r;r++)t=i[r],e=r!==n-1,this._animate(t,arguments[0][t],arguments[1],e)}else this._animate.apply(this,arguments);return this},_animate:function(t,e,i,r){var n,s=this;e=e.toString(),i=i?fabric.util.object.clone(i):{},~t.indexOf(".")&&(n=t.split("."));var o=n?this.get(n[0])[n[1]]:this.get(t);"from"in i||(i.from=o),e=~e.indexOf("=")?o+parseFloat(e.replace("=","")):parseFloat(e),fabric.util.animate({startValue:i.from,endValue:e,byValue:i.by,easing:i.easing,duration:i.duration,abort:i.abort&&function(){return i.abort.call(s)},onChange:function(e){n?s[n[0]][n[1]]=e:s.set(t,e),r||i.onChange&&i.onChange()},onComplete:function(){r||(s.setCoords(),i.onComplete&&i.onComplete())}})}}),function(t){"use strict";function e(t,e){var i=t.origin,r=t.axis1,n=t.axis2,s=t.dimension,o=e.nearest,a=e.center,h=e.farthest;return function(){switch(this.get(i)){case o:return Math.min(this.get(r),this.get(n));case a:return Math.min(this.get(r),this.get(n))+.5*this.get(s);case h:return Math.max(this.get(r),this.get(n))}}}var i=t.fabric||(t.fabric={}),r=i.util.object.extend,n={x1:1,x2:1,y1:1,y2:1},s=i.StaticCanvas.supports("setLineDash");return i.Line?void i.warn("fabric.Line is already defined"):(i.Line=i.util.createClass(i.Object,{type:"line",x1:0,y1:0,x2:0,y2:0,initialize:function(t,e){e=e||{},t||(t=[0,0,0,0]),this.callSuper("initialize",e),this.set("x1",t[0]),this.set("y1",t[1]),this.set("x2",t[2]),this.set("y2",t[3]),this._setWidthHeight(e)},_setWidthHeight:function(t){t||(t={}),this.width=Math.abs(this.x2-this.x1),this.height=Math.abs(this.y2-this.y1),this.left="left"in t?t.left:this._getLeftToOriginX(),this.top="top"in t?t.top:this._getTopToOriginY()},_set:function(t,e){return this.callSuper("_set",t,e),"undefined"!=typeof n[t]&&this._setWidthHeight(),this},_getLeftToOriginX:e({origin:"originX",axis1:"x1",axis2:"x2",dimension:"width"},{nearest:"left",center:"center",farthest:"right"}),_getTopToOriginY:e({origin:"originY",axis1:"y1",axis2:"y2",dimension:"height"},{nearest:"top",center:"center",farthest:"bottom"}),_render:function(t,e){if(t.beginPath(),e){var i=this.getCenterPoint();t.translate(i.x-this.strokeWidth/2,i.y-this.strokeWidth/2)}if(!this.strokeDashArray||this.strokeDashArray&&s){var r=this.calcLinePoints();t.moveTo(r.x1,r.y1),t.lineTo(r.x2,r.y2)}t.lineWidth=this.strokeWidth;var n=t.strokeStyle;t.strokeStyle=this.stroke||t.fillStyle,this.stroke&&this._renderStroke(t),t.strokeStyle=n},_renderDashedStroke:function(t){var e=this.calcLinePoints();t.beginPath(),i.util.drawDashedLine(t,e.x1,e.y1,e.x2,e.y2,this.strokeDashArray),t.closePath()},toObject:function(t){return r(this.callSuper("toObject",t),this.calcLinePoints())},calcLinePoints:function(){var t=this.x1<=this.x2?-1:1,e=this.y1<=this.y2?-1:1,i=t*this.width*.5,r=e*this.height*.5,n=t*this.width*-.5,s=e*this.height*-.5;return{x1:i,x2:n,y1:r,y2:s}},toSVG:function(t){var e=this._createBaseSVGMarkup(),i={x1:this.x1,x2:this.x2,y1:this.y1,y2:this.y2};return this.group&&"path-group"===this.group.type||(i=this.calcLinePoints()),e.push("<line ",'x1="',i.x1,'" y1="',i.y1,'" x2="',i.x2,'" y2="',i.y2,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n'),t?t(e.join("")):e.join("")},complexity:function(){return 1}}),i.Line.ATTRIBUTE_NAMES=i.SHARED_ATTRIBUTES.concat("x1 y1 x2 y2".split(" ")),i.Line.fromElement=function(t,e){var n=i.parseAttributes(t,i.Line.ATTRIBUTE_NAMES),s=[n.x1||0,n.y1||0,n.x2||0,n.y2||0];return new i.Line(s,r(n,e))},void(i.Line.fromObject=function(t){var e=[t.x1,t.y1,t.x2,t.y2];return new i.Line(e,t)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";function e(t){return"radius"in t&&t.radius>0}var i=t.fabric||(t.fabric={}),r=Math.PI,n=i.util.object.extend;return i.Circle?void i.warn("fabric.Circle is already defined."):(i.Circle=i.util.createClass(i.Object,{type:"circle",radius:0,startAngle:0,endAngle:2*r,initialize:function(t){t=t||{},this.callSuper("initialize",t),this.set("radius",t.radius||0),this.startAngle=t.startAngle||this.startAngle,this.endAngle=t.endAngle||this.endAngle},_set:function(t,e){return this.callSuper("_set",t,e),"radius"===t&&this.setRadius(e),this},toObject:function(t){return n(this.callSuper("toObject",t),{radius:this.get("radius"),startAngle:this.startAngle,endAngle:this.endAngle})},toSVG:function(t){var e=this._createBaseSVGMarkup(),i=0,n=0,s=(this.endAngle-this.startAngle)%(2*r);if(0===s)this.group&&"path-group"===this.group.type&&(i=this.left+this.radius,n=this.top+this.radius),e.push("<circle ",'cx="'+i+'" cy="'+n+'" ','r="',this.radius,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform()," ",this.getSvgTransformMatrix(),'"/>\n');else{var o=Math.cos(this.startAngle)*this.radius,a=Math.sin(this.startAngle)*this.radius,h=Math.cos(this.endAngle)*this.radius,c=Math.sin(this.endAngle)*this.radius,l=s>r?"1":"0";e.push('<path d="M '+o+" "+a," A "+this.radius+" "+this.radius," 0 ",+l+" 1"," "+h+" "+c,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform()," ",this.getSvgTransformMatrix(),'"/>\n')}return t?t(e.join("")):e.join("")},_render:function(t,e){t.beginPath(),t.arc(e?this.left+this.radius:0,e?this.top+this.radius:0,this.radius,this.startAngle,this.endAngle,!1),this._renderFill(t),this._renderStroke(t)},getRadiusX:function(){return this.get("radius")*this.get("scaleX")},getRadiusY:function(){return this.get("radius")*this.get("scaleY")},setRadius:function(t){this.radius=t,this.set("width",2*t).set("height",2*t)},complexity:function(){return 1}}),i.Circle.ATTRIBUTE_NAMES=i.SHARED_ATTRIBUTES.concat("cx cy r".split(" ")),i.Circle.fromElement=function(t,r){r||(r={});var s=i.parseAttributes(t,i.Circle.ATTRIBUTE_NAMES);if(!e(s))throw new Error("value of `r` attribute is required and can not be negative");s.left=s.left||0,s.top=s.top||0;var o=new i.Circle(n(s,r));return o.left-=o.radius,o.top-=o.radius,o},void(i.Circle.fromObject=function(t){return new i.Circle(t)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});return e.Triangle?void e.warn("fabric.Triangle is already defined"):(e.Triangle=e.util.createClass(e.Object,{type:"triangle",initialize:function(t){t=t||{},this.callSuper("initialize",t),this.set("width",t.width||100).set("height",t.height||100)},_render:function(t){var e=this.width/2,i=this.height/2;t.beginPath(),t.moveTo(-e,i),t.lineTo(0,-i),t.lineTo(e,i),t.closePath(),this._renderFill(t),this._renderStroke(t)},_renderDashedStroke:function(t){var i=this.width/2,r=this.height/2;t.beginPath(),e.util.drawDashedLine(t,-i,r,0,-r,this.strokeDashArray),e.util.drawDashedLine(t,0,-r,i,r,this.strokeDashArray),e.util.drawDashedLine(t,i,r,-i,r,this.strokeDashArray),t.closePath()},toSVG:function(t){var e=this._createBaseSVGMarkup(),i=this.width/2,r=this.height/2,n=[-i+" "+r,"0 "+-r,i+" "+r].join(",");return e.push("<polygon ",'points="',n,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),'"/>'),t?t(e.join("")):e.join("")},complexity:function(){return 1}}),void(e.Triangle.fromObject=function(t){return new e.Triangle(t)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=2*Math.PI,r=e.util.object.extend;return e.Ellipse?void e.warn("fabric.Ellipse is already defined."):(e.Ellipse=e.util.createClass(e.Object,{type:"ellipse",rx:0,ry:0,initialize:function(t){t=t||{},this.callSuper("initialize",t),this.set("rx",t.rx||0),this.set("ry",t.ry||0)},_set:function(t,e){switch(this.callSuper("_set",t,e),t){case"rx":this.rx=e,this.set("width",2*e);break;case"ry":this.ry=e,this.set("height",2*e)}return this},getRx:function(){return this.get("rx")*this.get("scaleX")},getRy:function(){return this.get("ry")*this.get("scaleY")},toObject:function(t){return r(this.callSuper("toObject",t),{rx:this.get("rx"),ry:this.get("ry")})},toSVG:function(t){var e=this._createBaseSVGMarkup(),i=0,r=0;return this.group&&"path-group"===this.group.type&&(i=this.left+this.rx,r=this.top+this.ry),e.push("<ellipse ",'cx="',i,'" cy="',r,'" ','rx="',this.rx,'" ry="',this.ry,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n'),t?t(e.join("")):e.join("")},_render:function(t,e){t.beginPath(),t.save(),t.transform(1,0,0,this.ry/this.rx,0,0),t.arc(e?this.left+this.rx:0,e?(this.top+this.ry)*this.rx/this.ry:0,this.rx,0,i,!1),t.restore(),this._renderFill(t),this._renderStroke(t)},complexity:function(){return 1}}),e.Ellipse.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat("cx cy rx ry".split(" ")),e.Ellipse.fromElement=function(t,i){i||(i={});var n=e.parseAttributes(t,e.Ellipse.ATTRIBUTE_NAMES);n.left=n.left||0,n.top=n.top||0;var s=new e.Ellipse(r(n,i));return s.top-=s.ry,s.left-=s.rx,s},void(e.Ellipse.fromObject=function(t){return new e.Ellipse(t)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;if(e.Rect)return void console.warn("fabric.Rect is already defined");var r=e.Object.prototype.stateProperties.concat();r.push("rx","ry","x","y"),e.Rect=e.util.createClass(e.Object,{stateProperties:r,type:"rect",rx:0,ry:0,strokeDashArray:null,initialize:function(t){t=t||{},this.callSuper("initialize",t),this._initRxRy()},_initRxRy:function(){this.rx&&!this.ry?this.ry=this.rx:this.ry&&!this.rx&&(this.rx=this.ry)},_render:function(t,e){if(1===this.width&&1===this.height)return void t.fillRect(0,0,1,1);var i=this.rx?Math.min(this.rx,this.width/2):0,r=this.ry?Math.min(this.ry,this.height/2):0,n=this.width,s=this.height,o=e?this.left:-this.width/2,a=e?this.top:-this.height/2,h=0!==i||0!==r,c=.4477152502;t.beginPath(),t.moveTo(o+i,a),t.lineTo(o+n-i,a),h&&t.bezierCurveTo(o+n-c*i,a,o+n,a+c*r,o+n,a+r),t.lineTo(o+n,a+s-r),h&&t.bezierCurveTo(o+n,a+s-c*r,o+n-c*i,a+s,o+n-i,a+s),t.lineTo(o+i,a+s),h&&t.bezierCurveTo(o+c*i,a+s,o,a+s-c*r,o,a+s-r),t.lineTo(o,a+r),h&&t.bezierCurveTo(o,a+c*r,o+c*i,a,o+i,a),t.closePath(),this._renderFill(t),this._renderStroke(t)},_renderDashedStroke:function(t){var i=-this.width/2,r=-this.height/2,n=this.width,s=this.height;t.beginPath(),e.util.drawDashedLine(t,i,r,i+n,r,this.strokeDashArray),e.util.drawDashedLine(t,i+n,r,i+n,r+s,this.strokeDashArray),e.util.drawDashedLine(t,i+n,r+s,i,r+s,this.strokeDashArray),e.util.drawDashedLine(t,i,r+s,i,r,this.strokeDashArray),t.closePath()},toObject:function(t){var e=i(this.callSuper("toObject",t),{rx:this.get("rx")||0,ry:this.get("ry")||0});return this.includeDefaultValues||this._removeDefaultValues(e),e},toSVG:function(t){var e=this._createBaseSVGMarkup(),i=this.left,r=this.top;return this.group&&"path-group"===this.group.type||(i=-this.width/2,r=-this.height/2),e.push("<rect ",'x="',i,'" y="',r,'" rx="',this.get("rx"),'" ry="',this.get("ry"),'" width="',this.width,'" height="',this.height,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n'),t?t(e.join("")):e.join("")},complexity:function(){return 1}}),e.Rect.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat("x y rx ry width height".split(" ")),e.Rect.fromElement=function(t,r){if(!t)return null;r=r||{};var n=e.parseAttributes(t,e.Rect.ATTRIBUTE_NAMES);return n.left=n.left||0,n.top=n.top||0,new e.Rect(i(r?e.util.object.clone(r):{},n))},e.Rect.fromObject=function(t){return new e.Rect(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});return e.Polyline?void e.warn("fabric.Polyline is already defined"):(e.Polyline=e.util.createClass(e.Object,{type:"polyline",points:null,minX:0,minY:0,initialize:function(t,i){return e.Polygon.prototype.initialize.call(this,t,i)},_calcDimensions:function(){return e.Polygon.prototype._calcDimensions.call(this)},_applyPointOffset:function(){return e.Polygon.prototype._applyPointOffset.call(this)},toObject:function(t){return e.Polygon.prototype.toObject.call(this,t)},toSVG:function(t){return e.Polygon.prototype.toSVG.call(this,t)},_render:function(t){e.Polygon.prototype.commonRender.call(this,t),this._renderFill(t),this._renderStroke(t)},_renderDashedStroke:function(t){var i,r;t.beginPath();for(var n=0,s=this.points.length;s>n;n++)i=this.points[n],r=this.points[n+1]||i,e.util.drawDashedLine(t,i.x,i.y,r.x,r.y,this.strokeDashArray)},complexity:function(){return this.get("points").length}}),e.Polyline.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat(),e.Polyline.fromElement=function(t,i){if(!t)return null;i||(i={});var r=e.parsePointsAttribute(t.getAttribute("points")),n=e.parseAttributes(t,e.Polyline.ATTRIBUTE_NAMES);return null===r?null:new e.Polyline(r,e.util.object.extend(n,i))},void(e.Polyline.fromObject=function(t){var i=t.points;return new e.Polyline(i,t,!0)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend,r=e.util.array.min,n=e.util.array.max,s=e.util.toFixed;return e.Polygon?void e.warn("fabric.Polygon is already defined"):(e.Polygon=e.util.createClass(e.Object,{type:"polygon",points:null,minX:0,minY:0,initialize:function(t,e){e=e||{},this.points=t,this.callSuper("initialize",e),this._calcDimensions(),"top"in e||(this.top=this.minY),"left"in e||(this.left=this.minX)},_calcDimensions:function(){var t=this.points,e=r(t,"x"),i=r(t,"y"),s=n(t,"x"),o=n(t,"y");this.width=s-e||1,this.height=o-i||1,this.minX=e,this.minY=i},_applyPointOffset:function(){this.points.forEach(function(t){t.x-=this.minX+this.width/2,t.y-=this.minY+this.height/2},this)},toObject:function(t){return i(this.callSuper("toObject",t),{points:this.points.concat()})},toSVG:function(t){for(var e=[],i=this._createBaseSVGMarkup(),r=0,n=this.points.length;n>r;r++)e.push(s(this.points[r].x,2),",",s(this.points[r].y,2)," ");return i.push("<",this.type," ",'points="',e.join(""),'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform()," ",this.getSvgTransformMatrix(),'"/>\n'),t?t(i.join("")):i.join("")},_render:function(t){this.commonRender(t),this._renderFill(t),(this.stroke||this.strokeDashArray)&&(t.closePath(),this._renderStroke(t))},commonRender:function(t){var e;t.beginPath(),this._applyPointOffset&&(this.group&&"path-group"===this.group.type||this._applyPointOffset(),this._applyPointOffset=null),t.moveTo(this.points[0].x,this.points[0].y);for(var i=0,r=this.points.length;r>i;i++)e=this.points[i],t.lineTo(e.x,e.y)},_renderDashedStroke:function(t){e.Polyline.prototype._renderDashedStroke.call(this,t),t.closePath()},complexity:function(){return this.points.length}}),e.Polygon.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat(),e.Polygon.fromElement=function(t,r){if(!t)return null;r||(r={});var n=e.parsePointsAttribute(t.getAttribute("points")),s=e.parseAttributes(t,e.Polygon.ATTRIBUTE_NAMES);return null===n?null:new e.Polygon(n,i(s,r))},void(e.Polygon.fromObject=function(t){return new e.Polygon(t.points,t,!0)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.array.min,r=e.util.array.max,n=e.util.object.extend,s=Object.prototype.toString,o=e.util.drawArc,a={m:2,l:2,h:1,v:1,c:6,s:4,q:4,t:2,a:7},h={m:"l",M:"L"};return e.Path?void e.warn("fabric.Path is already defined"):(e.Path=e.util.createClass(e.Object,{type:"path",path:null,minX:0,minY:0,initialize:function(t,e){if(e=e||{},this.setOptions(e),!t)throw new Error("`path` argument is required");var i="[object Array]"===s.call(t);if(this.path=i?t:t.match&&t.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi),this.path){i||(this.path=this._parsePath());var r=this._parseDimensions();this.minX=r.left,this.minY=r.top,this.width=r.width,this.height=r.height,r.left+="center"===this.originX?this.width/2:"right"===this.originX?this.width:0,r.top+="center"===this.originY?this.height/2:"bottom"===this.originY?this.height:0,this.top=this.top||r.top,this.left=this.left||r.left,this.pathOffset=this.pathOffset||{x:this.minX+this.width/2,y:this.minY+this.height/2},e.sourcePath&&this.setSourcePath(e.sourcePath)}},_render:function(t){var e,i,r,n,s,a=null,h=0,c=0,l=0,u=0,f=0,d=0,g=-this.pathOffset.x,p=-this.pathOffset.y;this.group&&"path-group"===this.group.type&&(g=0,p=0),t.beginPath();for(var v=0,m=this.path.length;m>v;++v){switch(e=this.path[v],e[0]){case"l":l+=e[1],u+=e[2],t.lineTo(l+g,u+p);break;case"L":l=e[1],u=e[2],t.lineTo(l+g,u+p);break;case"h":l+=e[1],t.lineTo(l+g,u+p);break;case"H":l=e[1],t.lineTo(l+g,u+p);break;case"v":u+=e[1],t.lineTo(l+g,u+p);break;case"V":u=e[1],t.lineTo(l+g,u+p);break;case"m":l+=e[1],u+=e[2],h=l,c=u,t.moveTo(l+g,u+p);break;case"M":l=e[1],u=e[2],h=l,c=u,t.moveTo(l+g,u+p);
break;case"c":i=l+e[5],r=u+e[6],f=l+e[3],d=u+e[4],t.bezierCurveTo(l+e[1]+g,u+e[2]+p,f+g,d+p,i+g,r+p),l=i,u=r;break;case"C":l=e[5],u=e[6],f=e[3],d=e[4],t.bezierCurveTo(e[1]+g,e[2]+p,f+g,d+p,l+g,u+p);break;case"s":i=l+e[3],r=u+e[4],f=f?2*l-f:l,d=d?2*u-d:u,t.bezierCurveTo(f+g,d+p,l+e[1]+g,u+e[2]+p,i+g,r+p),f=l+e[1],d=u+e[2],l=i,u=r;break;case"S":i=e[3],r=e[4],f=2*l-f,d=2*u-d,t.bezierCurveTo(f+g,d+p,e[1]+g,e[2]+p,i+g,r+p),l=i,u=r,f=e[1],d=e[2];break;case"q":i=l+e[3],r=u+e[4],f=l+e[1],d=u+e[2],t.quadraticCurveTo(f+g,d+p,i+g,r+p),l=i,u=r;break;case"Q":i=e[3],r=e[4],t.quadraticCurveTo(e[1]+g,e[2]+p,i+g,r+p),l=i,u=r,f=e[1],d=e[2];break;case"t":i=l+e[1],r=u+e[2],null===a[0].match(/[QqTt]/)?(f=l,d=u):"t"===a[0]?(f=2*l-n,d=2*u-s):"q"===a[0]&&(f=2*l-f,d=2*u-d),n=f,s=d,t.quadraticCurveTo(f+g,d+p,i+g,r+p),l=i,u=r,f=l+e[1],d=u+e[2];break;case"T":i=e[1],r=e[2],f=2*l-f,d=2*u-d,t.quadraticCurveTo(f+g,d+p,i+g,r+p),l=i,u=r;break;case"a":o(t,l+g,u+p,[e[1],e[2],e[3],e[4],e[5],e[6]+l+g,e[7]+u+p]),l+=e[6],u+=e[7];break;case"A":o(t,l+g,u+p,[e[1],e[2],e[3],e[4],e[5],e[6]+g,e[7]+p]),l=e[6],u=e[7];break;case"z":case"Z":l=h,u=c,t.closePath()}a=e}this._renderFill(t),this._renderStroke(t)},render:function(t,i){this.visible&&(t.save(),this._setupCompositeOperation(t),i||this.transform(t),this._setStrokeStyles(t),this._setFillStyles(t),this.group&&"path-group"===this.group.type&&t.translate(-this.group.width/2,-this.group.height/2),this.transformMatrix&&t.transform.apply(t,this.transformMatrix),this._setOpacity(t),this._setShadow(t),this.clipTo&&e.util.clipContext(this,t),this._render(t,i),this.clipTo&&t.restore(),this._removeShadow(t),this._restoreCompositeOperation(t),t.restore())},toString:function(){return"#<fabric.Path ("+this.complexity()+'): { "top": '+this.top+', "left": '+this.left+" }>"},toObject:function(t){var e=n(this.callSuper("toObject",t),{path:this.path.map(function(t){return t.slice()}),pathOffset:this.pathOffset});return this.sourcePath&&(e.sourcePath=this.sourcePath),this.transformMatrix&&(e.transformMatrix=this.transformMatrix),e},toDatalessObject:function(t){var e=this.toObject(t);return this.sourcePath&&(e.path=this.sourcePath),delete e.sourcePath,e},toSVG:function(t){for(var e=[],i=this._createBaseSVGMarkup(),r="",n=0,s=this.path.length;s>n;n++)e.push(this.path[n].join(" "));var o=e.join(" ");return this.group&&"path-group"===this.group.type||(r="translate("+-this.pathOffset.x+", "+-this.pathOffset.y+")"),i.push("<path ",'d="',o,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),r,this.getSvgTransformMatrix(),'" stroke-linecap="round" ',"/>\n"),t?t(i.join("")):i.join("")},complexity:function(){return this.path.length},_parsePath:function(){for(var t,e,i,r,n,s=[],o=[],c=/([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:e[-+]?\d+)?)/gi,l=0,u=this.path.length;u>l;l++){for(t=this.path[l],r=t.slice(1).trim(),o.length=0;i=c.exec(r);)o.push(i[0]);n=[t.charAt(0)];for(var f=0,d=o.length;d>f;f++)e=parseFloat(o[f]),isNaN(e)||n.push(e);var g=n[0],p=a[g.toLowerCase()],v=h[g]||g;if(n.length-1>p)for(var m=1,y=n.length;y>m;m+=p)s.push([g].concat(n.slice(m,m+p))),g=v;else s.push(n)}return s},_parseDimensions:function(){for(var t,n,s,o,a,h,c=[],l=[],u=null,f=0,d=0,g=0,p=0,v=0,m=0,y=0,b=this.path.length;b>y;++y){switch(t=this.path[y],t[0]){case"l":g+=t[1],p+=t[2],h=[];break;case"L":g=t[1],p=t[2],h=[];break;case"h":g+=t[1],h=[];break;case"H":g=t[1],h=[];break;case"v":p+=t[1],h=[];break;case"V":p=t[1],h=[];break;case"m":g+=t[1],p+=t[2],f=g,d=p,h=[];break;case"M":g=t[1],p=t[2],f=g,d=p,h=[];break;case"c":n=g+t[5],s=p+t[6],v=g+t[3],m=p+t[4],h=e.util.getBoundsOfCurve(g,p,g+t[1],p+t[2],v,m,n,s),g=n,p=s;break;case"C":g=t[5],p=t[6],v=t[3],m=t[4],h=e.util.getBoundsOfCurve(g,p,t[1],t[2],v,m,g,p);break;case"s":n=g+t[3],s=p+t[4],v=v?2*g-v:g,m=m?2*p-m:p,h=e.util.getBoundsOfCurve(g,p,v,m,g+t[1],p+t[2],n,s),v=g+t[1],m=p+t[2],g=n,p=s;break;case"S":n=t[3],s=t[4],v=2*g-v,m=2*p-m,h=e.util.getBoundsOfCurve(g,p,v,m,t[1],t[2],n,s),g=n,p=s,v=t[1],m=t[2];break;case"q":n=g+t[3],s=p+t[4],v=g+t[1],m=p+t[2],h=e.util.getBoundsOfCurve(g,p,v,m,v,m,n,s),g=n,p=s;break;case"Q":v=t[1],m=t[2],h=e.util.getBoundsOfCurve(g,p,v,m,v,m,t[3],t[4]),g=t[3],p=t[4];break;case"t":n=g+t[1],s=p+t[2],null===u[0].match(/[QqTt]/)?(v=g,m=p):"t"===u[0]?(v=2*g-o,m=2*p-a):"q"===u[0]&&(v=2*g-v,m=2*p-m),o=v,a=m,h=e.util.getBoundsOfCurve(g,p,v,m,v,m,n,s),g=n,p=s,v=g+t[1],m=p+t[2];break;case"T":n=t[1],s=t[2],v=2*g-v,m=2*p-m,h=e.util.getBoundsOfCurve(g,p,v,m,v,m,n,s),g=n,p=s;break;case"a":h=e.util.getBoundsOfArc(g,p,t[1],t[2],t[3],t[4],t[5],t[6]+g,t[7]+p),g+=t[6],p+=t[7];break;case"A":h=e.util.getBoundsOfArc(g,p,t[1],t[2],t[3],t[4],t[5],t[6],t[7]),g=t[6],p=t[7];break;case"z":case"Z":g=f,p=d}u=t,h.forEach(function(t){c.push(t.x),l.push(t.y)}),c.push(g),l.push(p)}var x=i(c),_=i(l),C=r(c),S=r(l),w=C-x,O=S-_,T={left:x,top:_,width:w,height:O};return T}}),e.Path.fromObject=function(t,i){"string"==typeof t.path?e.loadSVGFromURL(t.path,function(r){var n=r[0],s=t.path;delete t.path,e.util.object.extend(n,t),n.setSourcePath(s),i(n)}):i(new e.Path(t.path,t))},e.Path.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat(["d"]),e.Path.fromElement=function(t,i,r){var s=e.parseAttributes(t,e.Path.ATTRIBUTE_NAMES);i&&i(new e.Path(s.d,n(s,r)))},void(e.Path.async=!0))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend,r=e.util.array.invoke,n=e.Object.prototype.toObject;return e.PathGroup?void e.warn("fabric.PathGroup is already defined"):(e.PathGroup=e.util.createClass(e.Path,{type:"path-group",fill:"",initialize:function(t,e){e=e||{},this.paths=t||[];for(var i=this.paths.length;i--;)this.paths[i].group=this;this.setOptions(e),e.widthAttr&&(this.scaleX=e.widthAttr/e.width),e.heightAttr&&(this.scaleY=e.heightAttr/e.height),this.setCoords(),e.sourcePath&&this.setSourcePath(e.sourcePath)},render:function(t){if(this.visible){t.save();var i=this.transformMatrix;i&&t.transform(i[0],i[1],i[2],i[3],i[4],i[5]),this.transform(t),this._setShadow(t),this.clipTo&&e.util.clipContext(this,t);for(var r=0,n=this.paths.length;n>r;++r)this.paths[r].render(t,!0);this.clipTo&&t.restore(),this._removeShadow(t),t.restore()}},_set:function(t,e){if("fill"===t&&e&&this.isSameColor())for(var i=this.paths.length;i--;)this.paths[i]._set(t,e);return this.callSuper("_set",t,e)},toObject:function(t){var e=i(n.call(this,t),{paths:r(this.getObjects(),"toObject",t)});return this.sourcePath&&(e.sourcePath=this.sourcePath),e},toDatalessObject:function(t){var e=this.toObject(t);return this.sourcePath&&(e.paths=this.sourcePath),e},toSVG:function(t){for(var e=this.getObjects(),i="translate("+this.left+" "+this.top+")",r=["<g ",'style="',this.getSvgStyles(),'" ','transform="',i,this.getSvgTransform(),'" ',">\n"],n=0,s=e.length;s>n;n++)r.push(e[n].toSVG(t));return r.push("</g>\n"),t?t(r.join("")):r.join("")},toString:function(){return"#<fabric.PathGroup ("+this.complexity()+"): { top: "+this.top+", left: "+this.left+" }>"},isSameColor:function(){var t=(this.getObjects()[0].get("fill")||"").toLowerCase();return this.getObjects().every(function(e){return(e.get("fill")||"").toLowerCase()===t})},complexity:function(){return this.paths.reduce(function(t,e){return t+(e&&e.complexity?e.complexity():0)},0)},getObjects:function(){return this.paths}}),e.PathGroup.fromObject=function(t,i){"string"==typeof t.paths?e.loadSVGFromURL(t.paths,function(r){var n=t.paths;delete t.paths;var s=e.util.groupSVGElements(r,t,n);i(s)}):e.util.enlivenObjects(t.paths,function(r){delete t.paths,i(new e.PathGroup(r,t))})},void(e.PathGroup.async=!0))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend,r=e.util.array.min,n=e.util.array.max,s=e.util.array.invoke;if(!e.Group){var o={lockMovementX:!0,lockMovementY:!0,lockRotation:!0,lockScalingX:!0,lockScalingY:!0,lockUniScaling:!0};e.Group=e.util.createClass(e.Object,e.Collection,{type:"group",initialize:function(t,e){e=e||{},this._objects=t||[];for(var r=this._objects.length;r--;)this._objects[r].group=this;this.originalState={},this.callSuper("initialize"),e.originX&&(this.originX=e.originX),e.originY&&(this.originY=e.originY),this._calcBounds(),this._updateObjectsCoords(),e&&i(this,e),this.setCoords(),this.saveCoords()},_updateObjectsCoords:function(){this.forEachObject(this._updateObjectCoords,this)},_updateObjectCoords:function(t){var e=t.getLeft(),i=t.getTop(),r=this.getCenterPoint();t.set({originalLeft:e,originalTop:i,left:e-r.x,top:i-r.y}),t.setCoords(),t.__origHasControls=t.hasControls,t.hasControls=!1},toString:function(){return"#<fabric.Group: ("+this.complexity()+")>"},addWithUpdate:function(t){return this._restoreObjectsState(),t&&(this._objects.push(t),t.group=this),this.forEachObject(this._setObjectActive,this),this._calcBounds(),this._updateObjectsCoords(),this},_setObjectActive:function(t){t.set("active",!0),t.group=this},removeWithUpdate:function(t){return this._moveFlippedObject(t),this._restoreObjectsState(),this.forEachObject(this._setObjectActive,this),this.remove(t),this._calcBounds(),this._updateObjectsCoords(),this},_onObjectAdded:function(t){t.group=this},_onObjectRemoved:function(t){delete t.group,t.set("active",!1)},delegatedProperties:{fill:!0,opacity:!0,fontFamily:!0,fontWeight:!0,fontSize:!0,fontStyle:!0,lineHeight:!0,textDecoration:!0,textAlign:!0,backgroundColor:!0},_set:function(t,e){if(t in this.delegatedProperties){var i=this._objects.length;for(this[t]=e;i--;)this._objects[i].set(t,e)}else this[t]=e},toObject:function(t){return i(this.callSuper("toObject",t),{objects:s(this._objects,"toObject",t)})},render:function(t){if(this.visible){t.save(),this.clipTo&&e.util.clipContext(this,t);for(var i=0,r=this._objects.length;r>i;i++)this._renderObject(this._objects[i],t);this.clipTo&&t.restore(),t.restore()}},_renderControls:function(t,e){this.callSuper("_renderControls",t,e);for(var i=0,r=this._objects.length;r>i;i++)this._objects[i]._renderControls(t)},_renderObject:function(t,e){var i=t.hasRotatingPoint;t.visible&&(t.hasRotatingPoint=!1,t.render(e),t.hasRotatingPoint=i)},_restoreObjectsState:function(){return this._objects.forEach(this._restoreObjectState,this),this},_moveFlippedObject:function(t){var e=t.get("originX"),i=t.get("originY"),r=t.getCenterPoint();t.set({originX:"center",originY:"center",left:r.x,top:r.y}),this._toggleFlipping(t);var n=t.getPointByOrigin(e,i);return t.set({originX:e,originY:i,left:n.x,top:n.y}),this},_toggleFlipping:function(t){this.flipX&&(t.toggle("flipX"),t.set("left",-t.get("left")),t.setAngle(-t.getAngle())),this.flipY&&(t.toggle("flipY"),t.set("top",-t.get("top")),t.setAngle(-t.getAngle()))},_restoreObjectState:function(t){return this._setObjectPosition(t),t.setCoords(),t.hasControls=t.__origHasControls,delete t.__origHasControls,t.set("active",!1),t.setCoords(),delete t.group,this},_setObjectPosition:function(t){var e=this.getCenterPoint(),i=this._getRotatedLeftTop(t);t.set({angle:t.getAngle()+this.getAngle(),left:e.x+i.left,top:e.y+i.top,scaleX:t.get("scaleX")*this.get("scaleX"),scaleY:t.get("scaleY")*this.get("scaleY")})},_getRotatedLeftTop:function(t){var e=this.getAngle()*(Math.PI/180);return{left:-Math.sin(e)*t.getTop()*this.get("scaleY")+Math.cos(e)*t.getLeft()*this.get("scaleX"),top:Math.cos(e)*t.getTop()*this.get("scaleY")+Math.sin(e)*t.getLeft()*this.get("scaleX")}},destroy:function(){return this._objects.forEach(this._moveFlippedObject,this),this._restoreObjectsState()},saveCoords:function(){return this._originalLeft=this.get("left"),this._originalTop=this.get("top"),this},hasMoved:function(){return this._originalLeft!==this.get("left")||this._originalTop!==this.get("top")},setObjectsCoords:function(){return this.forEachObject(function(t){t.setCoords()}),this},_calcBounds:function(t){for(var e,i=[],r=[],n=0,s=this._objects.length;s>n;++n){e=this._objects[n],e.setCoords();for(var o in e.oCoords)i.push(e.oCoords[o].x),r.push(e.oCoords[o].y)}this.set(this._getBounds(i,r,t))},_getBounds:function(t,i,s){var o=e.util.invertTransform(this.getViewportTransform()),a=e.util.transformPoint(new e.Point(r(t),r(i)),o),h=e.util.transformPoint(new e.Point(n(t),n(i)),o),c={width:h.x-a.x||0,height:h.y-a.y||0};return s||(c.left=a.x||0,c.top=a.y||0,"center"===this.originX&&(c.left+=c.width/2),"right"===this.originX&&(c.left+=c.width),"center"===this.originY&&(c.top+=c.height/2),"bottom"===this.originY&&(c.top+=c.height)),c},toSVG:function(t){for(var e=["<g ",'transform="',this.getSvgTransform(),'">\n'],i=0,r=this._objects.length;r>i;i++)e.push(this._objects[i].toSVG(t));return e.push("</g>\n"),t?t(e.join("")):e.join("")},get:function(t){if(t in o){if(this[t])return this[t];for(var e=0,i=this._objects.length;i>e;e++)if(this._objects[e][t])return!0;return!1}return t in this.delegatedProperties?this._objects[0]&&this._objects[0].get(t):this[t]}}),e.Group.fromObject=function(t,i){e.util.enlivenObjects(t.objects,function(r){delete t.objects,i&&i(new e.Group(r,t))})},e.Group.async=!0}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=fabric.util.object.extend;return t.fabric||(t.fabric={}),t.fabric.Image?void fabric.warn("fabric.Image is already defined."):(fabric.Image=fabric.util.createClass(fabric.Object,{type:"image",crossOrigin:"",alignX:"none",alignY:"none",meetOrSlice:"meet",_lastScaleX:1,_lastScaleY:1,initialize:function(t,e){e||(e={}),this.filters=[],this.resizeFilters=[],this.callSuper("initialize",e),this._initElement(t,e),this._initConfig(e),e.filters&&(this.filters=e.filters,this.applyFilters())},getElement:function(){return this._element},setElement:function(t,e,i){return this._element=t,this._originalElement=t,this._initConfig(i),0!==this.filters.length?this.applyFilters(e):e&&e(),this},setCrossOrigin:function(t){return this.crossOrigin=t,this._element.crossOrigin=t,this},getOriginalSize:function(){var t=this.getElement();return{width:t.width,height:t.height}},_stroke:function(t){t.save(),this._setStrokeStyles(t),t.beginPath(),t.strokeRect(-this.width/2,-this.height/2,this.width,this.height),t.closePath(),t.restore()},_renderDashedStroke:function(t){var e=-this.width/2,i=-this.height/2,r=this.width,n=this.height;t.save(),this._setStrokeStyles(t),t.beginPath(),fabric.util.drawDashedLine(t,e,i,e+r,i,this.strokeDashArray),fabric.util.drawDashedLine(t,e+r,i,e+r,i+n,this.strokeDashArray),fabric.util.drawDashedLine(t,e+r,i+n,e,i+n,this.strokeDashArray),fabric.util.drawDashedLine(t,e,i+n,e,i,this.strokeDashArray),t.closePath(),t.restore()},toObject:function(t){return e(this.callSuper("toObject",t),{src:this._originalElement.src||this._originalElement._src,filters:this.filters.map(function(t){return t&&t.toObject()}),crossOrigin:this.crossOrigin,alignX:this.alignX,alignY:this.alignY,meetOrSlice:this.meetOrSlice})},toSVG:function(t){var e=[],i=-this.width/2,r=-this.height/2,n="none";if(this.group&&"path-group"===this.group.type&&(i=this.left,r=this.top),"none"!==this.alignX&&"none"!==this.alignY&&(n="x"+this.alignX+"Y"+this.alignY+" "+this.meetOrSlice),e.push('<g transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'">\n','<image xlink:href="',this.getSvgSrc(),'" x="',i,'" y="',r,'" style="',this.getSvgStyles(),'" width="',this.width,'" height="',this.height,'" preserveAspectRatio="',n,'"',"></image>\n"),this.stroke||this.strokeDashArray){var s=this.fill;this.fill=null,e.push("<rect ",'x="',i,'" y="',r,'" width="',this.width,'" height="',this.height,'" style="',this.getSvgStyles(),'"/>\n'),this.fill=s}return e.push("</g>\n"),t?t(e.join("")):e.join("")},getSrc:function(){return this.getElement()?this.getElement().src||this.getElement()._src:void 0},setSrc:function(t,e,i){fabric.util.loadImage(t,function(t){return this.setElement(t,e,i)},this,i&&i.crossOrigin)},toString:function(){return'#<fabric.Image: { src: "'+this.getSrc()+'" }>'},clone:function(t,e){this.constructor.fromObject(this.toObject(e),t)},applyFilters:function(t,e,i,r){if(e=e||this.filters,i=i||this._originalElement){var n=i,s=fabric.util.createCanvasElement(),o=fabric.util.createImage(),a=this;return s.width=n.width,s.height=n.height,s.getContext("2d").drawImage(n,0,0,n.width,n.height),0===e.length?(this._element=i,t&&t(),s):(e.forEach(function(t){t&&t.applyTo(s,t.scaleX||a.scaleX,t.scaleY||a.scaleY),r||"Resize"!==t.type||(a.width*=t.scaleX,a.height*=t.scaleY)}),o.width=s.width,o.height=s.height,fabric.isLikelyNode?(o.src=s.toBuffer(void 0,fabric.Image.pngCompression),a._element=o,!r&&(a._filteredEl=o),t&&t()):(o.onload=function(){a._element=o,!r&&(a._filteredEl=o),t&&t(),o.onload=s=n=null},o.src=s.toDataURL("image/png")),s)}},_render:function(t,e){var i,r,n,s=this._findMargins();i=e?this.left:-this.width/2,r=e?this.top:-this.height/2,"slice"===this.meetOrSlice&&(t.beginPath(),t.rect(i,r,this.width,this.height),t.clip()),this.isMoving===!1&&this.resizeFilters.length&&this._needsResize()?(this._lastScaleX=this.scaleX,this._lastScaleY=this.scaleY,n=this.applyFilters(null,this.resizeFilters,this._filteredEl||this._originalElement,!1)):n=this._element,n&&t.drawImage(n,i+s.marginX,r+s.marginY,s.width,s.height),this._renderStroke(t)},_needsResize:function(){return this.scaleX!==this._lastScaleX||this.scaleY!==this._lastScaleY},_findMargins:function(){var t,e,i=this.width,r=this.height,n=0,s=0;return("none"!==this.alignX||"none"!==this.alignY)&&(t=[this.width/this._element.width,this.height/this._element.height],e="meet"===this.meetOrSlice?Math.min.apply(null,t):Math.max.apply(null,t),i=this._element.width*e,r=this._element.height*e,"Mid"===this.alignX&&(n=(this.width-i)/2),"Max"===this.alignX&&(n=this.width-i),"Mid"===this.alignY&&(s=(this.height-r)/2),"Max"===this.alignY&&(s=this.height-r)),{width:i,height:r,marginX:n,marginY:s}},_resetWidthHeight:function(){var t=this.getElement();this.set("width",t.width),this.set("height",t.height)},_initElement:function(t){this.setElement(fabric.util.getById(t)),fabric.util.addClass(this.getElement(),fabric.Image.CSS_CANVAS)},_initConfig:function(t){t||(t={}),this.setOptions(t),this._setWidthHeight(t),this._element&&this.crossOrigin&&(this._element.crossOrigin=this.crossOrigin)},_initFilters:function(t,e){t.filters&&t.filters.length?fabric.util.enlivenObjects(t.filters,function(t){e&&e(t)},"fabric.Image.filters"):e&&e()},_setWidthHeight:function(t){this.width="width"in t?t.width:this.getElement()?this.getElement().width||0:0,this.height="height"in t?t.height:this.getElement()?this.getElement().height||0:0},complexity:function(){return 1}}),fabric.Image.CSS_CANVAS="canvas-img",fabric.Image.prototype.getSvgSrc=fabric.Image.prototype.getSrc,fabric.Image.fromObject=function(t,e){fabric.util.loadImage(t.src,function(i){fabric.Image.prototype._initFilters.call(t,t,function(r){t.filters=r||[];var n=new fabric.Image(i,t);e&&e(n)})},null,t.crossOrigin)},fabric.Image.fromURL=function(t,e,i){fabric.util.loadImage(t,function(t){e(new fabric.Image(t,i))},null,i&&i.crossOrigin)},fabric.Image.ATTRIBUTE_NAMES=fabric.SHARED_ATTRIBUTES.concat("x y width height preserveAspectRatio xlink:href".split(" ")),fabric.Image.fromElement=function(t,i,r){var n,s,o,a=fabric.parseAttributes(t,fabric.Image.ATTRIBUTE_NAMES),h="xMidYMid",c="meet";a.preserveAspectRatio&&(o=a.preserveAspectRatio.split(" ")),o&&o.length&&(c=o.pop(),"meet"!==c&&"slice"!==c?(h=c,c="meet"):o.length&&(h=o.pop())),n="none"!==h?h.slice(1,4):"none",s="none"!==h?h.slice(5,8):"none",a.alignX=n,a.alignY=s,a.meetOrSlice=c,fabric.Image.fromURL(a["xlink:href"],i,e(r?fabric.util.object.clone(r):{},a))},fabric.Image.async=!0,void(fabric.Image.pngCompression=1))}("undefined"!=typeof exports?exports:this),fabric.util.object.extend(fabric.Object.prototype,{_getAngleValueForStraighten:function(){var t=this.getAngle()%360;return t>0?90*Math.round((t-1)/90):90*Math.round(t/90)},straighten:function(){return this.setAngle(this._getAngleValueForStraighten()),this},fxStraighten:function(t){t=t||{};var e=function(){},i=t.onComplete||e,r=t.onChange||e,n=this;return fabric.util.animate({startValue:this.get("angle"),endValue:this._getAngleValueForStraighten(),duration:this.FX_DURATION,onChange:function(t){n.setAngle(t),r()},onComplete:function(){n.setCoords(),i()},onStart:function(){n.set("active",!1)}}),this}}),fabric.util.object.extend(fabric.StaticCanvas.prototype,{straightenObject:function(t){return t.straighten(),this.renderAll(),this},fxStraightenObject:function(t){return t.fxStraighten({onChange:this.renderAll.bind(this)}),this}}),fabric.Image.filters=fabric.Image.filters||{},fabric.Image.filters.BaseFilter=fabric.util.createClass({type:"BaseFilter",initialize:function(t){t&&this.setOptions(t)},setOptions:function(t){for(var e in t)this[e]=t[e]},toObject:function(){return{type:this.type}},toJSON:function(){return this.toObject()}}),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.Brightness=e.util.createClass(e.Image.filters.BaseFilter,{type:"Brightness",initialize:function(t){t=t||{},this.brightness=t.brightness||0},applyTo:function(t){for(var e=t.getContext("2d"),i=e.getImageData(0,0,t.width,t.height),r=i.data,n=this.brightness,s=0,o=r.length;o>s;s+=4)r[s]+=n,r[s+1]+=n,r[s+2]+=n;e.putImageData(i,0,0)},toObject:function(){return i(this.callSuper("toObject"),{brightness:this.brightness})}}),e.Image.filters.Brightness.fromObject=function(t){return new e.Image.filters.Brightness(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.Convolute=e.util.createClass(e.Image.filters.BaseFilter,{type:"Convolute",initialize:function(t){t=t||{},this.opaque=t.opaque,this.matrix=t.matrix||[0,0,0,0,1,0,0,0,0];var i=e.util.createCanvasElement();this.tmpCtx=i.getContext("2d")},_createImageData:function(t,e){return this.tmpCtx.createImageData(t,e)},applyTo:function(t){for(var e=this.matrix,i=t.getContext("2d"),r=i.getImageData(0,0,t.width,t.height),n=Math.round(Math.sqrt(e.length)),s=Math.floor(n/2),o=r.data,a=r.width,h=r.height,c=a,l=h,u=this._createImageData(c,l),f=u.data,d=this.opaque?1:0,g=0;l>g;g++)for(var p=0;c>p;p++){for(var v=g,m=p,y=4*(g*c+p),b=0,x=0,_=0,C=0,S=0;n>S;S++)for(var w=0;n>w;w++){var O=v+S-s,T=m+w-s;if(!(0>O||O>h||0>T||T>a)){var E=4*(O*a+T),k=e[S*n+w];b+=o[E]*k,x+=o[E+1]*k,_+=o[E+2]*k,C+=o[E+3]*k}}f[y]=b,f[y+1]=x,f[y+2]=_,f[y+3]=C+d*(255-C)}i.putImageData(u,0,0)},toObject:function(){return i(this.callSuper("toObject"),{opaque:this.opaque,matrix:this.matrix})}}),e.Image.filters.Convolute.fromObject=function(t){return new e.Image.filters.Convolute(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.GradientTransparency=e.util.createClass(e.Image.filters.BaseFilter,{type:"GradientTransparency",initialize:function(t){t=t||{},this.threshold=t.threshold||100},applyTo:function(t){for(var e=t.getContext("2d"),i=e.getImageData(0,0,t.width,t.height),r=i.data,n=this.threshold,s=r.length,o=0,a=r.length;a>o;o+=4)r[o+3]=n+255*(s-o)/s;e.putImageData(i,0,0)},toObject:function(){return i(this.callSuper("toObject"),{threshold:this.threshold})}}),e.Image.filters.GradientTransparency.fromObject=function(t){return new e.Image.filters.GradientTransparency(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});e.Image.filters.Grayscale=e.util.createClass(e.Image.filters.BaseFilter,{type:"Grayscale",applyTo:function(t){for(var e,i=t.getContext("2d"),r=i.getImageData(0,0,t.width,t.height),n=r.data,s=r.width*r.height*4,o=0;s>o;)e=(n[o]+n[o+1]+n[o+2])/3,n[o]=e,n[o+1]=e,n[o+2]=e,o+=4;i.putImageData(r,0,0)}}),e.Image.filters.Grayscale.fromObject=function(){return new e.Image.filters.Grayscale}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});e.Image.filters.Invert=e.util.createClass(e.Image.filters.BaseFilter,{type:"Invert",applyTo:function(t){var e,i=t.getContext("2d"),r=i.getImageData(0,0,t.width,t.height),n=r.data,s=n.length;for(e=0;s>e;e+=4)n[e]=255-n[e],n[e+1]=255-n[e+1],n[e+2]=255-n[e+2];i.putImageData(r,0,0)}}),e.Image.filters.Invert.fromObject=function(){return new e.Image.filters.Invert}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.Mask=e.util.createClass(e.Image.filters.BaseFilter,{type:"Mask",initialize:function(t){t=t||{},this.mask=t.mask,this.channel=[0,1,2,3].indexOf(t.channel)>-1?t.channel:0},applyTo:function(t){if(this.mask){var i,r=t.getContext("2d"),n=r.getImageData(0,0,t.width,t.height),s=n.data,o=this.mask.getElement(),a=e.util.createCanvasElement(),h=this.channel,c=n.width*n.height*4;a.width=o.width,a.height=o.height,a.getContext("2d").drawImage(o,0,0,o.width,o.height);var l=a.getContext("2d").getImageData(0,0,o.width,o.height),u=l.data;for(i=0;c>i;i+=4)s[i+3]=u[i+h];r.putImageData(n,0,0)}},toObject:function(){return i(this.callSuper("toObject"),{mask:this.mask.toObject(),channel:this.channel})}}),e.Image.filters.Mask.fromObject=function(t,i){e.util.loadImage(t.mask.src,function(r){t.mask=new e.Image(r,t.mask),i&&i(new e.Image.filters.Mask(t))})},e.Image.filters.Mask.async=!0}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.Noise=e.util.createClass(e.Image.filters.BaseFilter,{type:"Noise",initialize:function(t){t=t||{},this.noise=t.noise||0},applyTo:function(t){for(var e,i=t.getContext("2d"),r=i.getImageData(0,0,t.width,t.height),n=r.data,s=this.noise,o=0,a=n.length;a>o;o+=4)e=(.5-Math.random())*s,n[o]+=e,n[o+1]+=e,n[o+2]+=e;i.putImageData(r,0,0)},toObject:function(){return i(this.callSuper("toObject"),{noise:this.noise})}}),e.Image.filters.Noise.fromObject=function(t){return new e.Image.filters.Noise(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.Pixelate=e.util.createClass(e.Image.filters.BaseFilter,{type:"Pixelate",initialize:function(t){t=t||{},this.blocksize=t.blocksize||4},applyTo:function(t){var e,i,r,n,s,o,a,h=t.getContext("2d"),c=h.getImageData(0,0,t.width,t.height),l=c.data,u=c.height,f=c.width;for(i=0;u>i;i+=this.blocksize)for(r=0;f>r;r+=this.blocksize){e=4*i*f+4*r,n=l[e],s=l[e+1],o=l[e+2],a=l[e+3];for(var d=i,g=i+this.blocksize;g>d;d++)for(var p=r,v=r+this.blocksize;v>p;p++)e=4*d*f+4*p,l[e]=n,l[e+1]=s,l[e+2]=o,l[e+3]=a}h.putImageData(c,0,0)},toObject:function(){return i(this.callSuper("toObject"),{blocksize:this.blocksize})}}),e.Image.filters.Pixelate.fromObject=function(t){return new e.Image.filters.Pixelate(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.RemoveWhite=e.util.createClass(e.Image.filters.BaseFilter,{type:"RemoveWhite",initialize:function(t){t=t||{},this.threshold=t.threshold||30,this.distance=t.distance||20},applyTo:function(t){for(var e,i,r,n=t.getContext("2d"),s=n.getImageData(0,0,t.width,t.height),o=s.data,a=this.threshold,h=this.distance,c=255-a,l=Math.abs,u=0,f=o.length;f>u;u+=4)e=o[u],i=o[u+1],r=o[u+2],e>c&&i>c&&r>c&&l(e-i)<h&&l(e-r)<h&&l(i-r)<h&&(o[u+3]=1);n.putImageData(s,0,0)},toObject:function(){return i(this.callSuper("toObject"),{threshold:this.threshold,distance:this.distance})}}),e.Image.filters.RemoveWhite.fromObject=function(t){return new e.Image.filters.RemoveWhite(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});e.Image.filters.Sepia=e.util.createClass(e.Image.filters.BaseFilter,{type:"Sepia",applyTo:function(t){var e,i,r=t.getContext("2d"),n=r.getImageData(0,0,t.width,t.height),s=n.data,o=s.length;for(e=0;o>e;e+=4)i=.3*s[e]+.59*s[e+1]+.11*s[e+2],s[e]=i+100,s[e+1]=i+50,s[e+2]=i+255;r.putImageData(n,0,0)}}),e.Image.filters.Sepia.fromObject=function(){return new e.Image.filters.Sepia}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});e.Image.filters.Sepia2=e.util.createClass(e.Image.filters.BaseFilter,{type:"Sepia2",applyTo:function(t){var e,i,r,n,s=t.getContext("2d"),o=s.getImageData(0,0,t.width,t.height),a=o.data,h=a.length;for(e=0;h>e;e+=4)i=a[e],r=a[e+1],n=a[e+2],a[e]=(.393*i+.769*r+.189*n)/1.351,a[e+1]=(.349*i+.686*r+.168*n)/1.203,a[e+2]=(.272*i+.534*r+.131*n)/2.14;s.putImageData(o,0,0)}}),e.Image.filters.Sepia2.fromObject=function(){return new e.Image.filters.Sepia2}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.Tint=e.util.createClass(e.Image.filters.BaseFilter,{type:"Tint",initialize:function(t){t=t||{},this.color=t.color||"#000000",this.opacity="undefined"!=typeof t.opacity?t.opacity:new e.Color(this.color).getAlpha()},applyTo:function(t){var i,r,n,s,o,a,h,c,l,u=t.getContext("2d"),f=u.getImageData(0,0,t.width,t.height),d=f.data,g=d.length;for(l=new e.Color(this.color).getSource(),r=l[0]*this.opacity,n=l[1]*this.opacity,s=l[2]*this.opacity,c=1-this.opacity,i=0;g>i;i+=4)o=d[i],a=d[i+1],h=d[i+2],d[i]=r+o*c,d[i+1]=n+a*c,d[i+2]=s+h*c;u.putImageData(f,0,0)},toObject:function(){return i(this.callSuper("toObject"),{color:this.color,opacity:this.opacity})}}),e.Image.filters.Tint.fromObject=function(t){return new e.Image.filters.Tint(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend;e.Image.filters.Multiply=e.util.createClass(e.Image.filters.BaseFilter,{type:"Multiply",initialize:function(t){t=t||{},this.color=t.color||"#000000"},applyTo:function(t){var i,r,n=t.getContext("2d"),s=n.getImageData(0,0,t.width,t.height),o=s.data,a=o.length;for(r=new e.Color(this.color).getSource(),i=0;a>i;i+=4)o[i]*=r[0]/255,o[i+1]*=r[1]/255,o[i+2]*=r[2]/255;n.putImageData(s,0,0)},toObject:function(){return i(this.callSuper("toObject"),{color:this.color})}}),e.Image.filters.Multiply.fromObject=function(t){return new e.Image.filters.Multiply(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric;e.Image.filters.Blend=e.util.createClass({type:"Blend",initialize:function(t){t=t||{},this.color=t.color||"#000",this.image=t.image||!1,this.mode=t.mode||"multiply",this.alpha=t.alpha||1},applyTo:function(t){var i,r,n,s,o,a,h,c=t.getContext("2d"),l=c.getImageData(0,0,t.width,t.height),u=l.data,f=!1;if(this.image){f=!0;var d=e.util.createCanvasElement();d.width=this.image.width,d.height=this.image.height;var g=new e.StaticCanvas(d);g.add(this.image);var p=g.getContext("2d");h=p.getImageData(0,0,g.width,g.height).data}else h=new e.Color(this.color).getSource(),i=h[0]*this.alpha,r=h[1]*this.alpha,n=h[2]*this.alpha;for(var v=0,m=u.length;m>v;v+=4)switch(s=u[v],o=u[v+1],a=u[v+2],f&&(i=h[v]*this.alpha,r=h[v+1]*this.alpha,n=h[v+2]*this.alpha),this.mode){case"multiply":u[v]=s*i/255,u[v+1]=o*r/255,u[v+2]=a*n/255;break;case"screen":u[v]=1-(1-s)*(1-i),u[v+1]=1-(1-o)*(1-r),u[v+2]=1-(1-a)*(1-n);break;case"add":u[v]=Math.min(255,s+i),u[v+1]=Math.min(255,o+r),u[v+2]=Math.min(255,a+n);break;case"diff":case"difference":u[v]=Math.abs(s-i),u[v+1]=Math.abs(o-r),u[v+2]=Math.abs(a-n);break;case"subtract":var y=s-i,b=o-r,x=a-n;u[v]=0>y?0:y,u[v+1]=0>b?0:b,u[v+2]=0>x?0:x;break;case"darken":u[v]=Math.min(s,i),u[v+1]=Math.min(o,r),u[v+2]=Math.min(a,n);break;case"lighten":u[v]=Math.max(s,i),u[v+1]=Math.max(o,r),u[v+2]=Math.max(a,n)}c.putImageData(l,0,0)},toObject:function(){return{color:this.color,image:this.image,mode:this.mode,alpha:this.alpha}}}),e.Image.filters.Blend.fromObject=function(t){return new e.Image.filters.Blend(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=Math.pow,r=Math.floor,n=Math.sqrt,s=Math.abs,o=Math.max,a=Math.round,h=Math.sin,c=Math.ceil;e.Image.filters.Resize=e.util.createClass(e.Image.filters.BaseFilter,{type:"Resize",resizeType:"hermite",scaleX:0,scaleY:0,lanczosLobes:3,applyTo:function(t,e,i){this.rcpScaleX=1/e,this.rcpScaleY=1/i;var r,n=t.width,s=t.height,o=a(n*e),h=a(s*i);
"sliceHack"===this.resizeType&&(r=this.sliceByTwo(t,n,s,o,h)),"hermite"===this.resizeType&&(r=this.hermiteFastResize(t,n,s,o,h)),"bilinear"===this.resizeType&&(r=this.bilinearFiltering(t,n,s,o,h)),"lanczos"===this.resizeType&&(r=this.lanczosResize(t,n,s,o,h)),t.width=o,t.height=h,t.getContext("2d").putImageData(r,0,0)},sliceByTwo:function(t,i,n,s,a){var h,c=t.getContext("2d"),l=.5,u=.5,f=1,d=1,g=!1,p=!1,v=i,m=n,y=e.util.createCanvasElement(),b=y.getContext("2d");for(s=r(s),a=r(a),y.width=o(s,i),y.height=o(a,n),s>i&&(l=2,f=-1),a>n&&(u=2,d=-1),h=c.getImageData(0,0,i,n),t.width=o(s,i),t.height=o(a,n),c.putImageData(h,0,0);!g||!p;)i=v,n=m,s*f<r(v*l*f)?v=r(v*l):(v=s,g=!0),a*d<r(m*u*d)?m=r(m*u):(m=a,p=!0),h=c.getImageData(0,0,i,n),b.putImageData(h,0,0),c.clearRect(0,0,v,m),c.drawImage(y,0,0,i,n,0,0,v,m);return c.getImageData(0,0,s,a)},lanczosResize:function(t,e,o,a,l){function u(t){return function(e){if(e>t)return 0;if(e*=Math.PI,s(e)<1e-16)return 1;var i=e/t;return h(e)*h(i)/e/i}}function f(t){var h,c,u,d,g,k,P,j,A,M,D;for(T.x=(t+.5)*b,E.x=r(T.x),h=0;l>h;h++){for(T.y=(h+.5)*x,E.y=r(T.y),g=0,k=0,P=0,j=0,A=0,c=E.x-S;c<=E.x+S;c++)if(!(0>c||c>=e)){M=r(1e3*s(c-T.x)),O[M]||(O[M]={});for(var L=E.y-w;L<=E.y+w;L++)0>L||L>=o||(D=r(1e3*s(L-T.y)),O[M][D]||(O[M][D]=y(n(i(M*_,2)+i(D*C,2))/1e3)),u=O[M][D],u>0&&(d=4*(L*e+c),g+=u,k+=u*v[d],P+=u*v[d+1],j+=u*v[d+2],A+=u*v[d+3]))}d=4*(h*a+t),m[d]=k/g,m[d+1]=P/g,m[d+2]=j/g,m[d+3]=A/g}return++t<a?f(t):p}var d=t.getContext("2d"),g=d.getImageData(0,0,e,o),p=d.getImageData(0,0,a,l),v=g.data,m=p.data,y=u(this.lanczosLobes),b=this.rcpScaleX,x=this.rcpScaleY,_=2/this.rcpScaleX,C=2/this.rcpScaleY,S=c(b*this.lanczosLobes/2),w=c(x*this.lanczosLobes/2),O={},T={},E={};return f(0)},bilinearFiltering:function(t,e,i,n,s){var o,a,h,c,l,u,f,d,g,p,v,m,y,b=0,x=this.rcpScaleX,_=this.rcpScaleY,C=t.getContext("2d"),S=4*(e-1),w=C.getImageData(0,0,e,i),O=w.data,T=C.getImageData(0,0,n,s),E=T.data;for(f=0;s>f;f++)for(d=0;n>d;d++)for(l=r(x*d),u=r(_*f),g=x*d-l,p=_*f-u,y=4*(u*e+l),v=0;4>v;v++)o=O[y+v],a=O[y+4+v],h=O[y+S+v],c=O[y+S+4+v],m=o*(1-g)*(1-p)+a*g*(1-p)+h*p*(1-g)+c*g*p,E[b++]=m;return T},hermiteFastResize:function(t,e,i,o,a){for(var h=this.rcpScaleX,l=this.rcpScaleY,u=c(h/2),f=c(l/2),d=t.getContext("2d"),g=d.getImageData(0,0,e,i),p=g.data,v=d.getImageData(0,0,o,a),m=v.data,y=0;a>y;y++)for(var b=0;o>b;b++){for(var x=4*(b+y*o),_=0,C=0,S=0,w=0,O=0,T=0,E=0,k=(y+.5)*l,P=r(y*l);(y+1)*l>P;P++)for(var j=s(k-(P+.5))/f,A=(b+.5)*h,M=j*j,D=r(b*h);(b+1)*h>D;D++){var L=s(A-(D+.5))/u,I=n(M+L*L);I>1&&-1>I||(_=2*I*I*I-3*I*I+1,_>0&&(L=4*(D+P*e),E+=_*p[L+3],S+=_,p[L+3]<255&&(_=_*p[L+3]/250),w+=_*p[L],O+=_*p[L+1],T+=_*p[L+2],C+=_))}m[x]=w/C,m[x+1]=O/C,m[x+2]=T/C,m[x+3]=E/S}return v}}),e.Image.filters.Resize.fromObject=function(){return new e.Image.filters.Resize}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),i=e.util.object.extend,r=e.util.object.clone,n=e.util.toFixed,s=e.StaticCanvas.supports("setLineDash");if(e.Text)return void e.warn("fabric.Text is already defined");var o=e.Object.prototype.stateProperties.concat();o.push("fontFamily","fontWeight","fontSize","text","textDecoration","textAlign","fontStyle","lineHeight","textBackgroundColor","useNative","path"),e.Text=e.util.createClass(e.Object,{_dimensionAffectingProps:{fontSize:!0,fontWeight:!0,fontFamily:!0,textDecoration:!0,fontStyle:!0,lineHeight:!0,stroke:!0,strokeWidth:!0,text:!0},_reNewline:/\r?\n/,type:"text",fontSize:40,fontWeight:"normal",fontFamily:"Times New Roman",textDecoration:"",textAlign:"left",fontStyle:"",lineHeight:1.3,textBackgroundColor:"",path:null,useNative:!0,stateProperties:o,stroke:null,shadow:null,initialize:function(t,e){e=e||{},this.text=t,this.__skipDimension=!0,this.setOptions(e),this.__skipDimension=!1,this._initDimensions()},_initDimensions:function(){if(!this.__skipDimension){var t=e.util.createCanvasElement();this._render(t.getContext("2d"))}},toString:function(){return"#<fabric.Text ("+this.complexity()+'): { "text": "'+this.text+'", "fontFamily": "'+this.fontFamily+'" }>'},_render:function(t){"undefined"==typeof Cufon||this.useNative===!0?this._renderViaNative(t):this._renderViaCufon(t)},_renderViaNative:function(t){var i=this.text.split(this._reNewline);this._setTextStyles(t),this.width=this._getTextWidth(t,i),this.height=this._getTextHeight(t,i),this.clipTo&&e.util.clipContext(this,t),this._renderTextBackground(t,i),this._translateForTextAlign(t),this._renderText(t,i),"left"!==this.textAlign&&"justify"!==this.textAlign&&t.restore(),this._renderTextDecoration(t,i),this.clipTo&&t.restore(),this._setBoundaries(t,i),this._totalLineHeight=0},_renderText:function(t,e){t.save(),this._setOpacity(t),this._setShadow(t),this._setupCompositeOperation(t),this._renderTextFill(t,e),this._renderTextStroke(t,e),this._restoreCompositeOperation(t),this._removeShadow(t),t.restore()},_translateForTextAlign:function(t){"left"!==this.textAlign&&"justify"!==this.textAlign&&(t.save(),t.translate("center"===this.textAlign?this.width/2:this.width,0))},_setBoundaries:function(t,e){this._boundaries=[];for(var i=0,r=e.length;r>i;i++){var n=this._getLineWidth(t,e[i]),s=this._getLineLeftOffset(n);this._boundaries.push({height:this.fontSize*this.lineHeight,width:n,left:s})}},_setTextStyles:function(t){this._setFillStyles(t),this._setStrokeStyles(t),t.textBaseline="alphabetic",this.skipTextAlign||(t.textAlign=this.textAlign),t.font=this._getFontDeclaration()},_getTextHeight:function(t,e){return this.fontSize*e.length*this.lineHeight},_getTextWidth:function(t,e){for(var i=t.measureText(e[0]||"|").width,r=1,n=e.length;n>r;r++){var s=t.measureText(e[r]).width;s>i&&(i=s)}return i},_renderChars:function(t,e,i,r,n){e[t](i,r,n)},_renderTextLine:function(t,e,i,r,n,s){if(n-=this.fontSize/4,"justify"!==this.textAlign)return void this._renderChars(t,e,i,r,n,s);var o=e.measureText(i).width,a=this.width;if(a>o)for(var h=i.split(/\s+/),c=e.measureText(i.replace(/\s+/g,"")).width,l=a-c,u=h.length-1,f=l/u,d=0,g=0,p=h.length;p>g;g++)this._renderChars(t,e,h[g],r+d,n,s),d+=e.measureText(h[g]).width+f;else this._renderChars(t,e,i,r,n,s)},_getLeftOffset:function(){return-this.width/2},_getTopOffset:function(){return-this.height/2},_renderTextFill:function(t,e){if(this.fill||this._skipFillStrokeCheck){this._boundaries=[];for(var i=0,r=0,n=e.length;n>r;r++){var s=this._getHeightOfLine(t,r,e);i+=s,this._renderTextLine("fillText",t,e[r],this._getLeftOffset(),this._getTopOffset()+i,r)}this.shadow&&!this.shadow.affectStroke&&this._removeShadow(t)}},_renderTextStroke:function(t,e){if(this.stroke&&0!==this.strokeWidth||this._skipFillStrokeCheck){var i=0;t.save(),this.strokeDashArray&&(1&this.strokeDashArray.length&&this.strokeDashArray.push.apply(this.strokeDashArray,this.strokeDashArray),s&&t.setLineDash(this.strokeDashArray)),t.beginPath();for(var r=0,n=e.length;n>r;r++){var o=this._getHeightOfLine(t,r,e);i+=o,this._renderTextLine("strokeText",t,e[r],this._getLeftOffset(),this._getTopOffset()+i,r)}t.closePath(),t.restore()}},_getHeightOfLine:function(){return this.fontSize*this.lineHeight},_renderTextBackground:function(t,e){this._renderTextBoxBackground(t),this._renderTextLinesBackground(t,e)},_renderTextBoxBackground:function(t){this.backgroundColor&&(t.save(),t.fillStyle=this.backgroundColor,t.fillRect(this._getLeftOffset(),this._getTopOffset(),this.width,this.height),t.restore())},_renderTextLinesBackground:function(t,e){if(this.textBackgroundColor){t.save(),t.fillStyle=this.textBackgroundColor;for(var i=0,r=e.length;r>i;i++)if(""!==e[i]){var n=this._getLineWidth(t,e[i]),s=this._getLineLeftOffset(n);t.fillRect(this._getLeftOffset()+s,this._getTopOffset()+i*this.fontSize*this.lineHeight,n,this.fontSize*this.lineHeight)}t.restore()}},_getLineLeftOffset:function(t){return"center"===this.textAlign?(this.width-t)/2:"right"===this.textAlign?this.width-t:0},_getLineWidth:function(t,e){return"justify"===this.textAlign?this.width:t.measureText(e).width},_renderTextDecoration:function(t,e){function i(i){for(var s=0,o=e.length;o>s;s++){var a=n._getLineWidth(t,e[s]),h=n._getLineLeftOffset(a);t.fillRect(n._getLeftOffset()+h,~~(i+s*n._getHeightOfLine(t,s,e)-r),a,1)}}if(this.textDecoration){var r=this._getTextHeight(t,e)/2,n=this;this.textDecoration.indexOf("underline")>-1&&i(this.fontSize*this.lineHeight),this.textDecoration.indexOf("line-through")>-1&&i(this.fontSize*this.lineHeight-this.fontSize/2),this.textDecoration.indexOf("overline")>-1&&i(this.fontSize*this.lineHeight-this.fontSize)}},_getFontDeclaration:function(){return[e.isLikelyNode?this.fontWeight:this.fontStyle,e.isLikelyNode?this.fontStyle:this.fontWeight,this.fontSize+"px",e.isLikelyNode?'"'+this.fontFamily+'"':this.fontFamily].join(" ")},render:function(t,e){if(this.visible){t.save(),e||this.transform(t);var i=this.group&&"path-group"===this.group.type;i&&t.translate(-this.group.width/2,-this.group.height/2),this.transformMatrix&&t.transform.apply(t,this.transformMatrix),i&&t.translate(this.left,this.top),this._render(t),t.restore()}},toObject:function(t){var e=i(this.callSuper("toObject",t),{text:this.text,fontSize:this.fontSize,fontWeight:this.fontWeight,fontFamily:this.fontFamily,fontStyle:this.fontStyle,lineHeight:this.lineHeight,textDecoration:this.textDecoration,textAlign:this.textAlign,path:this.path,textBackgroundColor:this.textBackgroundColor,useNative:this.useNative});return this.includeDefaultValues||this._removeDefaultValues(e),e},toSVG:function(t){var e=[],i=this.text.split(this._reNewline),r=this._getSVGLeftTopOffsets(i),n=this._getSVGTextAndBg(r.lineTop,r.textLeft,i),s=this._getSVGShadows(r.lineTop,i);return r.textTop+=this._fontAscent?this._fontAscent/5*this.lineHeight:0,this._wrapSVGTextAndBg(e,n,s,r),t?t(e.join("")):e.join("")},_getSVGLeftTopOffsets:function(t){var e=this.useNative?this.fontSize*this.lineHeight:-this._fontAscent-this._fontAscent/5*this.lineHeight,i=-(this.width/2),r=this.useNative?this.fontSize*this.lineHeight-.25*this.fontSize:this.height/2-t.length*this.fontSize-this._totalLineHeight;return{textLeft:i+(this.group&&"path-group"===this.group.type?this.left:0),textTop:r+(this.group&&"path-group"===this.group.type?this.top:0),lineTop:e}},_wrapSVGTextAndBg:function(t,e,i,r){t.push('<g transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'">\n',e.textBgRects.join(""),"<text ",this.fontFamily?'font-family="'+this.fontFamily.replace(/"/g,"'")+'" ':"",this.fontSize?'font-size="'+this.fontSize+'" ':"",this.fontStyle?'font-style="'+this.fontStyle+'" ':"",this.fontWeight?'font-weight="'+this.fontWeight+'" ':"",this.textDecoration?'text-decoration="'+this.textDecoration+'" ':"",'style="',this.getSvgStyles(),'" ','transform="translate(',n(r.textLeft,2)," ",n(r.textTop,2),')">',i.join(""),e.textSpans.join(""),"</text>\n","</g>\n")},_getSVGShadows:function(t,i){var r,s,o=[],a=1;if(!this.shadow||!this._boundaries)return o;for(r=0,s=i.length;s>r;r++)if(""!==i[r]){var h=this._boundaries&&this._boundaries[r]?this._boundaries[r].left:0;o.push('<tspan x="',n(h+a+this.shadow.offsetX,2),0===r||this.useNative?'" y':'" dy','="',n(this.useNative?t*r-this.height/2+this.shadow.offsetY:t+(0===r?this.shadow.offsetY:0),2),'" ',this._getFillAttributes(this.shadow.color),">",e.util.string.escapeXml(i[r]),"</tspan>"),a=1}else a++;return o},_getSVGTextAndBg:function(t,e,i){var r=[],n=[],s=1;this._setSVGBg(n);for(var o=0,a=i.length;a>o;o++)""!==i[o]?(this._setSVGTextLineText(i[o],o,r,t,s,n),s=1):s++,this.textBackgroundColor&&this._boundaries&&this._setSVGTextLineBg(n,o,e,t);return{textSpans:r,textBgRects:n}},_setSVGTextLineText:function(t,i,r,s,o){var a=this._boundaries&&this._boundaries[i]?n(this._boundaries[i].left,2):0;r.push('<tspan x="',a,'" ',0===i||this.useNative?"y":"dy",'="',n(this.useNative?s*i-this.height/2:s*o,2),'" ',this._getFillAttributes(this.fill),">",e.util.string.escapeXml(t),"</tspan>")},_setSVGTextLineBg:function(t,e,i,r){t.push("<rect ",this._getFillAttributes(this.textBackgroundColor),' x="',n(i+this._boundaries[e].left,2),'" y="',n(r*e-this.height/2,2),'" width="',n(this._boundaries[e].width,2),'" height="',n(this._boundaries[e].height,2),'"></rect>\n')},_setSVGBg:function(t){this.backgroundColor&&this._boundaries&&t.push("<rect ",this._getFillAttributes(this.backgroundColor),' x="',n(-this.width/2,2),'" y="',n(-this.height/2,2),'" width="',n(this.width,2),'" height="',n(this.height,2),'"></rect>')},_getFillAttributes:function(t){var i=t&&"string"==typeof t?new e.Color(t):"";return i&&i.getSource()&&1!==i.getAlpha()?'opacity="'+i.getAlpha()+'" fill="'+i.setAlpha(1).toRgb()+'"':'fill="'+t+'"'},_set:function(t,e){"fontFamily"===t&&this.path&&(this.path=this.path.replace(/(.*?)([^\/]*)(\.font\.js)/,"$1"+e+"$3")),this.callSuper("_set",t,e),t in this._dimensionAffectingProps&&(this._initDimensions(),this.setCoords())},complexity:function(){return 1}}),e.Text.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat("x y dx dy font-family font-style font-weight font-size text-decoration text-anchor".split(" ")),e.Text.DEFAULT_SVG_FONT_SIZE=16,e.Text.fromElement=function(t,i){if(!t)return null;var r=e.parseAttributes(t,e.Text.ATTRIBUTE_NAMES);i=e.util.object.extend(i?e.util.object.clone(i):{},r),i.top=i.top||0,i.left=i.left||0,"dx"in r&&(i.left+=r.dx),"dy"in r&&(i.top+=r.dy),"fontSize"in i||(i.fontSize=e.Text.DEFAULT_SVG_FONT_SIZE),i.originX||(i.originX="left"),i.top+=i.fontSize/4;var n=new e.Text(t.textContent,i),s=0;return"left"===n.originX&&(s=n.getWidth()/2),"right"===n.originX&&(s=-n.getWidth()/2),n.set({left:n.getLeft()+s,top:n.getTop()-n.getHeight()/2}),n},e.Text.fromObject=function(t){return new e.Text(t.text,r(t))},e.util.createAccessors(e.Text)}("undefined"!=typeof exports?exports:this),fabric.util.object.extend(fabric.Text.prototype,{_renderViaCufon:function(t){var e=Cufon.textOptions||(Cufon.textOptions={});e.left=this.left,e.top=this.top,e.context=t,e.color=this.fill;var i=this._initDummyElementForCufon();this.transform(t),Cufon.replaceElement(i,{engine:"canvas",separate:"none",fontFamily:this.fontFamily,fontWeight:this.fontWeight,textDecoration:this.textDecoration,textShadow:this.shadow&&this.shadow.toString(),textAlign:this.textAlign,fontStyle:this.fontStyle,lineHeight:this.lineHeight,stroke:this.stroke,strokeWidth:this.strokeWidth,backgroundColor:this.backgroundColor,textBackgroundColor:this.textBackgroundColor}),this.width=e.width,this.height=e.height,this._totalLineHeight=e.totalLineHeight,this._fontAscent=e.fontAscent,this._boundaries=e.boundaries,i=null,this.setCoords()},_initDummyElementForCufon:function(){var t=fabric.document.createElement("pre"),e=fabric.document.createElement("div");return e.appendChild(t),"undefined"==typeof G_vmlCanvasManager?t.innerHTML=this.text:t.innerText=this.text.replace(/\r?\n/gi,"\r"),t.style.fontSize=this.fontSize+"px",t.style.letterSpacing="normal",t}}),function(){var t=fabric.util.object.clone;fabric.IText=fabric.util.createClass(fabric.Text,fabric.Observable,{type:"i-text",selectionStart:0,selectionEnd:0,selectionColor:"rgba(17,119,255,0.3)",isEditing:!1,editable:!0,editingBorderColor:"rgba(102,153,255,0.25)",cursorWidth:2,cursorColor:"#333",cursorDelay:1e3,cursorDuration:600,styles:null,caching:!0,_skipFillStrokeCheck:!0,_reSpace:/\s|\n/,_fontSizeFraction:4,_currentCursorOpacity:0,_selectionDirection:null,_abortCursorAnimation:!1,_charWidthsCache:{},initialize:function(t,e){this.styles=e?e.styles||{}:{},this.callSuper("initialize",t,e),this.initBehavior(),fabric.IText.instances.push(this),this.__lineWidths={},this.__lineHeights={},this.__lineOffsets={}},isEmptyStyles:function(){if(!this.styles)return!0;var t=this.styles;for(var e in t)for(var i in t[e])for(var r in t[e][i])return!1;return!0},setSelectionStart:function(t){this.selectionStart!==t&&(this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})),this.selectionStart=t,this.hiddenTextarea&&(this.hiddenTextarea.selectionStart=t)},setSelectionEnd:function(t){this.selectionEnd!==t&&(this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})),this.selectionEnd=t,this.hiddenTextarea&&(this.hiddenTextarea.selectionEnd=t)},getSelectionStyles:function(t,e){if(2===arguments.length){for(var i=[],r=t;e>r;r++)i.push(this.getSelectionStyles(r));return i}var n=this.get2DCursorLocation(t);return this.styles[n.lineIndex]?this.styles[n.lineIndex][n.charIndex]||{}:{}},setSelectionStyles:function(t){if(this.selectionStart===this.selectionEnd)this._extendStyles(this.selectionStart,t);else for(var e=this.selectionStart;e<this.selectionEnd;e++)this._extendStyles(e,t);return this},_extendStyles:function(t,e){var i=this.get2DCursorLocation(t);this.styles[i.lineIndex]||(this.styles[i.lineIndex]={}),this.styles[i.lineIndex][i.charIndex]||(this.styles[i.lineIndex][i.charIndex]={}),fabric.util.object.extend(this.styles[i.lineIndex][i.charIndex],e)},_render:function(t){this.callSuper("_render",t),this.ctx=t,this.isEditing&&this.renderCursorOrSelection()},renderCursorOrSelection:function(){if(this.active){var t,e=this.text.split("");this.selectionStart===this.selectionEnd?(t=this._getCursorBoundaries(e,"cursor"),this.renderCursor(t)):(t=this._getCursorBoundaries(e,"selection"),this.renderSelection(e,t))}},get2DCursorLocation:function(t){"undefined"==typeof t&&(t=this.selectionStart);var e=this.text.slice(0,t),i=e.split(this._reNewline);return{lineIndex:i.length-1,charIndex:i[i.length-1].length}},getCurrentCharStyle:function(t,e){var i=this.styles[t]&&this.styles[t][0===e?0:e-1];return{fontSize:i&&i.fontSize||this.fontSize,fill:i&&i.fill||this.fill,textBackgroundColor:i&&i.textBackgroundColor||this.textBackgroundColor,textDecoration:i&&i.textDecoration||this.textDecoration,fontFamily:i&&i.fontFamily||this.fontFamily,fontWeight:i&&i.fontWeight||this.fontWeight,fontStyle:i&&i.fontStyle||this.fontStyle,stroke:i&&i.stroke||this.stroke,strokeWidth:i&&i.strokeWidth||this.strokeWidth}},getCurrentCharFontSize:function(t,e){return this.styles[t]&&this.styles[t][0===e?0:e-1]&&this.styles[t][0===e?0:e-1].fontSize||this.fontSize},getCurrentCharColor:function(t,e){return this.styles[t]&&this.styles[t][0===e?0:e-1]&&this.styles[t][0===e?0:e-1].fill||this.cursorColor},_getCursorBoundaries:function(t,e){var i=this.get2DCursorLocation(),r=this.text.split(this._reNewline),n=Math.round(this._getLeftOffset()),s=this._getTopOffset(),o=this._getCursorBoundariesOffsets(t,e,i,r);return{left:n,top:s,leftOffset:o.left+o.lineLeft,topOffset:o.top}},_getCursorBoundariesOffsets:function(t,e,i,r){for(var n=0,s=0,o=0,a=0,h="cursor"===e?this._getHeightOfLine(this.ctx,0)-this.getCurrentCharFontSize(i.lineIndex,i.charIndex):0,c=0;c<this.selectionStart;c++){if("\n"===t[c]){a=0;var l=s+("cursor"===e?1:0);h+=this._getCachedLineHeight(l),s++,o=0}else a+=this._getWidthOfChar(this.ctx,t[c],s,o),o++;n=this._getCachedLineOffset(s,r)}return this._clearCache(),{top:h,left:a,lineLeft:n}},_clearCache:function(){this.__lineWidths={},this.__lineHeights={},this.__lineOffsets={}},_getCachedLineHeight:function(t){return this.__lineHeights[t]||(this.__lineHeights[t]=this._getHeightOfLine(this.ctx,t))},_getCachedLineWidth:function(t,e){return this.__lineWidths[t]||(this.__lineWidths[t]=this._getWidthOfLine(this.ctx,t,e))},_getCachedLineOffset:function(t,e){var i=this._getCachedLineWidth(t,e);return this.__lineOffsets[t]||(this.__lineOffsets[t]=this._getLineLeftOffset(i))},renderCursor:function(t){var e=this.ctx;e.save();var i=this.get2DCursorLocation(),r=i.lineIndex,n=i.charIndex,s=this.getCurrentCharFontSize(r,n),o=0===r&&0===n?this._getCachedLineOffset(r,this.text.split(this._reNewline)):t.leftOffset;e.fillStyle=this.getCurrentCharColor(r,n),e.globalAlpha=this.__isMousedown?1:this._currentCursorOpacity,e.fillRect(t.left+o,t.top+t.topOffset,this.cursorWidth/this.scaleX,s),e.restore()},renderSelection:function(t,e){var i=this.ctx;i.save(),i.fillStyle=this.selectionColor;for(var r=this.get2DCursorLocation(this.selectionStart),n=this.get2DCursorLocation(this.selectionEnd),s=r.lineIndex,o=n.lineIndex,a=this.text.split(this._reNewline),h=s;o>=h;h++){var c=this._getCachedLineOffset(h,a)||0,l=this._getCachedLineHeight(h),u=0;if(h===s)for(var f=0,d=a[h].length;d>f;f++)f>=r.charIndex&&(h!==o||f<n.charIndex)&&(u+=this._getWidthOfChar(i,a[h][f],h,f)),f<r.charIndex&&(c+=this._getWidthOfChar(i,a[h][f],h,f));else if(h>s&&o>h)u+=this._getCachedLineWidth(h,a)||5;else if(h===o)for(var g=0,p=n.charIndex;p>g;g++)u+=this._getWidthOfChar(i,a[h][g],h,g);i.fillRect(e.left+c,e.top+e.topOffset,u,l),e.topOffset+=l}i.restore()},_renderChars:function(t,e,i,r,n,s){if(this.isEmptyStyles())return this._renderCharsFast(t,e,i,r,n);this.skipTextAlign=!0,r-="center"===this.textAlign?this.width/2:"right"===this.textAlign?this.width:0;var o,a=this.text.split(this._reNewline),h=this._getWidthOfLine(e,s,a),c=this._getHeightOfLine(e,s,a),l=this._getLineLeftOffset(h),u=i.split(""),f="";r+=l||0,e.save();for(var d=0,g=u.length;g>=d;d++){o=o||this.getCurrentCharStyle(s,d);var p=this.getCurrentCharStyle(s,d+1);(this._hasStyleChanged(o,p)||d===g)&&(this._renderChar(t,e,s,d-1,f,r,n,c),f="",o=p),f+=u[d]}e.restore()},_renderCharsFast:function(t,e,i,r,n){this.skipTextAlign=!1,"fillText"===t&&this.fill&&this.callSuper("_renderChars",t,e,i,r,n),"strokeText"===t&&this.stroke&&this.callSuper("_renderChars",t,e,i,r,n)},_renderChar:function(t,e,i,r,n,s,o,a){var h,c,l;if(this.styles&&this.styles[i]&&(h=this.styles[i][r])){var u=h.stroke||this.stroke,f=h.fill||this.fill;e.save(),c=this._applyCharStylesGetWidth(e,n,i,r,h),l=this._getHeightOfChar(e,n,i,r),f&&e.fillText(n,s,o),u&&e.strokeText(n,s,o),this._renderCharDecoration(e,h,s,o,c,a,l),e.restore(),e.translate(c,0)}else"strokeText"===t&&this.stroke&&e[t](n,s,o),"fillText"===t&&this.fill&&e[t](n,s,o),c=this._applyCharStylesGetWidth(e,n,i,r),this._renderCharDecoration(e,null,s,o,c,a),e.translate(e.measureText(n).width,0)},_hasStyleChanged:function(t,e){return t.fill!==e.fill||t.fontSize!==e.fontSize||t.textBackgroundColor!==e.textBackgroundColor||t.textDecoration!==e.textDecoration||t.fontFamily!==e.fontFamily||t.fontWeight!==e.fontWeight||t.fontStyle!==e.fontStyle||t.stroke!==e.stroke||t.strokeWidth!==e.strokeWidth},_renderCharDecoration:function(t,e,i,r,n,s,o){var a=e?e.textDecoration||this.textDecoration:this.textDecoration,h=(e?e.fontSize:null)||this.fontSize;a&&(a.indexOf("underline")>-1&&this._renderCharDecorationAtOffset(t,i,r+this.fontSize/this._fontSizeFraction,n,0,this.fontSize/20),a.indexOf("line-through")>-1&&this._renderCharDecorationAtOffset(t,i,r+this.fontSize/this._fontSizeFraction,n,o/2,h/20),a.indexOf("overline")>-1&&this._renderCharDecorationAtOffset(t,i,r,n,s-this.fontSize/this._fontSizeFraction,this.fontSize/20))},_renderCharDecorationAtOffset:function(t,e,i,r,n,s){t.fillRect(e,i-n,r,s)},_renderTextLine:function(t,e,i,r,n,s){n+=this.fontSize/4,this.callSuper("_renderTextLine",t,e,i,r,n,s)},_renderTextDecoration:function(t,e){return this.isEmptyStyles()?this.callSuper("_renderTextDecoration",t,e):void 0},_renderTextLinesBackground:function(t,e){if(this.textBackgroundColor||this.styles){t.save(),this.textBackgroundColor&&(t.fillStyle=this.textBackgroundColor);for(var i=0,r=this.fontSize/this._fontSizeFraction,n=0,s=e.length;s>n;n++){var o=this._getHeightOfLine(t,n,e);if(""!==e[n]){var a=this._getWidthOfLine(t,n,e),h=this._getLineLeftOffset(a);if(this.textBackgroundColor&&(t.fillStyle=this.textBackgroundColor,t.fillRect(this._getLeftOffset()+h,this._getTopOffset()+i+r,a,o)),this.styles[n])for(var c=0,l=e[n].length;l>c;c++)if(this.styles[n]&&this.styles[n][c]&&this.styles[n][c].textBackgroundColor){var u=e[n][c];t.fillStyle=this.styles[n][c].textBackgroundColor,t.fillRect(this._getLeftOffset()+h+this._getWidthOfCharsAt(t,n,c,e),this._getTopOffset()+i+r,this._getWidthOfChar(t,u,n,c,e)+1,o)}i+=o}else i+=o}t.restore()}},_getCacheProp:function(t,e){return t+e.fontFamily+e.fontSize+e.fontWeight+e.fontStyle+e.shadow},_applyCharStylesGetWidth:function(e,i,r,n,s){var o=s||this.styles[r]&&this.styles[r][n];o=o?t(o):{},this._applyFontStyles(o);var a=this._getCacheProp(i,o);if(this.isEmptyStyles()&&this._charWidthsCache[a]&&this.caching)return this._charWidthsCache[a];"string"==typeof o.shadow&&(o.shadow=new fabric.Shadow(o.shadow));var h=o.fill||this.fill;return e.fillStyle=h.toLive?h.toLive(e):h,o.stroke&&(e.strokeStyle=o.stroke&&o.stroke.toLive?o.stroke.toLive(e):o.stroke),e.lineWidth=o.strokeWidth||this.strokeWidth,e.font=this._getFontDeclaration.call(o),this._setShadow.call(o,e),this.caching?(this._charWidthsCache[a]||(this._charWidthsCache[a]=e.measureText(i).width),this._charWidthsCache[a]):e.measureText(i).width},_applyFontStyles:function(t){t.fontFamily||(t.fontFamily=this.fontFamily),t.fontSize||(t.fontSize=this.fontSize),t.fontWeight||(t.fontWeight=this.fontWeight),t.fontStyle||(t.fontStyle=this.fontStyle)},_getStyleDeclaration:function(e,i){return this.styles[e]&&this.styles[e][i]?t(this.styles[e][i]):{}},_getWidthOfChar:function(t,e,i,r){if("justify"===this.textAlign&&/\s/.test(e))return this._getWidthOfSpace(t,i);var n=this._getStyleDeclaration(i,r);this._applyFontStyles(n);var s=this._getCacheProp(e,n);if(this._charWidthsCache[s]&&this.caching)return this._charWidthsCache[s];if(t){t.save();var o=this._applyCharStylesGetWidth(t,e,i,r);return t.restore(),o}},_getHeightOfChar:function(t,e,i,r){return this.styles[i]&&this.styles[i][r]?this.styles[i][r].fontSize||this.fontSize:this.fontSize},_getWidthOfCharAt:function(t,e,i,r){r=r||this.text.split(this._reNewline);var n=r[e].split("")[i];return this._getWidthOfChar(t,n,e,i)},_getHeightOfCharAt:function(t,e,i,r){r=r||this.text.split(this._reNewline);var n=r[e].split("")[i];return this._getHeightOfChar(t,n,e,i)},_getWidthOfCharsAt:function(t,e,i,r){for(var n=0,s=0;i>s;s++)n+=this._getWidthOfCharAt(t,e,s,r);return n},_getWidthOfLine:function(t,e,i){return this._getWidthOfCharsAt(t,e,i[e].length,i)},_getWidthOfSpace:function(t,e){var i=this.text.split(this._reNewline),r=i[e],n=r.split(/\s+/),s=this._getWidthOfWords(t,r,e),o=this.width-s,a=n.length-1,h=o/a;return h},_getWidthOfWords:function(t,e,i){for(var r=0,n=0;n<e.length;n++){var s=e[n];s.match(/\s/)||(r+=this._getWidthOfChar(t,s,i,n))}return r},_getTextWidth:function(t,e){if(this.isEmptyStyles())return this.callSuper("_getTextWidth",t,e);for(var i=this._getWidthOfLine(t,0,e),r=1,n=e.length;n>r;r++){var s=this._getWidthOfLine(t,r,e);s>i&&(i=s)}return i},_getHeightOfLine:function(t,e,i){i=i||this.text.split(this._reNewline);for(var r=this._getHeightOfChar(t,i[e][0],e,0),n=i[e],s=n.split(""),o=1,a=s.length;a>o;o++){var h=this._getHeightOfChar(t,s[o],e,o);h>r&&(r=h)}return r*this.lineHeight},_getTextHeight:function(t,e){for(var i=0,r=0,n=e.length;n>r;r++)i+=this._getHeightOfLine(t,r,e);return i},_getTopOffset:function(){var t=fabric.Text.prototype._getTopOffset.call(this);return t-this.fontSize/this._fontSizeFraction},_renderTextBoxBackground:function(t){this.backgroundColor&&(t.save(),t.fillStyle=this.backgroundColor,t.fillRect(this._getLeftOffset(),this._getTopOffset()+this.fontSize/this._fontSizeFraction,this.width,this.height),t.restore())},toObject:function(e){return fabric.util.object.extend(this.callSuper("toObject",e),{styles:t(this.styles)})}}),fabric.IText.fromObject=function(e){return new fabric.IText(e.text,t(e))},fabric.IText.instances=[]}(),function(){var t=fabric.util.object.clone;fabric.util.object.extend(fabric.IText.prototype,{initBehavior:function(){this.initAddedHandler(),this.initCursorSelectionHandlers(),this.initDoubleClickSimulation()},initSelectedHandler:function(){this.on("selected",function(){var t=this;setTimeout(function(){t.selected=!0},100)})},initAddedHandler:function(){this.on("added",function(){this.canvas&&!this.canvas._hasITextHandlers&&(this.canvas._hasITextHandlers=!0,this._initCanvasHandlers())})},_initCanvasHandlers:function(){this.canvas.on("selection:cleared",function(){fabric.IText.prototype.exitEditingOnOthers.call()}),this.canvas.on("mouse:up",function(){fabric.IText.instances.forEach(function(t){t.__isMousedown=!1})}),this.canvas.on("object:selected",function(t){fabric.IText.prototype.exitEditingOnOthers.call(t.target)})},_tick:function(){if(!this._abortCursorAnimation){var t=this;this.animate("_currentCursorOpacity",1,{duration:this.cursorDuration,onComplete:function(){t._onTickComplete()},onChange:function(){t.canvas&&t.canvas.renderAll()},abort:function(){return t._abortCursorAnimation}})}},_onTickComplete:function(){if(!this._abortCursorAnimation){var t=this;this._cursorTimeout1&&clearTimeout(this._cursorTimeout1),this._cursorTimeout1=setTimeout(function(){t.animate("_currentCursorOpacity",0,{duration:this.cursorDuration/2,onComplete:function(){t._tick()},onChange:function(){t.canvas&&t.canvas.renderAll()},abort:function(){return t._abortCursorAnimation}})},100)}},initDelayedCursor:function(t){var e=this,i=t?0:this.cursorDelay;t&&(this._abortCursorAnimation=!0,clearTimeout(this._cursorTimeout1),this._currentCursorOpacity=1,this.canvas&&this.canvas.renderAll()),this._cursorTimeout2&&clearTimeout(this._cursorTimeout2),this._cursorTimeout2=setTimeout(function(){e._abortCursorAnimation=!1,e._tick()},i)},abortCursorAnimation:function(){this._abortCursorAnimation=!0,clearTimeout(this._cursorTimeout1),clearTimeout(this._cursorTimeout2),this._currentCursorOpacity=0,this.canvas&&this.canvas.renderAll();var t=this;setTimeout(function(){t._abortCursorAnimation=!1},10)},selectAll:function(){this.selectionStart=0,this.selectionEnd=this.text.length,this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},getSelectedText:function(){return this.text.slice(this.selectionStart,this.selectionEnd)},findWordBoundaryLeft:function(t){var e=0,i=t-1;if(this._reSpace.test(this.text.charAt(i)))for(;this._reSpace.test(this.text.charAt(i));)e++,i--;for(;/\S/.test(this.text.charAt(i))&&i>-1;)e++,i--;return t-e},findWordBoundaryRight:function(t){var e=0,i=t;if(this._reSpace.test(this.text.charAt(i)))for(;this._reSpace.test(this.text.charAt(i));)e++,i++;for(;/\S/.test(this.text.charAt(i))&&i<this.text.length;)e++,i++;return t+e},findLineBoundaryLeft:function(t){for(var e=0,i=t-1;!/\n/.test(this.text.charAt(i))&&i>-1;)e++,i--;return t-e},findLineBoundaryRight:function(t){for(var e=0,i=t;!/\n/.test(this.text.charAt(i))&&i<this.text.length;)e++,i++;return t+e},getNumNewLinesInSelectedText:function(){for(var t=this.getSelectedText(),e=0,i=0,r=t.split(""),n=r.length;n>i;i++)"\n"===r[i]&&e++;return e},searchWordBoundary:function(t,e){for(var i=this._reSpace.test(this.text.charAt(t))?t-1:t,r=this.text.charAt(i),n=/[ \n\.,;!\?\-]/;!n.test(r)&&i>0&&i<this.text.length;)i+=e,r=this.text.charAt(i);return n.test(r)&&"\n"!==r&&(i+=1===e?0:1),i},selectWord:function(t){var e=this.searchWordBoundary(t,-1),i=this.searchWordBoundary(t,1);this.setSelectionStart(e),this.setSelectionEnd(i),this.initDelayedCursor(!0)},selectLine:function(t){var e=this.findLineBoundaryLeft(t),i=this.findLineBoundaryRight(t);this.setSelectionStart(e),this.setSelectionEnd(i),this.initDelayedCursor(!0)},enterEditing:function(){return!this.isEditing&&this.editable?(this.exitEditingOnOthers(),this.isEditing=!0,this.initHiddenTextarea(),this._updateTextarea(),this._saveEditingProps(),this._setEditingProps(),this._tick(),this.canvas&&this.canvas.renderAll(),this.fire("editing:entered"),this.canvas&&this.canvas.fire("text:editing:entered",{target:this}),this):void 0},exitEditingOnOthers:function(){fabric.IText.instances.forEach(function(t){t.selected=!1,t.isEditing&&t.exitEditing()},this)},_setEditingProps:function(){this.hoverCursor="text",this.canvas&&(this.canvas.defaultCursor=this.canvas.moveCursor="text"),this.borderColor=this.editingBorderColor,this.hasControls=this.selectable=!1,this.lockMovementX=this.lockMovementY=!0},_updateTextarea:function(){this.hiddenTextarea&&(this.hiddenTextarea.value=this.text,this.hiddenTextarea.selectionStart=this.selectionStart)},_saveEditingProps:function(){this._savedProps={hasControls:this.hasControls,borderColor:this.borderColor,lockMovementX:this.lockMovementX,lockMovementY:this.lockMovementY,hoverCursor:this.hoverCursor,defaultCursor:this.canvas&&this.canvas.defaultCursor,moveCursor:this.canvas&&this.canvas.moveCursor}
},_restoreEditingProps:function(){this._savedProps&&(this.hoverCursor=this._savedProps.overCursor,this.hasControls=this._savedProps.hasControls,this.borderColor=this._savedProps.borderColor,this.lockMovementX=this._savedProps.lockMovementX,this.lockMovementY=this._savedProps.lockMovementY,this.canvas&&(this.canvas.defaultCursor=this._savedProps.defaultCursor,this.canvas.moveCursor=this._savedProps.moveCursor))},exitEditing:function(){return this.selected=!1,this.isEditing=!1,this.selectable=!0,this.selectionEnd=this.selectionStart,this.hiddenTextarea&&this.canvas&&this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea),this.hiddenTextarea=null,this.abortCursorAnimation(),this._restoreEditingProps(),this._currentCursorOpacity=0,this.fire("editing:exited"),this.canvas&&this.canvas.fire("text:editing:exited",{target:this}),this},_removeExtraneousStyles:function(){var t=this.text.split(this._reNewline);for(var e in this.styles)t[e]||delete this.styles[e]},_removeCharsFromTo:function(t,e){for(var i=e;i!==t;){var r=this.get2DCursorLocation(i).charIndex;i--;var n=this.get2DCursorLocation(i).charIndex,s=n>r;s?this.removeStyleObject(s,i+1):this.removeStyleObject(0===this.get2DCursorLocation(i).charIndex,i)}this.text=this.text.slice(0,t)+this.text.slice(e)},insertChars:function(t){var e="\n"===this.text.slice(this.selectionStart,this.selectionStart+1);this.text=this.text.slice(0,this.selectionStart)+t+this.text.slice(this.selectionEnd),this.selectionStart===this.selectionEnd&&this.insertStyleObjects(t,e,this.copiedStyles),this.selectionStart+=t.length,this.selectionEnd=this.selectionStart,this.canvas&&this.canvas.renderAll().renderAll(),this.setCoords(),this.fire("changed"),this.canvas&&this.canvas.fire("text:changed",{target:this})},insertNewlineStyleObject:function(e,i,r){this.shiftLineStyles(e,1),this.styles[e+1]||(this.styles[e+1]={});var n=this.styles[e][i-1],s={};if(r)s[0]=t(n),this.styles[e+1]=s;else{for(var o in this.styles[e])parseInt(o,10)>=i&&(s[parseInt(o,10)-i]=this.styles[e][o],delete this.styles[e][o]);this.styles[e+1]=s}},insertCharStyleObject:function(e,i,r){var n=this.styles[e],s=t(n);0!==i||r||(i=1);for(var o in s){var a=parseInt(o,10);a>=i&&(n[a+1]=s[a])}this.styles[e][i]=r||t(n[i-1])},insertStyleObjects:function(t,e,i){var r=this.get2DCursorLocation(),n=r.lineIndex,s=r.charIndex;this.styles[n]||(this.styles[n]={}),"\n"===t?this.insertNewlineStyleObject(n,s,e):i?this._insertStyles(i):this.insertCharStyleObject(n,s)},_insertStyles:function(t){for(var e=0,i=t.length;i>e;e++){var r=this.get2DCursorLocation(this.selectionStart+e),n=r.lineIndex,s=r.charIndex;this.insertCharStyleObject(n,s,t[e])}},shiftLineStyles:function(e,i){var r=t(this.styles);for(var n in this.styles){var s=parseInt(n,10);s>e&&(this.styles[s+i]=r[s])}},removeStyleObject:function(e,i){var r=this.get2DCursorLocation(i),n=r.lineIndex,s=r.charIndex;if(e){var o=this.text.split(this._reNewline),a=o[n-1],h=a?a.length:0;this.styles[n-1]||(this.styles[n-1]={});for(s in this.styles[n])this.styles[n-1][parseInt(s,10)+h]=this.styles[n][s];this.shiftLineStyles(n,-1)}else{var c=this.styles[n];if(c){var l=this.selectionStart===this.selectionEnd?-1:0;delete c[s+l]}var u=t(c);for(var f in u){var d=parseInt(f,10);d>=s&&0!==d&&(c[d-1]=u[d],delete c[d])}}},insertNewline:function(){this.insertChars("\n")}})}(),fabric.util.object.extend(fabric.IText.prototype,{initDoubleClickSimulation:function(){this.__lastClickTime=+new Date,this.__lastLastClickTime=+new Date,this.__lastPointer={},this.on("mousedown",this.onMouseDown.bind(this))},onMouseDown:function(t){this.__newClickTime=+new Date;var e=this.canvas.getPointer(t.e);this.isTripleClick(e)?(this.fire("tripleclick",t),this._stopEvent(t.e)):this.isDoubleClick(e)&&(this.fire("dblclick",t),this._stopEvent(t.e)),this.__lastLastClickTime=this.__lastClickTime,this.__lastClickTime=this.__newClickTime,this.__lastPointer=e,this.__lastIsEditing=this.isEditing,this.__lastSelected=this.selected},isDoubleClick:function(t){return this.__newClickTime-this.__lastClickTime<500&&this.__lastPointer.x===t.x&&this.__lastPointer.y===t.y&&this.__lastIsEditing},isTripleClick:function(t){return this.__newClickTime-this.__lastClickTime<500&&this.__lastClickTime-this.__lastLastClickTime<500&&this.__lastPointer.x===t.x&&this.__lastPointer.y===t.y},_stopEvent:function(t){t.preventDefault&&t.preventDefault(),t.stopPropagation&&t.stopPropagation()},initCursorSelectionHandlers:function(){this.initSelectedHandler(),this.initMousedownHandler(),this.initMousemoveHandler(),this.initMouseupHandler(),this.initClicks()},initClicks:function(){this.on("dblclick",function(t){this.selectWord(this.getSelectionStartFromPointer(t.e))}),this.on("tripleclick",function(t){this.selectLine(this.getSelectionStartFromPointer(t.e))})},initMousedownHandler:function(){this.on("mousedown",function(t){var e=this.canvas.getPointer(t.e);this.__mousedownX=e.x,this.__mousedownY=e.y,this.__isMousedown=!0,this.hiddenTextarea&&this.canvas&&this.canvas.wrapperEl.appendChild(this.hiddenTextarea),this.selected&&this.setCursorByClick(t.e),this.isEditing&&(this.__selectionStartOnMouseDown=this.selectionStart,this.initDelayedCursor(!0))})},initMousemoveHandler:function(){this.on("mousemove",function(t){if(this.__isMousedown&&this.isEditing){var e=this.getSelectionStartFromPointer(t.e);e>=this.__selectionStartOnMouseDown?(this.setSelectionStart(this.__selectionStartOnMouseDown),this.setSelectionEnd(e)):(this.setSelectionStart(e),this.setSelectionEnd(this.__selectionStartOnMouseDown))}})},_isObjectMoved:function(t){var e=this.canvas.getPointer(t);return this.__mousedownX!==e.x||this.__mousedownY!==e.y},initMouseupHandler:function(){this.on("mouseup",function(t){this.__isMousedown=!1,this._isObjectMoved(t.e)||(this.__lastSelected&&(this.enterEditing(),this.initDelayedCursor(!0)),this.selected=!0)})},setCursorByClick:function(t){var e=this.getSelectionStartFromPointer(t);t.shiftKey?e<this.selectionStart?(this.setSelectionEnd(this.selectionStart),this.setSelectionStart(e)):this.setSelectionEnd(e):(this.setSelectionStart(e),this.setSelectionEnd(e))},_getLocalRotatedPointer:function(t){var e=this.canvas.getPointer(t),i=new fabric.Point(e.x,e.y),r=new fabric.Point(this.left,this.top),n=fabric.util.rotatePoint(i,r,fabric.util.degreesToRadians(-this.angle));return this.getLocalPointer(t,n)},getSelectionStartFromPointer:function(t){for(var e,i=this._getLocalRotatedPointer(t),r=this.text.split(this._reNewline),n=0,s=0,o=0,a=0,h=0,c=r.length;c>h;h++){o+=this._getHeightOfLine(this.ctx,h)*this.scaleY;var l=this._getWidthOfLine(this.ctx,h,r),u=this._getLineLeftOffset(l);s=u*this.scaleX,this.flipX&&(r[h]=r[h].split("").reverse().join(""));for(var f=0,d=r[h].length;d>f;f++){var g=r[h][f];if(n=s,s+=this._getWidthOfChar(this.ctx,g,h,this.flipX?d-f:f)*this.scaleX,!(o<=i.y||s<=i.x))return this._getNewSelectionStartFromOffset(i,n,s,a+h,d);a++}if(i.y<o)return this._getNewSelectionStartFromOffset(i,n,s,a+h,d)}return"undefined"==typeof e?this.text.length:void 0},_getNewSelectionStartFromOffset:function(t,e,i,r,n){var s=t.x-e,o=i-t.x,a=o>s?0:1,h=r+a;return this.flipX&&(h=n-h),h>this.text.length&&(h=this.text.length),h}}),fabric.util.object.extend(fabric.IText.prototype,{initHiddenTextarea:function(){this.hiddenTextarea=fabric.document.createElement("textarea"),this.hiddenTextarea.setAttribute("autocapitalize","off"),this.hiddenTextarea.style.cssText="position: fixed; bottom: 20px; left: 0px; opacity: 0; width: 0px; height: 0px; z-index: -999;",fabric.document.body.appendChild(this.hiddenTextarea),fabric.util.addListener(this.hiddenTextarea,"keydown",this.onKeyDown.bind(this)),fabric.util.addListener(this.hiddenTextarea,"keypress",this.onKeyPress.bind(this)),fabric.util.addListener(this.hiddenTextarea,"copy",this.copy.bind(this)),fabric.util.addListener(this.hiddenTextarea,"paste",this.paste.bind(this)),!this._clickHandlerInitialized&&this.canvas&&(fabric.util.addListener(this.canvas.upperCanvasEl,"click",this.onClick.bind(this)),this._clickHandlerInitialized=!0)},_keysMap:{8:"removeChars",9:"exitEditing",27:"exitEditing",13:"insertNewline",33:"moveCursorUp",34:"moveCursorDown",35:"moveCursorRight",36:"moveCursorLeft",37:"moveCursorLeft",38:"moveCursorUp",39:"moveCursorRight",40:"moveCursorDown",46:"forwardDelete"},_ctrlKeysMap:{65:"selectAll",88:"cut"},onClick:function(){this.hiddenTextarea&&this.hiddenTextarea.focus()},onKeyDown:function(t){if(this.isEditing){if(t.keyCode in this._keysMap)this[this._keysMap[t.keyCode]](t);else{if(!(t.keyCode in this._ctrlKeysMap&&(t.ctrlKey||t.metaKey)))return;this[this._ctrlKeysMap[t.keyCode]](t)}t.stopImmediatePropagation(),t.preventDefault(),this.canvas&&this.canvas.renderAll()}},forwardDelete:function(t){this.selectionStart===this.selectionEnd&&this.moveCursorRight(t),this.removeChars(t)},copy:function(t){var e=this.getSelectedText(),i=this._getClipboardData(t);i&&i.setData("text",e),this.copiedText=e,this.copiedStyles=this.getSelectionStyles(this.selectionStart,this.selectionEnd)},paste:function(t){var e=null,i=this._getClipboardData(t);e=i?i.getData("text"):this.copiedText,e&&this.insertChars(e)},cut:function(t){this.selectionStart!==this.selectionEnd&&(this.copy(),this.removeChars(t))},_getClipboardData:function(t){return t&&(t.clipboardData||fabric.window.clipboardData)},onKeyPress:function(t){!this.isEditing||t.metaKey||t.ctrlKey||(0!==t.which&&this.insertChars(String.fromCharCode(t.which)),t.stopPropagation())},getDownCursorOffset:function(t,e){var i,r,n=e?this.selectionEnd:this.selectionStart,s=this.text.split(this._reNewline),o=this.text.slice(0,n),a=this.text.slice(n),h=o.slice(o.lastIndexOf("\n")+1),c=a.match(/(.*)\n?/)[1],l=(a.match(/.*\n(.*)\n?/)||{})[1]||"",u=this.get2DCursorLocation(n);if(u.lineIndex===s.length-1||t.metaKey||34===t.keyCode)return this.text.length-n;var f=this._getWidthOfLine(this.ctx,u.lineIndex,s);r=this._getLineLeftOffset(f);for(var d=r,g=u.lineIndex,p=0,v=h.length;v>p;p++)i=h[p],d+=this._getWidthOfChar(this.ctx,i,g,p);var m=this._getIndexOnNextLine(u,l,d,s);return c.length+1+m},_getIndexOnNextLine:function(t,e,i,r){for(var n,s=t.lineIndex+1,o=this._getWidthOfLine(this.ctx,s,r),a=this._getLineLeftOffset(o),h=a,c=0,l=0,u=e.length;u>l;l++){var f=e[l],d=this._getWidthOfChar(this.ctx,f,s,l);if(h+=d,h>i){n=!0;var g=h-d,p=h,v=Math.abs(g-i),m=Math.abs(p-i);c=v>m?l+1:l;break}}return n||(c=e.length),c},moveCursorDown:function(t){this.abortCursorAnimation(),this._currentCursorOpacity=1;var e=this.getDownCursorOffset(t,"right"===this._selectionDirection);t.shiftKey?this.moveCursorDownWithShift(e):this.moveCursorDownWithoutShift(e),this.initDelayedCursor()},moveCursorDownWithoutShift:function(t){this._selectionDirection="right",this.selectionStart+=t,this.selectionStart>this.text.length&&(this.selectionStart=this.text.length),this.selectionEnd=this.selectionStart,this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},swapSelectionPoints:function(){var t=this.selectionEnd;this.selectionEnd=this.selectionStart,this.selectionStart=t},moveCursorDownWithShift:function(t){this.selectionEnd===this.selectionStart&&(this._selectionDirection="right");var e="right"===this._selectionDirection?"selectionEnd":"selectionStart";this[e]+=t,this.selectionEnd<this.selectionStart&&"left"===this._selectionDirection&&(this.swapSelectionPoints(),this._selectionDirection="right"),this.selectionEnd>this.text.length&&(this.selectionEnd=this.text.length),this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},getUpCursorOffset:function(t,e){var i=e?this.selectionEnd:this.selectionStart,r=this.get2DCursorLocation(i);if(0===r.lineIndex||t.metaKey||33===t.keyCode)return i;for(var n,s=this.text.slice(0,i),o=s.slice(s.lastIndexOf("\n")+1),a=(s.match(/\n?(.*)\n.*$/)||{})[1]||"",h=this.text.split(this._reNewline),c=this._getWidthOfLine(this.ctx,r.lineIndex,h),l=this._getLineLeftOffset(c),u=l,f=r.lineIndex,d=0,g=o.length;g>d;d++)n=o[d],u+=this._getWidthOfChar(this.ctx,n,f,d);var p=this._getIndexOnPrevLine(r,a,u,h);return a.length-p+o.length},_getIndexOnPrevLine:function(t,e,i,r){for(var n,s=t.lineIndex-1,o=this._getWidthOfLine(this.ctx,s,r),a=this._getLineLeftOffset(o),h=a,c=0,l=0,u=e.length;u>l;l++){var f=e[l],d=this._getWidthOfChar(this.ctx,f,s,l);if(h+=d,h>i){n=!0;var g=h-d,p=h,v=Math.abs(g-i),m=Math.abs(p-i);c=v>m?l:l-1;break}}return n||(c=e.length-1),c},moveCursorUp:function(t){this.abortCursorAnimation(),this._currentCursorOpacity=1;var e=this.getUpCursorOffset(t,"right"===this._selectionDirection);t.shiftKey?this.moveCursorUpWithShift(e):this.moveCursorUpWithoutShift(e),this.initDelayedCursor()},moveCursorUpWithShift:function(t){this.selectionEnd===this.selectionStart&&(this._selectionDirection="left");var e="right"===this._selectionDirection?"selectionEnd":"selectionStart";this[e]-=t,this.selectionEnd<this.selectionStart&&"right"===this._selectionDirection&&(this.swapSelectionPoints(),this._selectionDirection="left"),this.selectionStart<0&&(this.selectionStart=0),this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},moveCursorUpWithoutShift:function(t){this.selectionStart===this.selectionEnd&&(this.selectionStart-=t),this.selectionStart<0&&(this.selectionStart=0),this.selectionEnd=this.selectionStart,this._selectionDirection="left",this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},moveCursorLeft:function(t){(0!==this.selectionStart||0!==this.selectionEnd)&&(this.abortCursorAnimation(),this._currentCursorOpacity=1,t.shiftKey?this.moveCursorLeftWithShift(t):this.moveCursorLeftWithoutShift(t),this.initDelayedCursor())},_move:function(t,e,i){t.altKey?this[e]=this["findWordBoundary"+i](this[e]):t.metaKey||35===t.keyCode||36===t.keyCode?this[e]=this["findLineBoundary"+i](this[e]):this[e]+="Left"===i?-1:1},_moveLeft:function(t,e){this._move(t,e,"Left")},_moveRight:function(t,e){this._move(t,e,"Right")},moveCursorLeftWithoutShift:function(t){this._selectionDirection="left",this.selectionEnd===this.selectionStart&&this._moveLeft(t,"selectionStart"),this.selectionEnd=this.selectionStart,this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},moveCursorLeftWithShift:function(t){"right"===this._selectionDirection&&this.selectionStart!==this.selectionEnd?this._moveLeft(t,"selectionEnd"):(this._selectionDirection="left",this._moveLeft(t,"selectionStart"),"\n"===this.text.charAt(this.selectionStart)&&this.selectionStart--,this.selectionStart<0&&(this.selectionStart=0)),this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},moveCursorRight:function(t){this.selectionStart>=this.text.length&&this.selectionEnd>=this.text.length||(this.abortCursorAnimation(),this._currentCursorOpacity=1,t.shiftKey?this.moveCursorRightWithShift(t):this.moveCursorRightWithoutShift(t),this.initDelayedCursor())},moveCursorRightWithShift:function(t){"left"===this._selectionDirection&&this.selectionStart!==this.selectionEnd?this._moveRight(t,"selectionStart"):(this._selectionDirection="right",this._moveRight(t,"selectionEnd"),"\n"===this.text.charAt(this.selectionEnd-1)&&this.selectionEnd++,this.selectionEnd>this.text.length&&(this.selectionEnd=this.text.length)),this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},moveCursorRightWithoutShift:function(t){this._selectionDirection="right",this.selectionStart===this.selectionEnd?(this._moveRight(t,"selectionStart"),this.selectionEnd=this.selectionStart):(this.selectionEnd+=this.getNumNewLinesInSelectedText(),this.selectionEnd>this.text.length&&(this.selectionEnd=this.text.length),this.selectionStart=this.selectionEnd),this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},removeChars:function(t){this.selectionStart===this.selectionEnd?this._removeCharsNearCursor(t):this._removeCharsFromTo(this.selectionStart,this.selectionEnd),this.selectionEnd=this.selectionStart,this._removeExtraneousStyles(),this.canvas&&this.canvas.renderAll().renderAll(),this.setCoords(),this.fire("changed"),this.canvas&&this.canvas.fire("text:changed",{target:this})},_removeCharsNearCursor:function(t){if(0!==this.selectionStart)if(t.metaKey){var e=this.findLineBoundaryLeft(this.selectionStart);this._removeCharsFromTo(e,this.selectionStart),this.selectionStart=e}else if(t.altKey){var i=this.findWordBoundaryLeft(this.selectionStart);this._removeCharsFromTo(i,this.selectionStart),this.selectionStart=i}else{var r="\n"===this.text.slice(this.selectionStart-1,this.selectionStart);this.removeStyleObject(r),this.selectionStart--,this.text=this.text.slice(0,this.selectionStart)+this.text.slice(this.selectionStart+1)}}}),fabric.util.object.extend(fabric.IText.prototype,{_setSVGTextLineText:function(t,e,i,r,n,s){this.styles[e]?this._setSVGTextLineChars(t,e,i,r,n,s):this.callSuper("_setSVGTextLineText",t,e,i,r,n)},_setSVGTextLineChars:function(t,e,i,r,n,s){for(var o=0===e||this.useNative?"y":"dy",a=t.split(""),h=0,c=this._getSVGLineLeftOffset(e),l=this._getSVGLineTopOffset(e),u=this._getHeightOfLine(this.ctx,e),f=0,d=a.length;d>f;f++){var g=this.styles[e][f]||{};i.push(this._createTextCharSpan(a[f],g,c,l,o,h));var p=this._getWidthOfChar(this.ctx,a[f],e,f);g.textBackgroundColor&&s.push(this._createTextCharBg(g,c,l,u,p,h)),h+=p}},_getSVGLineLeftOffset:function(t){return this._boundaries&&this._boundaries[t]?fabric.util.toFixed(this._boundaries[t].left,2):0},_getSVGLineTopOffset:function(t){for(var e=0,i=0;t>=i;i++)e+=this._getHeightOfLine(this.ctx,i);return e-this.height/2},_createTextCharBg:function(t,e,i,r,n,s){return['<rect fill="',t.textBackgroundColor,'" transform="translate(',-this.width/2," ",-this.height+r,")",'" x="',e+s,'" y="',i+r,'" width="',n,'" height="',r,'"></rect>'].join("")},_createTextCharSpan:function(t,e,i,r,n,s){var o=this.getSvgStyles.call(fabric.util.object.extend({visible:!0,fill:this.fill,stroke:this.stroke,type:"text"},e));return['<tspan x="',i+s,'" ',n,'="',r,'" ',e.fontFamily?'font-family="'+e.fontFamily.replace(/"/g,"'")+'" ':"",e.fontSize?'font-size="'+e.fontSize+'" ':"",e.fontStyle?'font-style="'+e.fontStyle+'" ':"",e.fontWeight?'font-weight="'+e.fontWeight+'" ':"",e.textDecoration?'text-decoration="'+e.textDecoration+'" ':"",'style="',o,'">',fabric.util.string.escapeXml(t),"</tspan>"].join("")}}),function(){function request(t,e,i){var r=URL.parse(t);r.port||(r.port=0===r.protocol.indexOf("https:")?443:80);var n=443===r.port?HTTPS:HTTP,s=n.request({hostname:r.hostname,port:r.port,path:r.path,method:"GET"},function(t){var r="";e&&t.setEncoding(e),t.on("end",function(){i(r)}),t.on("data",function(e){200===t.statusCode&&(r+=e)})});s.on("error",function(t){fabric.log(t.errno===process.ECONNREFUSED?"ECONNREFUSED: connection refused to "+r.hostname+":"+r.port:t.message)}),s.end()}function requestFs(t,e){var i=require("fs");i.readFile(t,function(t,i){if(t)throw fabric.log(t),t;e(i)})}if("undefined"==typeof document||"undefined"==typeof window){var DOMParser=require("xmldom").DOMParser,URL=require("url"),HTTP=require("http"),HTTPS=require("https"),Canvas=require("canvas"),Image=require("canvas").Image;fabric.util.loadImage=function(t,e,i){function r(r){n.src=new Buffer(r,"binary"),n._src=t,e&&e.call(i,n)}var n=new Image;t&&(t instanceof Buffer||0===t.indexOf("data"))?(n.src=n._src=t,e&&e.call(i,n)):t&&0!==t.indexOf("http")?requestFs(t,r):t?request(t,"binary",r):e&&e.call(i,t)},fabric.loadSVGFromURL=function(t,e,i){t=t.replace(/^\n\s*/,"").replace(/\?.*$/,"").trim(),0!==t.indexOf("http")?requestFs(t,function(t){fabric.loadSVGFromString(t.toString(),e,i)}):request(t,"",function(t){fabric.loadSVGFromString(t,e,i)})},fabric.loadSVGFromString=function(t,e,i){var r=(new DOMParser).parseFromString(t);fabric.parseSVGDocument(r.documentElement,function(t,i){e&&e(t,i)},i)},fabric.util.getScript=function(url,callback){request(url,"",function(body){eval(body),callback&&callback()})},fabric.Image.fromObject=function(t,e){fabric.util.loadImage(t.src,function(i){var r=new fabric.Image(i);r._initConfig(t),r._initFilters(t,function(t){r.filters=t||[],e&&e(r)})})},fabric.createCanvasForNode=function(t,e,i,r){r=r||i;var n=fabric.document.createElement("canvas"),s=new Canvas(t||600,e||600,r);n.style={},n.width=s.width,n.height=s.height;var o=fabric.Canvas||fabric.StaticCanvas,a=new o(n,i);return a.contextContainer=s.getContext("2d"),a.nodeCanvas=s,a.Font=Canvas.Font,a},fabric.StaticCanvas.prototype.createPNGStream=function(){return this.nodeCanvas.createPNGStream()},fabric.StaticCanvas.prototype.createJPEGStream=function(t){return this.nodeCanvas.createJPEGStream(t)};var origSetWidth=fabric.StaticCanvas.prototype.setWidth;fabric.StaticCanvas.prototype.setWidth=function(t,e){return origSetWidth.call(this,t,e),this.nodeCanvas.width=t,this},fabric.Canvas&&(fabric.Canvas.prototype.setWidth=fabric.StaticCanvas.prototype.setWidth);var origSetHeight=fabric.StaticCanvas.prototype.setHeight;fabric.StaticCanvas.prototype.setHeight=function(t,e){return origSetHeight.call(this,t,e),this.nodeCanvas.height=t,this},fabric.Canvas&&(fabric.Canvas.prototype.setHeight=fabric.StaticCanvas.prototype.setHeight)}}();
}).call(this,require("uiHBzj"),require("buffer").Buffer)
},{"buffer":70,"canvas":69,"fs":69,"http":75,"https":79,"jsdom":69,"uiHBzj":81,"url":100,"xmldom":69}],2:[function(require,module,exports){
'use strict';
var RenderNode = require('./..\\famous\\core\\RenderNode');
var Modifier = require('./..\\famous\\core\\Modifier');
var View = require('./..\\famous\\core\\View');
var FlexibleLayout = require('./..\\famous\\views\\FlexibleLayout');
function BoxLayout(options) {
    View.apply(this, arguments);
    if (this.options.margins.length === 0) {
        this.margins = [
            0,
            0,
            0,
            0
        ];
    } else if (this.options.margins.length === 1) {
        this.margins = [
            this.options.margins[0],
            this.options.margins[0],
            this.options.margins[0],
            this.options.margins[0]
        ];
    } else if (this.options.margins.length === 2) {
        this.margins = [
            this.options.margins[0],
            this.options.margins[1],
            this.options.margins[0],
            this.options.margins[1]
        ];
    } else {
        this.margins = this.options.margins;
    }
    this.add(this._createLayout());
}
BoxLayout.prototype = Object.create(View.prototype);
BoxLayout.prototype.constructor = BoxLayout;
BoxLayout.DEFAULT_OPTIONS = { margins: [] };
BoxLayout.prototype._createLayout = function (horizontal) {
    var margins = this.margins;
    var ratios;
    var renderables = [];
    if (margins[1] && margins[3]) {
        ratios = [
            true,
            1,
            true
        ];
        renderables.push(this._createVerticalLayout(0));
        renderables.push(this._createVerticalLayout(1));
        renderables.push(this._createVerticalLayout(2));
    } else if (margins[1]) {
        ratios = [
            1,
            true
        ];
        renderables.push(this._createVerticalLayout(1));
        renderables.push(this._createVerticalLayout(2));
    } else if (margins[3]) {
        ratios = [
            true,
            1
        ];
        renderables.push(this._createVerticalLayout(0));
        renderables.push(this._createVerticalLayout(1));
    } else {
        return this._createVerticalLayout(1);
    }
    var horzLayout = new FlexibleLayout({
            ratios: ratios,
            direction: 0
        });
    horzLayout.sequenceFrom(renderables);
    return horzLayout;
};
BoxLayout.prototype._createVerticalLayout = function (index) {
    var margins = this.margins;
    var ratios;
    var renderables = [];
    if (margins[0] && margins[2]) {
        ratios = [
            true,
            1,
            true
        ];
        renderables.push(this._createRenderable(index));
        renderables.push(this._createRenderable(index + 3));
        renderables.push(this._createRenderable(index + 6));
    } else if (margins[0]) {
        ratios = [
            true,
            1
        ];
        renderables.push(this._createRenderable(index));
        renderables.push(this._createRenderable(index + 3));
    } else if (margins[2]) {
        ratios = [
            1,
            true
        ];
        renderables.push(this._createRenderable(index + 3));
        renderables.push(this._createRenderable(index + 6));
    } else {
        return this._createRenderable(index + 3);
    }
    var vertLayout = new FlexibleLayout({
            ratios: ratios,
            direction: 1
        });
    vertLayout.sequenceFrom(renderables);
    var modifier;
    if (index === 0) {
        modifier = new Modifier({
            size: [
                margins[3],
                undefined
            ]
        });
    } else if (index === 2) {
        modifier = new Modifier({
            size: [
                margins[1],
                undefined
            ]
        });
    }
    if (modifier) {
        var renderNode = new RenderNode(modifier);
        renderNode.add(vertLayout);
        return renderNode;
    } else {
        return vertLayout;
    }
};
BoxLayout.prototype._createRenderable = function (index) {
    var margins = this.margins;
    var size, name;
    switch (index) {
    case 0:
        name = 'topLeft';
        size = [
            margins[3],
            margins[0]
        ];
        break;
    case 1:
        name = 'top';
        size = [
            undefined,
            margins[0]
        ];
        break;
    case 2:
        name = 'topRight';
        size = [
            margins[1],
            margins[0]
        ];
        break;
    case 3:
        name = 'left';
        size = [
            margins[3],
            undefined
        ];
        break;
    case 4:
        name = 'middle';
        size = [
            undefined,
            undefined
        ];
        break;
    case 5:
        name = 'right';
        size = [
            margins[1],
            undefined
        ];
        break;
    case 6:
        name = 'bottomLeft';
        size = [
            margins[3],
            margins[2]
        ];
        break;
    case 7:
        name = 'bottom';
        size = [
            undefined,
            margins[2]
        ];
        break;
    case 8:
        name = 'bottomRight';
        size = [
            margins[1],
            margins[2]
        ];
        break;
    }
    var modifier = new Modifier({ size: size });
    var renderable = new RenderNode(modifier);
    this[name] = renderable;
    return renderable;
};
module.exports = BoxLayout;
},{"./..\\famous\\core\\Modifier":14,"./..\\famous\\core\\RenderNode":16,"./..\\famous\\core\\View":20,"./..\\famous\\views\\FlexibleLayout":50}],3:[function(require,module,exports){

/*
 * classList.js: Cross-browser full element.classList implementation.
 * 2011-06-15
 *
 * By Eli Grey, http://eligrey.com
 * Public Domain.
 * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
 */

/*global self, document, DOMException */

/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/

if (typeof document !== "undefined" && !("classList" in document.createElement("a"))) {

(function (view) {

"use strict";

var
      classListProp = "classList"
    , protoProp = "prototype"
    , elemCtrProto = (view.HTMLElement || view.Element)[protoProp]
    , objCtr = Object
    , strTrim = String[protoProp].trim || function () {
        return this.replace(/^\s+|\s+$/g, "");
    }
    , arrIndexOf = Array[protoProp].indexOf || function (item) {
        var
              i = 0
            , len = this.length
        ;
        for (; i < len; i++) {
            if (i in this && this[i] === item) {
                return i;
            }
        }
        return -1;
    }
    // Vendors: please allow content code to instantiate DOMExceptions
    , DOMEx = function (type, message) {
        this.name = type;
        this.code = DOMException[type];
        this.message = message;
    }
    , checkTokenAndGetIndex = function (classList, token) {
        if (token === "") {
            throw new DOMEx(
                  "SYNTAX_ERR"
                , "An invalid or illegal string was specified"
            );
        }
        if (/\s/.test(token)) {
            throw new DOMEx(
                  "INVALID_CHARACTER_ERR"
                , "String contains an invalid character"
            );
        }
        return arrIndexOf.call(classList, token);
    }
    , ClassList = function (elem) {
        var
              trimmedClasses = strTrim.call(elem.className)
            , classes = trimmedClasses ? trimmedClasses.split(/\s+/) : []
            , i = 0
            , len = classes.length
        ;
        for (; i < len; i++) {
            this.push(classes[i]);
        }
        this._updateClassName = function () {
            elem.className = this.toString();
        };
    }
    , classListProto = ClassList[protoProp] = []
    , classListGetter = function () {
        return new ClassList(this);
    }
;
// Most DOMException implementations don't allow calling DOMException's toString()
// on non-DOMExceptions. Error's toString() is sufficient here.
DOMEx[protoProp] = Error[protoProp];
classListProto.item = function (i) {
    return this[i] || null;
};
classListProto.contains = function (token) {
    token += "";
    return checkTokenAndGetIndex(this, token) !== -1;
};
classListProto.add = function (token) {
    token += "";
    if (checkTokenAndGetIndex(this, token) === -1) {
        this.push(token);
        this._updateClassName();
    }
};
classListProto.remove = function (token) {
    token += "";
    var index = checkTokenAndGetIndex(this, token);
    if (index !== -1) {
        this.splice(index, 1);
        this._updateClassName();
    }
};
classListProto.toggle = function (token) {
    token += "";
    if (checkTokenAndGetIndex(this, token) === -1) {
        this.add(token);
    } else {
        this.remove(token);
    }
};
classListProto.toString = function () {
    return this.join(" ");
};

if (objCtr.defineProperty) {
    var classListPropDesc = {
          get: classListGetter
        , enumerable: true
        , configurable: true
    };
    try {
        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
    } catch (ex) { // IE 8 doesn't support enumerable:true
        if (ex.number === -0x7FF5EC54) {
            classListPropDesc.enumerable = false;
            objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
        }
    }
} else if (objCtr[protoProp].__defineGetter__) {
    elemCtrProto.__defineGetter__(classListProp, classListGetter);
}

}(self));

}

},{}],4:[function(require,module,exports){
if (!Function.prototype.bind) {
    Function.prototype.bind = function (oThis) {
        if (typeof this !== "function") {
            // closest thing possible to the ECMAScript 5 internal IsCallable function
            throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
        }

        var aArgs = Array.prototype.slice.call(arguments, 1),
        fToBind = this,
        fNOP = function () {},
        fBound = function () {
            return fToBind.apply(this instanceof fNOP && oThis
                ? this
                : oThis,
                aArgs.concat(Array.prototype.slice.call(arguments)));
        };

        fNOP.prototype = this.prototype;
        fBound.prototype = new fNOP();

        return fBound;
    };
}

},{}],5:[function(require,module,exports){
require('./classList.js');
require('./functionPrototypeBind.js');
require('./requestAnimationFrame.js');
},{"./classList.js":3,"./functionPrototypeBind.js":4,"./requestAnimationFrame.js":6}],6:[function(require,module,exports){
// adds requestAnimationFrame functionality
// Source: http://strd6.com/2011/05/better-window-requestanimationframe-shim/

window.requestAnimationFrame || (window.requestAnimationFrame =
  window.webkitRequestAnimationFrame ||
  window.mozRequestAnimationFrame    ||
  window.oRequestAnimationFrame      ||
  window.msRequestAnimationFrame     ||
  function(callback, element) {
    return window.setTimeout(function() {
      callback(+new Date());
  }, 1000 / 60);
});

},{}],7:[function(require,module,exports){
var RenderNode = require('./RenderNode');
var EventHandler = require('./EventHandler');
var ElementAllocator = require('./ElementAllocator');
var Transform = require('./Transform');
var Transitionable = require('./..\\transitions\\Transitionable');
var _originZeroZero = [
        0,
        0
    ];
function _getElementSize(element) {
    return [
        element.clientWidth,
        element.clientHeight
    ];
}
function Context(container) {
    this.container = container;
    this._allocator = new ElementAllocator(container);
    this._node = new RenderNode();
    this._eventOutput = new EventHandler();
    this._size = _getElementSize(this.container);
    this._perspectiveState = new Transitionable(0);
    this._perspective = undefined;
    this._nodeContext = {
        allocator: this._allocator,
        transform: Transform.identity,
        opacity: 1,
        origin: _originZeroZero,
        align: null,
        size: this._size
    };
    this._eventOutput.on('resize', function () {
        this.setSize(_getElementSize(this.container));
    }.bind(this));
}
Context.prototype.getAllocator = function getAllocator() {
    return this._allocator;
};
Context.prototype.add = function add(obj) {
    return this._node.add(obj);
};
Context.prototype.migrate = function migrate(container) {
    if (container === this.container)
        return;
    this.container = container;
    this._allocator.migrate(container);
};
Context.prototype.getSize = function getSize() {
    return this._size;
};
Context.prototype.setSize = function setSize(size) {
    if (!size)
        size = _getElementSize(this.container);
    this._size[0] = size[0];
    this._size[1] = size[1];
};
Context.prototype.update = function update(contextParameters) {
    if (contextParameters) {
        if (contextParameters.transform)
            this._nodeContext.transform = contextParameters.transform;
        if (contextParameters.opacity)
            this._nodeContext.opacity = contextParameters.opacity;
        if (contextParameters.origin)
            this._nodeContext.origin = contextParameters.origin;
        if (contextParameters.align)
            this._nodeContext.align = contextParameters.align;
        if (contextParameters.size)
            this._nodeContext.size = contextParameters.size;
    }
    var perspective = this._perspectiveState.get();
    if (perspective !== this._perspective) {
        this.container.style.perspective = perspective ? perspective.toFixed() + 'px' : '';
        this.container.style.webkitPerspective = perspective ? perspective.toFixed() : '';
        this._perspective = perspective;
    }
    this._node.commit(this._nodeContext);
};
Context.prototype.getPerspective = function getPerspective() {
    return this._perspectiveState.get();
};
Context.prototype.setPerspective = function setPerspective(perspective, transition, callback) {
    return this._perspectiveState.set(perspective, transition, callback);
};
Context.prototype.emit = function emit(type, event) {
    return this._eventOutput.emit(type, event);
};
Context.prototype.on = function on(type, handler) {
    return this._eventOutput.on(type, handler);
};
Context.prototype.removeListener = function removeListener(type, handler) {
    return this._eventOutput.removeListener(type, handler);
};
Context.prototype.pipe = function pipe(target) {
    return this._eventOutput.pipe(target);
};
Context.prototype.unpipe = function unpipe(target) {
    return this._eventOutput.unpipe(target);
};
module.exports = Context;
},{"./..\\transitions\\Transitionable":45,"./ElementAllocator":8,"./EventHandler":12,"./RenderNode":16,"./Transform":19}],8:[function(require,module,exports){
function ElementAllocator(container) {
    if (!container)
        container = document.createDocumentFragment();
    this.container = container;
    this.detachedNodes = {};
    this.nodeCount = 0;
}
ElementAllocator.prototype.migrate = function migrate(container) {
    var oldContainer = this.container;
    if (container === oldContainer)
        return;
    if (oldContainer instanceof DocumentFragment) {
        container.appendChild(oldContainer);
    } else {
        while (oldContainer.hasChildNodes()) {
            container.appendChild(oldContainer.removeChild(oldContainer.firstChild));
        }
    }
    this.container = container;
};
ElementAllocator.prototype.allocate = function allocate(type) {
    type = type.toLowerCase();
    if (!(type in this.detachedNodes))
        this.detachedNodes[type] = [];
    var nodeStore = this.detachedNodes[type];
    var result;
    if (nodeStore.length > 0) {
        result = nodeStore.pop();
    } else {
        result = document.createElement(type);
        this.container.appendChild(result);
    }
    this.nodeCount++;
    return result;
};
ElementAllocator.prototype.deallocate = function deallocate(element) {
    var nodeType = element.nodeName.toLowerCase();
    var nodeStore = this.detachedNodes[nodeType];
    nodeStore.push(element);
    this.nodeCount--;
};
ElementAllocator.prototype.getNodeCount = function getNodeCount() {
    return this.nodeCount;
};
module.exports = ElementAllocator;
},{}],9:[function(require,module,exports){
var Context = require('./Context');
var EventHandler = require('./EventHandler');
var OptionsManager = require('./OptionsManager');
var Engine = {};
var contexts = [];
var nextTickQueue = [];
var deferQueue = [];
var lastTime = Date.now();
var frameTime;
var frameTimeLimit;
var loopEnabled = true;
var eventForwarders = {};
var eventHandler = new EventHandler();
var options = {
        containerType: 'div',
        containerClass: 'famous-container',
        fpsCap: undefined,
        runLoop: true
    };
var optionsManager = new OptionsManager(options);
var MAX_DEFER_FRAME_TIME = 10;
Engine.step = function step() {
    var currentTime = Date.now();
    if (frameTimeLimit && currentTime - lastTime < frameTimeLimit)
        return;
    var i = 0;
    frameTime = currentTime - lastTime;
    lastTime = currentTime;
    eventHandler.emit('prerender');
    for (i = 0; i < nextTickQueue.length; i++)
        nextTickQueue[i].call(this);
    nextTickQueue.splice(0);
    while (deferQueue.length && Date.now() - currentTime < MAX_DEFER_FRAME_TIME) {
        deferQueue.shift().call(this);
    }
    for (i = 0; i < contexts.length; i++)
        contexts[i].update();
    eventHandler.emit('postrender');
};
function loop() {
    if (options.runLoop) {
        Engine.step();
        window.requestAnimationFrame(loop);
    } else
        loopEnabled = false;
}
window.requestAnimationFrame(loop);
function handleResize(event) {
    for (var i = 0; i < contexts.length; i++) {
        contexts[i].emit('resize');
    }
    eventHandler.emit('resize');
}
window.addEventListener('resize', handleResize, false);
handleResize();
window.addEventListener('touchmove', function (event) {
    event.preventDefault();
}, true);
Engine.pipe = function pipe(target) {
    if (target.subscribe instanceof Function)
        return target.subscribe(Engine);
    else
        return eventHandler.pipe(target);
};
Engine.unpipe = function unpipe(target) {
    if (target.unsubscribe instanceof Function)
        return target.unsubscribe(Engine);
    else
        return eventHandler.unpipe(target);
};
Engine.on = function on(type, handler) {
    if (!(type in eventForwarders)) {
        eventForwarders[type] = eventHandler.emit.bind(eventHandler, type);
        if (document.body) {
            document.body.addEventListener(type, eventForwarders[type]);
        } else {
            Engine.nextTick(function (type, forwarder) {
                document.body.addEventListener(type, forwarder);
            }.bind(this, type, eventForwarders[type]));
        }
    }
    return eventHandler.on(type, handler);
};
Engine.emit = function emit(type, event) {
    return eventHandler.emit(type, event);
};
Engine.removeListener = function removeListener(type, handler) {
    return eventHandler.removeListener(type, handler);
};
Engine.getFPS = function getFPS() {
    return 1000 / frameTime;
};
Engine.setFPSCap = function setFPSCap(fps) {
    frameTimeLimit = Math.floor(1000 / fps);
};
Engine.getOptions = function getOptions() {
    return optionsManager.getOptions.apply(optionsManager, arguments);
};
Engine.setOptions = function setOptions(options) {
    return optionsManager.setOptions.apply(optionsManager, arguments);
};
Engine.createContext = function createContext(el) {
    var needMountContainer = false;
    if (!el) {
        el = document.createElement(options.containerType);
        el.classList.add(options.containerClass);
        needMountContainer = true;
    }
    var context = new Context(el);
    Engine.registerContext(context);
    if (needMountContainer) {
        Engine.nextTick(function (context, el) {
            document.body.appendChild(el);
            context.emit('resize');
        }.bind(this, context, el));
    }
    return context;
};
Engine.registerContext = function registerContext(context) {
    contexts.push(context);
    return context;
};
Engine.nextTick = function nextTick(fn) {
    nextTickQueue.push(fn);
};
Engine.defer = function defer(fn) {
    deferQueue.push(fn);
};
optionsManager.on('change', function (data) {
    if (data.id === 'fpsCap')
        Engine.setFPSCap(data.value);
    else if (data.id === 'runLoop') {
        if (!loopEnabled && data.value) {
            loopEnabled = true;
            window.requestAnimationFrame(loop);
        }
    }
});
module.exports = Engine;
},{"./Context":7,"./EventHandler":12,"./OptionsManager":15}],10:[function(require,module,exports){
var entities = [];
function get(id) {
    return entities[id];
}
function set(id, entity) {
    entities[id] = entity;
}
function register(entity) {
    var id = entities.length;
    set(id, entity);
    return id;
}
function unregister(id) {
    set(id, null);
}
module.exports = {
    register: register,
    unregister: unregister,
    get: get,
    set: set
};
},{}],11:[function(require,module,exports){
function EventEmitter() {
    this.listeners = {};
    this._owner = this;
}
EventEmitter.prototype.emit = function emit(type, event) {
    var handlers = this.listeners[type];
    if (handlers) {
        for (var i = 0; i < handlers.length; i++) {
            handlers[i].call(this._owner, event);
        }
    }
    return this;
};
EventEmitter.prototype.on = function on(type, handler) {
    if (!(type in this.listeners))
        this.listeners[type] = [];
    var index = this.listeners[type].indexOf(handler);
    if (index < 0)
        this.listeners[type].push(handler);
    return this;
};
EventEmitter.prototype.addListener = EventEmitter.prototype.on;
EventEmitter.prototype.removeListener = function removeListener(type, handler) {
    var index = this.listeners[type].indexOf(handler);
    if (index >= 0)
        this.listeners[type].splice(index, 1);
    return this;
};
EventEmitter.prototype.bindThis = function bindThis(owner) {
    this._owner = owner;
};
module.exports = EventEmitter;
},{}],12:[function(require,module,exports){
var EventEmitter = require('./EventEmitter');
function EventHandler() {
    EventEmitter.apply(this, arguments);
    this.downstream = [];
    this.downstreamFn = [];
    this.upstream = [];
    this.upstreamListeners = {};
}
EventHandler.prototype = Object.create(EventEmitter.prototype);
EventHandler.prototype.constructor = EventHandler;
EventHandler.setInputHandler = function setInputHandler(object, handler) {
    object.trigger = handler.trigger.bind(handler);
    if (handler.subscribe && handler.unsubscribe) {
        object.subscribe = handler.subscribe.bind(handler);
        object.unsubscribe = handler.unsubscribe.bind(handler);
    }
};
EventHandler.setOutputHandler = function setOutputHandler(object, handler) {
    if (handler instanceof EventHandler)
        handler.bindThis(object);
    object.pipe = handler.pipe.bind(handler);
    object.unpipe = handler.unpipe.bind(handler);
    object.on = handler.on.bind(handler);
    object.addListener = object.on;
    object.removeListener = handler.removeListener.bind(handler);
};
EventHandler.prototype.emit = function emit(type, event) {
    EventEmitter.prototype.emit.apply(this, arguments);
    var i = 0;
    for (i = 0; i < this.downstream.length; i++) {
        if (this.downstream[i].trigger)
            this.downstream[i].trigger(type, event);
    }
    for (i = 0; i < this.downstreamFn.length; i++) {
        this.downstreamFn[i](type, event);
    }
    return this;
};
EventHandler.prototype.trigger = EventHandler.prototype.emit;
EventHandler.prototype.pipe = function pipe(target) {
    if (target.subscribe instanceof Function)
        return target.subscribe(this);
    var downstreamCtx = target instanceof Function ? this.downstreamFn : this.downstream;
    var index = downstreamCtx.indexOf(target);
    if (index < 0)
        downstreamCtx.push(target);
    if (target instanceof Function)
        target('pipe', null);
    else if (target.trigger)
        target.trigger('pipe', null);
    return target;
};
EventHandler.prototype.unpipe = function unpipe(target) {
    if (target.unsubscribe instanceof Function)
        return target.unsubscribe(this);
    var downstreamCtx = target instanceof Function ? this.downstreamFn : this.downstream;
    var index = downstreamCtx.indexOf(target);
    if (index >= 0) {
        downstreamCtx.splice(index, 1);
        if (target instanceof Function)
            target('unpipe', null);
        else if (target.trigger)
            target.trigger('unpipe', null);
        return target;
    } else
        return false;
};
EventHandler.prototype.on = function on(type, handler) {
    EventEmitter.prototype.on.apply(this, arguments);
    if (!(type in this.upstreamListeners)) {
        var upstreamListener = this.trigger.bind(this, type);
        this.upstreamListeners[type] = upstreamListener;
        for (var i = 0; i < this.upstream.length; i++) {
            this.upstream[i].on(type, upstreamListener);
        }
    }
    return this;
};
EventHandler.prototype.addListener = EventHandler.prototype.on;
EventHandler.prototype.subscribe = function subscribe(source) {
    var index = this.upstream.indexOf(source);
    if (index < 0) {
        this.upstream.push(source);
        for (var type in this.upstreamListeners) {
            source.on(type, this.upstreamListeners[type]);
        }
    }
    return this;
};
EventHandler.prototype.unsubscribe = function unsubscribe(source) {
    var index = this.upstream.indexOf(source);
    if (index >= 0) {
        this.upstream.splice(index, 1);
        for (var type in this.upstreamListeners) {
            source.removeListener(type, this.upstreamListeners[type]);
        }
    }
    return this;
};
module.exports = EventHandler;
},{"./EventEmitter":11}],13:[function(require,module,exports){
var Context = require('./Context');
var Transform = require('./Transform');
var Surface = require('./Surface');
function Group(options) {
    Surface.call(this, options);
    this._shouldRecalculateSize = false;
    this._container = document.createDocumentFragment();
    this.context = new Context(this._container);
    this.setContent(this._container);
    this._groupSize = [
        undefined,
        undefined
    ];
}
Group.SIZE_ZERO = [
    0,
    0
];
Group.prototype = Object.create(Surface.prototype);
Group.prototype.elementType = 'div';
Group.prototype.elementClass = 'famous-group';
Group.prototype.add = function add() {
    return this.context.add.apply(this.context, arguments);
};
Group.prototype.render = function render() {
    return Surface.prototype.render.call(this);
};
Group.prototype.deploy = function deploy(target) {
    this.context.migrate(target);
};
Group.prototype.recall = function recall(target) {
    this._container = document.createDocumentFragment();
    this.context.migrate(this._container);
};
Group.prototype.commit = function commit(context) {
    var transform = context.transform;
    var origin = context.origin;
    var opacity = context.opacity;
    var size = context.size;
    var result = Surface.prototype.commit.call(this, {
            allocator: context.allocator,
            transform: Transform.thenMove(transform, [
                -origin[0] * size[0],
                -origin[1] * size[1],
                0
            ]),
            opacity: opacity,
            origin: origin,
            size: Group.SIZE_ZERO
        });
    if (size[0] !== this._groupSize[0] || size[1] !== this._groupSize[1]) {
        this._groupSize[0] = size[0];
        this._groupSize[1] = size[1];
        this.context.setSize(size);
    }
    this.context.update({
        transform: Transform.translate(-origin[0] * size[0], -origin[1] * size[1], 0),
        origin: origin,
        size: size
    });
    return result;
};
module.exports = Group;
},{"./Context":7,"./Surface":18,"./Transform":19}],14:[function(require,module,exports){
var Transform = require('./Transform');
var Transitionable = require('./..\\transitions\\Transitionable');
var TransitionableTransform = require('./..\\transitions\\TransitionableTransform');
function Modifier(options) {
    this._transformGetter = null;
    this._opacityGetter = null;
    this._originGetter = null;
    this._alignGetter = null;
    this._sizeGetter = null;
    this._legacyStates = {};
    this._output = {
        transform: Transform.identity,
        opacity: 1,
        origin: null,
        align: null,
        size: null,
        target: null
    };
    if (options) {
        if (options.transform)
            this.transformFrom(options.transform);
        if (options.opacity !== undefined)
            this.opacityFrom(options.opacity);
        if (options.origin)
            this.originFrom(options.origin);
        if (options.align)
            this.alignFrom(options.align);
        if (options.size)
            this.sizeFrom(options.size);
    }
}
Modifier.prototype.transformFrom = function transformFrom(transform) {
    if (transform instanceof Function)
        this._transformGetter = transform;
    else if (transform instanceof Object && transform.get)
        this._transformGetter = transform.get.bind(transform);
    else {
        this._transformGetter = null;
        this._output.transform = transform;
    }
    return this;
};
Modifier.prototype.opacityFrom = function opacityFrom(opacity) {
    if (opacity instanceof Function)
        this._opacityGetter = opacity;
    else if (opacity instanceof Object && opacity.get)
        this._opacityGetter = opacity.get.bind(opacity);
    else {
        this._opacityGetter = null;
        this._output.opacity = opacity;
    }
    return this;
};
Modifier.prototype.originFrom = function originFrom(origin) {
    if (origin instanceof Function)
        this._originGetter = origin;
    else if (origin instanceof Object && origin.get)
        this._originGetter = origin.get.bind(origin);
    else {
        this._originGetter = null;
        this._output.origin = origin;
    }
    return this;
};
Modifier.prototype.alignFrom = function alignFrom(align) {
    if (align instanceof Function)
        this._alignGetter = align;
    else if (align instanceof Object && align.get)
        this._alignGetter = align.get.bind(align);
    else {
        this._alignGetter = null;
        this._output.align = align;
    }
    return this;
};
Modifier.prototype.sizeFrom = function sizeFrom(size) {
    if (size instanceof Function)
        this._sizeGetter = size;
    else if (size instanceof Object && size.get)
        this._sizeGetter = size.get.bind(size);
    else {
        this._sizeGetter = null;
        this._output.size = size;
    }
    return this;
};
Modifier.prototype.setTransform = function setTransform(transform, transition, callback) {
    if (transition || this._legacyStates.transform) {
        if (!this._legacyStates.transform) {
            this._legacyStates.transform = new TransitionableTransform(this._output.transform);
        }
        if (!this._transformGetter)
            this.transformFrom(this._legacyStates.transform);
        this._legacyStates.transform.set(transform, transition, callback);
        return this;
    } else
        return this.transformFrom(transform);
};
Modifier.prototype.setOpacity = function setOpacity(opacity, transition, callback) {
    if (transition || this._legacyStates.opacity) {
        if (!this._legacyStates.opacity) {
            this._legacyStates.opacity = new Transitionable(this._output.opacity);
        }
        if (!this._opacityGetter)
            this.opacityFrom(this._legacyStates.opacity);
        return this._legacyStates.opacity.set(opacity, transition, callback);
    } else
        return this.opacityFrom(opacity);
};
Modifier.prototype.setOrigin = function setOrigin(origin, transition, callback) {
    if (transition || this._legacyStates.origin) {
        if (!this._legacyStates.origin) {
            this._legacyStates.origin = new Transitionable(this._output.origin || [
                0,
                0
            ]);
        }
        if (!this._originGetter)
            this.originFrom(this._legacyStates.origin);
        this._legacyStates.origin.set(origin, transition, callback);
        return this;
    } else
        return this.originFrom(origin);
};
Modifier.prototype.setAlign = function setAlign(align, transition, callback) {
    if (transition || this._legacyStates.align) {
        if (!this._legacyStates.align) {
            this._legacyStates.align = new Transitionable(this._output.align || [
                0,
                0
            ]);
        }
        if (!this._alignGetter)
            this.alignFrom(this._legacyStates.align);
        this._legacyStates.align.set(align, transition, callback);
        return this;
    } else
        return this.alignFrom(align);
};
Modifier.prototype.setSize = function setSize(size, transition, callback) {
    if (size && (transition || this._legacyStates.size)) {
        if (!this._legacyStates.size) {
            this._legacyStates.size = new Transitionable(this._output.size || [
                0,
                0
            ]);
        }
        if (!this._sizeGetter)
            this.sizeFrom(this._legacyStates.size);
        this._legacyStates.size.set(size, transition, callback);
        return this;
    } else
        return this.sizeFrom(size);
};
Modifier.prototype.halt = function halt() {
    if (this._legacyStates.transform)
        this._legacyStates.transform.halt();
    if (this._legacyStates.opacity)
        this._legacyStates.opacity.halt();
    if (this._legacyStates.origin)
        this._legacyStates.origin.halt();
    if (this._legacyStates.align)
        this._legacyStates.align.halt();
    if (this._legacyStates.size)
        this._legacyStates.size.halt();
    this._transformGetter = null;
    this._opacityGetter = null;
    this._originGetter = null;
    this._alignGetter = null;
    this._sizeGetter = null;
};
Modifier.prototype.getTransform = function getTransform() {
    return this._transformGetter();
};
Modifier.prototype.getFinalTransform = function getFinalTransform() {
    return this._legacyStates.transform ? this._legacyStates.transform.getFinal() : this._output.transform;
};
Modifier.prototype.getOpacity = function getOpacity() {
    return this._opacityGetter();
};
Modifier.prototype.getOrigin = function getOrigin() {
    return this._originGetter();
};
Modifier.prototype.getAlign = function getAlign() {
    return this._alignGetter();
};
Modifier.prototype.getSize = function getSize() {
    return this._sizeGetter ? this._sizeGetter() : this._output.size;
};
function _update() {
    if (this._transformGetter)
        this._output.transform = this._transformGetter();
    if (this._opacityGetter)
        this._output.opacity = this._opacityGetter();
    if (this._originGetter)
        this._output.origin = this._originGetter();
    if (this._alignGetter)
        this._output.align = this._alignGetter();
    if (this._sizeGetter)
        this._output.size = this._sizeGetter();
}
Modifier.prototype.modify = function modify(target) {
    _update.call(this);
    this._output.target = target;
    return this._output;
};
module.exports = Modifier;
},{"./..\\transitions\\Transitionable":45,"./..\\transitions\\TransitionableTransform":46,"./Transform":19}],15:[function(require,module,exports){
var EventHandler = require('./EventHandler');
function OptionsManager(value) {
    this._value = value;
    this.eventOutput = null;
}
OptionsManager.patch = function patchObject(source, data) {
    var manager = new OptionsManager(source);
    for (var i = 1; i < arguments.length; i++)
        manager.patch(arguments[i]);
    return source;
};
function _createEventOutput() {
    this.eventOutput = new EventHandler();
    this.eventOutput.bindThis(this);
    EventHandler.setOutputHandler(this, this.eventOutput);
}
OptionsManager.prototype.patch = function patch() {
    var myState = this._value;
    for (var i = 0; i < arguments.length; i++) {
        var data = arguments[i];
        for (var k in data) {
            if (k in myState && (data[k] && data[k].constructor === Object) && (myState[k] && myState[k].constructor === Object)) {
                if (!myState.hasOwnProperty(k))
                    myState[k] = Object.create(myState[k]);
                this.key(k).patch(data[k]);
                if (this.eventOutput)
                    this.eventOutput.emit('change', {
                        id: k,
                        value: this.key(k).value()
                    });
            } else
                this.set(k, data[k]);
        }
    }
    return this;
};
OptionsManager.prototype.setOptions = OptionsManager.prototype.patch;
OptionsManager.prototype.key = function key(identifier) {
    var result = new OptionsManager(this._value[identifier]);
    if (!(result._value instanceof Object) || result._value instanceof Array)
        result._value = {};
    return result;
};
OptionsManager.prototype.get = function get(key) {
    return this._value[key];
};
OptionsManager.prototype.getOptions = OptionsManager.prototype.get;
OptionsManager.prototype.set = function set(key, value) {
    var originalValue = this.get(key);
    this._value[key] = value;
    if (this.eventOutput && value !== originalValue)
        this.eventOutput.emit('change', {
            id: key,
            value: value
        });
    return this;
};
OptionsManager.prototype.value = function value() {
    return this._value;
};
OptionsManager.prototype.on = function on() {
    _createEventOutput.call(this);
    return this.on.apply(this, arguments);
};
OptionsManager.prototype.removeListener = function removeListener() {
    _createEventOutput.call(this);
    return this.removeListener.apply(this, arguments);
};
OptionsManager.prototype.pipe = function pipe() {
    _createEventOutput.call(this);
    return this.pipe.apply(this, arguments);
};
OptionsManager.prototype.unpipe = function unpipe() {
    _createEventOutput.call(this);
    return this.unpipe.apply(this, arguments);
};
module.exports = OptionsManager;
},{"./EventHandler":12}],16:[function(require,module,exports){
var Entity = require('./Entity');
var SpecParser = require('./SpecParser');
function RenderNode(object) {
    this._object = null;
    this._child = null;
    this._hasMultipleChildren = false;
    this._isRenderable = false;
    this._isModifier = false;
    this._resultCache = {};
    this._prevResults = {};
    this._childResult = null;
    if (object)
        this.set(object);
}
RenderNode.prototype.add = function add(child) {
    var childNode = child instanceof RenderNode ? child : new RenderNode(child);
    if (this._child instanceof Array)
        this._child.push(childNode);
    else if (this._child) {
        this._child = [
            this._child,
            childNode
        ];
        this._hasMultipleChildren = true;
        this._childResult = [];
    } else
        this._child = childNode;
    return childNode;
};
RenderNode.prototype.get = function get() {
    return this._object || (this._hasMultipleChildren ? null : this._child ? this._child.get() : null);
};
RenderNode.prototype.set = function set(child) {
    this._childResult = null;
    this._hasMultipleChildren = false;
    this._isRenderable = child.render ? true : false;
    this._isModifier = child.modify ? true : false;
    this._object = child;
    this._child = null;
    if (child instanceof RenderNode)
        return child;
    else
        return this;
};
RenderNode.prototype.getSize = function getSize() {
    var result = null;
    var target = this.get();
    if (target && target.getSize)
        result = target.getSize();
    if (!result && this._child && this._child.getSize)
        result = this._child.getSize();
    return result;
};
function _applyCommit(spec, context, cacheStorage) {
    var result = SpecParser.parse(spec, context);
    var keys = Object.keys(result);
    for (var i = 0; i < keys.length; i++) {
        var id = keys[i];
        var childNode = Entity.get(id);
        var commitParams = result[id];
        commitParams.allocator = context.allocator;
        var commitResult = childNode.commit(commitParams);
        if (commitResult)
            _applyCommit(commitResult, context, cacheStorage);
        else
            cacheStorage[id] = commitParams;
    }
}
RenderNode.prototype.commit = function commit(context) {
    var prevKeys = Object.keys(this._prevResults);
    for (var i = 0; i < prevKeys.length; i++) {
        var id = prevKeys[i];
        if (this._resultCache[id] === undefined) {
            var object = Entity.get(id);
            if (object.cleanup)
                object.cleanup(context.allocator);
        }
    }
    this._prevResults = this._resultCache;
    this._resultCache = {};
    _applyCommit(this.render(), context, this._resultCache);
};
RenderNode.prototype.render = function render() {
    if (this._isRenderable)
        return this._object.render();
    var result = null;
    if (this._hasMultipleChildren) {
        result = this._childResult;
        var children = this._child;
        for (var i = 0; i < children.length; i++) {
            result[i] = children[i].render();
        }
    } else if (this._child)
        result = this._child.render();
    return this._isModifier ? this._object.modify(result) : result;
};
module.exports = RenderNode;
},{"./Entity":10,"./SpecParser":17}],17:[function(require,module,exports){
var Transform = require('./Transform');
function SpecParser() {
    this.result = {};
}
SpecParser._instance = new SpecParser();
SpecParser.parse = function parse(spec, context) {
    return SpecParser._instance.parse(spec, context);
};
SpecParser.prototype.parse = function parse(spec, context) {
    this.reset();
    this._parseSpec(spec, context, Transform.identity);
    return this.result;
};
SpecParser.prototype.reset = function reset() {
    this.result = {};
};
function _vecInContext(v, m) {
    return [
        v[0] * m[0] + v[1] * m[4] + v[2] * m[8],
        v[0] * m[1] + v[1] * m[5] + v[2] * m[9],
        v[0] * m[2] + v[1] * m[6] + v[2] * m[10]
    ];
}
var _originZeroZero = [
        0,
        0
    ];
SpecParser.prototype._parseSpec = function _parseSpec(spec, parentContext, sizeContext) {
    var id;
    var target;
    var transform;
    var opacity;
    var origin;
    var align;
    var size;
    if (typeof spec === 'number') {
        id = spec;
        transform = parentContext.transform;
        align = parentContext.align || parentContext.origin;
        if (parentContext.size && align && (align[0] || align[1])) {
            var alignAdjust = [
                    align[0] * parentContext.size[0],
                    align[1] * parentContext.size[1],
                    0
                ];
            transform = Transform.thenMove(transform, _vecInContext(alignAdjust, sizeContext));
        }
        this.result[id] = {
            transform: transform,
            opacity: parentContext.opacity,
            origin: parentContext.origin || _originZeroZero,
            align: parentContext.align || parentContext.origin || _originZeroZero,
            size: parentContext.size
        };
    } else if (!spec) {
        return;
    } else if (spec instanceof Array) {
        for (var i = 0; i < spec.length; i++) {
            this._parseSpec(spec[i], parentContext, sizeContext);
        }
    } else {
        target = spec.target;
        transform = parentContext.transform;
        opacity = parentContext.opacity;
        origin = parentContext.origin;
        align = parentContext.align;
        size = parentContext.size;
        var nextSizeContext = sizeContext;
        if (spec.opacity !== undefined)
            opacity = parentContext.opacity * spec.opacity;
        if (spec.transform)
            transform = Transform.multiply(parentContext.transform, spec.transform);
        if (spec.origin) {
            origin = spec.origin;
            nextSizeContext = parentContext.transform;
        }
        if (spec.align)
            align = spec.align;
        if (spec.size) {
            var parentSize = parentContext.size;
            size = [
                spec.size[0] !== undefined ? spec.size[0] : parentSize[0],
                spec.size[1] !== undefined ? spec.size[1] : parentSize[1]
            ];
            if (parentSize) {
                if (!align)
                    align = origin;
                if (align && (align[0] || align[1]))
                    transform = Transform.thenMove(transform, _vecInContext([
                        align[0] * parentSize[0],
                        align[1] * parentSize[1],
                        0
                    ], sizeContext));
                if (origin && (origin[0] || origin[1]))
                    transform = Transform.moveThen([
                        -origin[0] * size[0],
                        -origin[1] * size[1],
                        0
                    ], transform);
            }
            nextSizeContext = parentContext.transform;
            origin = null;
            align = null;
        }
        this._parseSpec(target, {
            transform: transform,
            opacity: opacity,
            origin: origin,
            align: align,
            size: size
        }, nextSizeContext);
    }
};
module.exports = SpecParser;
},{"./Transform":19}],18:[function(require,module,exports){
var Entity = require('./Entity');
var EventHandler = require('./EventHandler');
var Transform = require('./Transform');
var devicePixelRatio = window.devicePixelRatio || 1;
var usePrefix = document.createElement('div').style.webkitTransform !== undefined;
function Surface(options) {
    this.options = {};
    this.properties = {};
    this.content = '';
    this.classList = [];
    this.size = null;
    this._classesDirty = true;
    this._stylesDirty = true;
    this._sizeDirty = true;
    this._contentDirty = true;
    this._dirtyClasses = [];
    this._matrix = null;
    this._opacity = 1;
    this._origin = null;
    this._size = null;
    this.eventForwarder = function eventForwarder(event) {
        this.emit(event.type, event);
    }.bind(this);
    this.eventHandler = new EventHandler();
    this.eventHandler.bindThis(this);
    this.id = Entity.register(this);
    if (options)
        this.setOptions(options);
    this._currTarget = null;
}
Surface.prototype.elementType = 'div';
Surface.prototype.elementClass = 'famous-surface';
Surface.prototype.on = function on(type, fn) {
    if (this._currTarget)
        this._currTarget.addEventListener(type, this.eventForwarder);
    this.eventHandler.on(type, fn);
};
Surface.prototype.removeListener = function removeListener(type, fn) {
    this.eventHandler.removeListener(type, fn);
};
Surface.prototype.emit = function emit(type, event) {
    if (event && !event.origin)
        event.origin = this;
    var handled = this.eventHandler.emit(type, event);
    if (handled && event && event.stopPropagation)
        event.stopPropagation();
    return handled;
};
Surface.prototype.pipe = function pipe(target) {
    return this.eventHandler.pipe(target);
};
Surface.prototype.unpipe = function unpipe(target) {
    return this.eventHandler.unpipe(target);
};
Surface.prototype.render = function render() {
    return this.id;
};
Surface.prototype.setProperties = function setProperties(properties) {
    for (var n in properties) {
        this.properties[n] = properties[n];
    }
    this._stylesDirty = true;
};
Surface.prototype.getProperties = function getProperties() {
    return this.properties;
};
Surface.prototype.addClass = function addClass(className) {
    if (this.classList.indexOf(className) < 0) {
        this.classList.push(className);
        this._classesDirty = true;
    }
};
Surface.prototype.removeClass = function removeClass(className) {
    var i = this.classList.indexOf(className);
    if (i >= 0) {
        this._dirtyClasses.push(this.classList.splice(i, 1)[0]);
        this._classesDirty = true;
    }
};
Surface.prototype.setClasses = function setClasses(classList) {
    var i = 0;
    var removal = [];
    for (i = 0; i < this.classList.length; i++) {
        if (classList.indexOf(this.classList[i]) < 0)
            removal.push(this.classList[i]);
    }
    for (i = 0; i < removal.length; i++)
        this.removeClass(removal[i]);
    for (i = 0; i < classList.length; i++)
        this.addClass(classList[i]);
};
Surface.prototype.getClassList = function getClassList() {
    return this.classList;
};
Surface.prototype.setContent = function setContent(content) {
    if (this.content !== content) {
        this.content = content;
        this._contentDirty = true;
    }
};
Surface.prototype.getContent = function getContent() {
    return this.content;
};
Surface.prototype.setOptions = function setOptions(options) {
    if (options.size)
        this.setSize(options.size);
    if (options.classes)
        this.setClasses(options.classes);
    if (options.properties)
        this.setProperties(options.properties);
    if (options.content)
        this.setContent(options.content);
};
function _addEventListeners(target) {
    for (var i in this.eventHandler.listeners) {
        target.addEventListener(i, this.eventForwarder);
    }
}
function _removeEventListeners(target) {
    for (var i in this.eventHandler.listeners) {
        target.removeEventListener(i, this.eventForwarder);
    }
}
function _cleanupClasses(target) {
    for (var i = 0; i < this._dirtyClasses.length; i++)
        target.classList.remove(this._dirtyClasses[i]);
    this._dirtyClasses = [];
}
function _applyStyles(target) {
    for (var n in this.properties) {
        target.style[n] = this.properties[n];
    }
}
function _cleanupStyles(target) {
    for (var n in this.properties) {
        target.style[n] = '';
    }
}
function _formatCSSTransform(m) {
    m[12] = Math.round(m[12] * devicePixelRatio) / devicePixelRatio;
    m[13] = Math.round(m[13] * devicePixelRatio) / devicePixelRatio;
    var result = 'matrix3d(';
    for (var i = 0; i < 15; i++) {
        result += m[i] < 0.000001 && m[i] > -0.000001 ? '0,' : m[i] + ',';
    }
    result += m[15] + ')';
    return result;
}
var _setMatrix;
if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {
    _setMatrix = function (element, matrix) {
        element.style.zIndex = matrix[14] * 1000000 | 0;
        element.style.transform = _formatCSSTransform(matrix);
    };
} else if (usePrefix) {
    _setMatrix = function (element, matrix) {
        element.style.webkitTransform = _formatCSSTransform(matrix);
    };
} else {
    _setMatrix = function (element, matrix) {
        element.style.transform = _formatCSSTransform(matrix);
    };
}
function _formatCSSOrigin(origin) {
    return 100 * origin[0] + '% ' + 100 * origin[1] + '%';
}
var _setOrigin = usePrefix ? function (element, origin) {
        element.style.webkitTransformOrigin = _formatCSSOrigin(origin);
    } : function (element, origin) {
        element.style.transformOrigin = _formatCSSOrigin(origin);
    };
var _setInvisible = usePrefix ? function (element) {
        element.style.webkitTransform = 'scale3d(0.0001,0.0001,1)';
        element.style.opacity = 0;
    } : function (element) {
        element.style.transform = 'scale3d(0.0001,0.0001,1)';
        element.style.opacity = 0;
    };
function _xyNotEquals(a, b) {
    return a && b ? a[0] !== b[0] || a[1] !== b[1] : a !== b;
}
Surface.prototype.setup = function setup(allocator) {
    var target = allocator.allocate(this.elementType);
    if (this.elementClass) {
        if (this.elementClass instanceof Array) {
            for (var i = 0; i < this.elementClass.length; i++) {
                target.classList.add(this.elementClass[i]);
            }
        } else {
            target.classList.add(this.elementClass);
        }
    }
    target.style.display = '';
    _addEventListeners.call(this, target);
    this._currTarget = target;
    this._stylesDirty = true;
    this._classesDirty = true;
    this._sizeDirty = true;
    this._contentDirty = true;
    this._matrix = null;
    this._opacity = undefined;
    this._origin = null;
    this._size = null;
};
Surface.prototype.commit = function commit(context) {
    if (!this._currTarget)
        this.setup(context.allocator);
    var target = this._currTarget;
    var matrix = context.transform;
    var opacity = context.opacity;
    var origin = context.origin;
    var size = context.size;
    if (this._classesDirty) {
        _cleanupClasses.call(this, target);
        var classList = this.getClassList();
        for (var i = 0; i < classList.length; i++)
            target.classList.add(classList[i]);
        this._classesDirty = false;
    }
    if (this._stylesDirty) {
        _applyStyles.call(this, target);
        this._stylesDirty = false;
    }
    if (this._contentDirty) {
        this.deploy(target);
        this.eventHandler.emit('deploy');
        this._contentDirty = false;
    }
    if (this.size) {
        var origSize = size;
        size = [
            this.size[0],
            this.size[1]
        ];
        if (size[0] === undefined && origSize[0])
            size[0] = origSize[0];
        if (size[1] === undefined && origSize[1])
            size[1] = origSize[1];
    }
    if (size[0] === true)
        size[0] = target.clientWidth;
    if (size[1] === true)
        size[1] = target.clientHeight;
    if (_xyNotEquals(this._size, size)) {
        if (!this._size)
            this._size = [
                0,
                0
            ];
        this._size[0] = size[0];
        this._size[1] = size[1];
        this._sizeDirty = true;
    }
    if (!matrix && this._matrix) {
        this._matrix = null;
        this._opacity = 0;
        _setInvisible(target);
        return;
    }
    if (this._opacity !== opacity) {
        this._opacity = opacity;
        target.style.opacity = opacity >= 1 ? '0.999999' : opacity;
    }
    if (_xyNotEquals(this._origin, origin) || Transform.notEquals(this._matrix, matrix) || this._sizeDirty) {
        if (!matrix)
            matrix = Transform.identity;
        this._matrix = matrix;
        var aaMatrix = matrix;
        if (origin) {
            if (!this._origin)
                this._origin = [
                    0,
                    0
                ];
            this._origin[0] = origin[0];
            this._origin[1] = origin[1];
            aaMatrix = Transform.thenMove(matrix, [
                -this._size[0] * origin[0],
                -this._size[1] * origin[1],
                0
            ]);
            _setOrigin(target, origin);
        }
        _setMatrix(target, aaMatrix);
    }
    if (this._sizeDirty) {
        if (this._size) {
            target.style.width = this.size && this.size[0] === true ? '' : this._size[0] + 'px';
            target.style.height = this.size && this.size[1] === true ? '' : this._size[1] + 'px';
        }
        this._sizeDirty = false;
    }
};
Surface.prototype.cleanup = function cleanup(allocator) {
    var i = 0;
    var target = this._currTarget;
    this.eventHandler.emit('recall');
    this.recall(target);
    target.style.display = 'none';
    target.style.width = '';
    target.style.height = '';
    this._size = null;
    _cleanupStyles.call(this, target);
    var classList = this.getClassList();
    _cleanupClasses.call(this, target);
    for (i = 0; i < classList.length; i++)
        target.classList.remove(classList[i]);
    if (this.elementClass) {
        if (this.elementClass instanceof Array) {
            for (i = 0; i < this.elementClass.length; i++) {
                target.classList.remove(this.elementClass[i]);
            }
        } else {
            target.classList.remove(this.elementClass);
        }
    }
    _removeEventListeners.call(this, target);
    this._currTarget = null;
    allocator.deallocate(target);
    _setInvisible(target);
};
Surface.prototype.deploy = function deploy(target) {
    var content = this.getContent();
    if (content instanceof Node) {
        while (target.hasChildNodes())
            target.removeChild(target.firstChild);
        target.appendChild(content);
    } else
        target.innerHTML = content;
};
Surface.prototype.recall = function recall(target) {
    var df = document.createDocumentFragment();
    while (target.hasChildNodes())
        df.appendChild(target.firstChild);
    this.setContent(df);
};
Surface.prototype.getSize = function getSize(actual) {
    return actual ? this._size : this.size || this._size;
};
Surface.prototype.setSize = function setSize(size) {
    this.size = size ? [
        size[0],
        size[1]
    ] : null;
    this._sizeDirty = true;
};
module.exports = Surface;
},{"./Entity":10,"./EventHandler":12,"./Transform":19}],19:[function(require,module,exports){
var Transform = {};
Transform.precision = 0.000001;
Transform.identity = [
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1
];
Transform.multiply4x4 = function multiply4x4(a, b) {
    return [
        a[0] * b[0] + a[4] * b[1] + a[8] * b[2] + a[12] * b[3],
        a[1] * b[0] + a[5] * b[1] + a[9] * b[2] + a[13] * b[3],
        a[2] * b[0] + a[6] * b[1] + a[10] * b[2] + a[14] * b[3],
        a[3] * b[0] + a[7] * b[1] + a[11] * b[2] + a[15] * b[3],
        a[0] * b[4] + a[4] * b[5] + a[8] * b[6] + a[12] * b[7],
        a[1] * b[4] + a[5] * b[5] + a[9] * b[6] + a[13] * b[7],
        a[2] * b[4] + a[6] * b[5] + a[10] * b[6] + a[14] * b[7],
        a[3] * b[4] + a[7] * b[5] + a[11] * b[6] + a[15] * b[7],
        a[0] * b[8] + a[4] * b[9] + a[8] * b[10] + a[12] * b[11],
        a[1] * b[8] + a[5] * b[9] + a[9] * b[10] + a[13] * b[11],
        a[2] * b[8] + a[6] * b[9] + a[10] * b[10] + a[14] * b[11],
        a[3] * b[8] + a[7] * b[9] + a[11] * b[10] + a[15] * b[11],
        a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12] * b[15],
        a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13] * b[15],
        a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14] * b[15],
        a[3] * b[12] + a[7] * b[13] + a[11] * b[14] + a[15] * b[15]
    ];
};
Transform.multiply = function multiply(a, b) {
    return [
        a[0] * b[0] + a[4] * b[1] + a[8] * b[2],
        a[1] * b[0] + a[5] * b[1] + a[9] * b[2],
        a[2] * b[0] + a[6] * b[1] + a[10] * b[2],
        0,
        a[0] * b[4] + a[4] * b[5] + a[8] * b[6],
        a[1] * b[4] + a[5] * b[5] + a[9] * b[6],
        a[2] * b[4] + a[6] * b[5] + a[10] * b[6],
        0,
        a[0] * b[8] + a[4] * b[9] + a[8] * b[10],
        a[1] * b[8] + a[5] * b[9] + a[9] * b[10],
        a[2] * b[8] + a[6] * b[9] + a[10] * b[10],
        0,
        a[0] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12],
        a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13],
        a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14],
        1
    ];
};
Transform.thenMove = function thenMove(m, t) {
    if (!t[2])
        t[2] = 0;
    return [
        m[0],
        m[1],
        m[2],
        0,
        m[4],
        m[5],
        m[6],
        0,
        m[8],
        m[9],
        m[10],
        0,
        m[12] + t[0],
        m[13] + t[1],
        m[14] + t[2],
        1
    ];
};
Transform.moveThen = function moveThen(v, m) {
    if (!v[2])
        v[2] = 0;
    var t0 = v[0] * m[0] + v[1] * m[4] + v[2] * m[8];
    var t1 = v[0] * m[1] + v[1] * m[5] + v[2] * m[9];
    var t2 = v[0] * m[2] + v[1] * m[6] + v[2] * m[10];
    return Transform.thenMove(m, [
        t0,
        t1,
        t2
    ]);
};
Transform.translate = function translate(x, y, z) {
    if (z === undefined)
        z = 0;
    return [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        x,
        y,
        z,
        1
    ];
};
Transform.thenScale = function thenScale(m, s) {
    return [
        s[0] * m[0],
        s[1] * m[1],
        s[2] * m[2],
        0,
        s[0] * m[4],
        s[1] * m[5],
        s[2] * m[6],
        0,
        s[0] * m[8],
        s[1] * m[9],
        s[2] * m[10],
        0,
        s[0] * m[12],
        s[1] * m[13],
        s[2] * m[14],
        1
    ];
};
Transform.scale = function scale(x, y, z) {
    if (z === undefined)
        z = 1;
    return [
        x,
        0,
        0,
        0,
        0,
        y,
        0,
        0,
        0,
        0,
        z,
        0,
        0,
        0,
        0,
        1
    ];
};
Transform.rotateX = function rotateX(theta) {
    var cosTheta = Math.cos(theta);
    var sinTheta = Math.sin(theta);
    return [
        1,
        0,
        0,
        0,
        0,
        cosTheta,
        sinTheta,
        0,
        0,
        -sinTheta,
        cosTheta,
        0,
        0,
        0,
        0,
        1
    ];
};
Transform.rotateY = function rotateY(theta) {
    var cosTheta = Math.cos(theta);
    var sinTheta = Math.sin(theta);
    return [
        cosTheta,
        0,
        -sinTheta,
        0,
        0,
        1,
        0,
        0,
        sinTheta,
        0,
        cosTheta,
        0,
        0,
        0,
        0,
        1
    ];
};
Transform.rotateZ = function rotateZ(theta) {
    var cosTheta = Math.cos(theta);
    var sinTheta = Math.sin(theta);
    return [
        cosTheta,
        sinTheta,
        0,
        0,
        -sinTheta,
        cosTheta,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1
    ];
};
Transform.rotate = function rotate(phi, theta, psi) {
    var cosPhi = Math.cos(phi);
    var sinPhi = Math.sin(phi);
    var cosTheta = Math.cos(theta);
    var sinTheta = Math.sin(theta);
    var cosPsi = Math.cos(psi);
    var sinPsi = Math.sin(psi);
    var result = [
            cosTheta * cosPsi,
            cosPhi * sinPsi + sinPhi * sinTheta * cosPsi,
            sinPhi * sinPsi - cosPhi * sinTheta * cosPsi,
            0,
            -cosTheta * sinPsi,
            cosPhi * cosPsi - sinPhi * sinTheta * sinPsi,
            sinPhi * cosPsi + cosPhi * sinTheta * sinPsi,
            0,
            sinTheta,
            -sinPhi * cosTheta,
            cosPhi * cosTheta,
            0,
            0,
            0,
            0,
            1
        ];
    return result;
};
Transform.rotateAxis = function rotateAxis(v, theta) {
    var sinTheta = Math.sin(theta);
    var cosTheta = Math.cos(theta);
    var verTheta = 1 - cosTheta;
    var xxV = v[0] * v[0] * verTheta;
    var xyV = v[0] * v[1] * verTheta;
    var xzV = v[0] * v[2] * verTheta;
    var yyV = v[1] * v[1] * verTheta;
    var yzV = v[1] * v[2] * verTheta;
    var zzV = v[2] * v[2] * verTheta;
    var xs = v[0] * sinTheta;
    var ys = v[1] * sinTheta;
    var zs = v[2] * sinTheta;
    var result = [
            xxV + cosTheta,
            xyV + zs,
            xzV - ys,
            0,
            xyV - zs,
            yyV + cosTheta,
            yzV + xs,
            0,
            xzV + ys,
            yzV - xs,
            zzV + cosTheta,
            0,
            0,
            0,
            0,
            1
        ];
    return result;
};
Transform.aboutOrigin = function aboutOrigin(v, m) {
    var t0 = v[0] - (v[0] * m[0] + v[1] * m[4] + v[2] * m[8]);
    var t1 = v[1] - (v[0] * m[1] + v[1] * m[5] + v[2] * m[9]);
    var t2 = v[2] - (v[0] * m[2] + v[1] * m[6] + v[2] * m[10]);
    return Transform.thenMove(m, [
        t0,
        t1,
        t2
    ]);
};
Transform.skew = function skew(phi, theta, psi) {
    return [
        1,
        0,
        0,
        0,
        Math.tan(psi),
        1,
        0,
        0,
        Math.tan(theta),
        Math.tan(phi),
        1,
        0,
        0,
        0,
        0,
        1
    ];
};
Transform.skewX = function skewX(angle) {
    return [
        1,
        0,
        0,
        0,
        Math.tan(angle),
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1
    ];
};
Transform.skewY = function skewY(angle) {
    return [
        1,
        Math.tan(angle),
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1
    ];
};
Transform.perspective = function perspective(focusZ) {
    return [
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        -1 / focusZ,
        0,
        0,
        0,
        1
    ];
};
Transform.getTranslate = function getTranslate(m) {
    return [
        m[12],
        m[13],
        m[14]
    ];
};
Transform.inverse = function inverse(m) {
    var c0 = m[5] * m[10] - m[6] * m[9];
    var c1 = m[4] * m[10] - m[6] * m[8];
    var c2 = m[4] * m[9] - m[5] * m[8];
    var c4 = m[1] * m[10] - m[2] * m[9];
    var c5 = m[0] * m[10] - m[2] * m[8];
    var c6 = m[0] * m[9] - m[1] * m[8];
    var c8 = m[1] * m[6] - m[2] * m[5];
    var c9 = m[0] * m[6] - m[2] * m[4];
    var c10 = m[0] * m[5] - m[1] * m[4];
    var detM = m[0] * c0 - m[1] * c1 + m[2] * c2;
    var invD = 1 / detM;
    var result = [
            invD * c0,
            -invD * c4,
            invD * c8,
            0,
            -invD * c1,
            invD * c5,
            -invD * c9,
            0,
            invD * c2,
            -invD * c6,
            invD * c10,
            0,
            0,
            0,
            0,
            1
        ];
    result[12] = -m[12] * result[0] - m[13] * result[4] - m[14] * result[8];
    result[13] = -m[12] * result[1] - m[13] * result[5] - m[14] * result[9];
    result[14] = -m[12] * result[2] - m[13] * result[6] - m[14] * result[10];
    return result;
};
Transform.transpose = function transpose(m) {
    return [
        m[0],
        m[4],
        m[8],
        m[12],
        m[1],
        m[5],
        m[9],
        m[13],
        m[2],
        m[6],
        m[10],
        m[14],
        m[3],
        m[7],
        m[11],
        m[15]
    ];
};
function _normSquared(v) {
    return v.length === 2 ? v[0] * v[0] + v[1] * v[1] : v[0] * v[0] + v[1] * v[1] + v[2] * v[2];
}
function _norm(v) {
    return Math.sqrt(_normSquared(v));
}
function _sign(n) {
    return n < 0 ? -1 : 1;
}
Transform.interpret = function interpret(M) {
    var x = [
            M[0],
            M[1],
            M[2]
        ];
    var sgn = _sign(x[0]);
    var xNorm = _norm(x);
    var v = [
            x[0] + sgn * xNorm,
            x[1],
            x[2]
        ];
    var mult = 2 / _normSquared(v);
    if (mult >= Infinity) {
        return {
            translate: Transform.getTranslate(M),
            rotate: [
                0,
                0,
                0
            ],
            scale: [
                0,
                0,
                0
            ],
            skew: [
                0,
                0,
                0
            ]
        };
    }
    var Q1 = [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
        ];
    Q1[0] = 1 - mult * v[0] * v[0];
    Q1[5] = 1 - mult * v[1] * v[1];
    Q1[10] = 1 - mult * v[2] * v[2];
    Q1[1] = -mult * v[0] * v[1];
    Q1[2] = -mult * v[0] * v[2];
    Q1[6] = -mult * v[1] * v[2];
    Q1[4] = Q1[1];
    Q1[8] = Q1[2];
    Q1[9] = Q1[6];
    var MQ1 = Transform.multiply(Q1, M);
    var x2 = [
            MQ1[5],
            MQ1[6]
        ];
    var sgn2 = _sign(x2[0]);
    var x2Norm = _norm(x2);
    var v2 = [
            x2[0] + sgn2 * x2Norm,
            x2[1]
        ];
    var mult2 = 2 / _normSquared(v2);
    var Q2 = [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
        ];
    Q2[5] = 1 - mult2 * v2[0] * v2[0];
    Q2[10] = 1 - mult2 * v2[1] * v2[1];
    Q2[6] = -mult2 * v2[0] * v2[1];
    Q2[9] = Q2[6];
    var Q = Transform.multiply(Q2, Q1);
    var R = Transform.multiply(Q, M);
    var remover = Transform.scale(R[0] < 0 ? -1 : 1, R[5] < 0 ? -1 : 1, R[10] < 0 ? -1 : 1);
    R = Transform.multiply(R, remover);
    Q = Transform.multiply(remover, Q);
    var result = {};
    result.translate = Transform.getTranslate(M);
    result.rotate = [
        Math.atan2(-Q[6], Q[10]),
        Math.asin(Q[2]),
        Math.atan2(-Q[1], Q[0])
    ];
    if (!result.rotate[0]) {
        result.rotate[0] = 0;
        result.rotate[2] = Math.atan2(Q[4], Q[5]);
    }
    result.scale = [
        R[0],
        R[5],
        R[10]
    ];
    result.skew = [
        Math.atan2(R[9], result.scale[2]),
        Math.atan2(R[8], result.scale[2]),
        Math.atan2(R[4], result.scale[0])
    ];
    if (Math.abs(result.rotate[0]) + Math.abs(result.rotate[2]) > 1.5 * Math.PI) {
        result.rotate[1] = Math.PI - result.rotate[1];
        if (result.rotate[1] > Math.PI)
            result.rotate[1] -= 2 * Math.PI;
        if (result.rotate[1] < -Math.PI)
            result.rotate[1] += 2 * Math.PI;
        if (result.rotate[0] < 0)
            result.rotate[0] += Math.PI;
        else
            result.rotate[0] -= Math.PI;
        if (result.rotate[2] < 0)
            result.rotate[2] += Math.PI;
        else
            result.rotate[2] -= Math.PI;
    }
    return result;
};
Transform.average = function average(M1, M2, t) {
    t = t === undefined ? 0.5 : t;
    var specM1 = Transform.interpret(M1);
    var specM2 = Transform.interpret(M2);
    var specAvg = {
            translate: [
                0,
                0,
                0
            ],
            rotate: [
                0,
                0,
                0
            ],
            scale: [
                0,
                0,
                0
            ],
            skew: [
                0,
                0,
                0
            ]
        };
    for (var i = 0; i < 3; i++) {
        specAvg.translate[i] = (1 - t) * specM1.translate[i] + t * specM2.translate[i];
        specAvg.rotate[i] = (1 - t) * specM1.rotate[i] + t * specM2.rotate[i];
        specAvg.scale[i] = (1 - t) * specM1.scale[i] + t * specM2.scale[i];
        specAvg.skew[i] = (1 - t) * specM1.skew[i] + t * specM2.skew[i];
    }
    return Transform.build(specAvg);
};
Transform.build = function build(spec) {
    var scaleMatrix = Transform.scale(spec.scale[0], spec.scale[1], spec.scale[2]);
    var skewMatrix = Transform.skew(spec.skew[0], spec.skew[1], spec.skew[2]);
    var rotateMatrix = Transform.rotate(spec.rotate[0], spec.rotate[1], spec.rotate[2]);
    return Transform.thenMove(Transform.multiply(Transform.multiply(rotateMatrix, skewMatrix), scaleMatrix), spec.translate);
};
Transform.equals = function equals(a, b) {
    return !Transform.notEquals(a, b);
};
Transform.notEquals = function notEquals(a, b) {
    if (a === b)
        return false;
    return !(a && b) || a[12] !== b[12] || a[13] !== b[13] || a[14] !== b[14] || a[0] !== b[0] || a[1] !== b[1] || a[2] !== b[2] || a[4] !== b[4] || a[5] !== b[5] || a[6] !== b[6] || a[8] !== b[8] || a[9] !== b[9] || a[10] !== b[10];
};
Transform.normalizeRotation = function normalizeRotation(rotation) {
    var result = rotation.slice(0);
    if (result[0] === Math.PI * 0.5 || result[0] === -Math.PI * 0.5) {
        result[0] = -result[0];
        result[1] = Math.PI - result[1];
        result[2] -= Math.PI;
    }
    if (result[0] > Math.PI * 0.5) {
        result[0] = result[0] - Math.PI;
        result[1] = Math.PI - result[1];
        result[2] -= Math.PI;
    }
    if (result[0] < -Math.PI * 0.5) {
        result[0] = result[0] + Math.PI;
        result[1] = -Math.PI - result[1];
        result[2] -= Math.PI;
    }
    while (result[1] < -Math.PI)
        result[1] += 2 * Math.PI;
    while (result[1] >= Math.PI)
        result[1] -= 2 * Math.PI;
    while (result[2] < -Math.PI)
        result[2] += 2 * Math.PI;
    while (result[2] >= Math.PI)
        result[2] -= 2 * Math.PI;
    return result;
};
Transform.inFront = [
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0.001,
    1
];
Transform.behind = [
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    -0.001,
    1
];
module.exports = Transform;
},{}],20:[function(require,module,exports){
var EventHandler = require('./EventHandler');
var OptionsManager = require('./OptionsManager');
var RenderNode = require('./RenderNode');
function View(options) {
    this._node = new RenderNode();
    this._eventInput = new EventHandler();
    this._eventOutput = new EventHandler();
    EventHandler.setInputHandler(this, this._eventInput);
    EventHandler.setOutputHandler(this, this._eventOutput);
    this.options = Object.create(this.constructor.DEFAULT_OPTIONS || View.DEFAULT_OPTIONS);
    this._optionsManager = new OptionsManager(this.options);
    if (options)
        this.setOptions(options);
}
View.DEFAULT_OPTIONS = {};
View.prototype.getOptions = function getOptions() {
    return this._optionsManager.value();
};
View.prototype.setOptions = function setOptions(options) {
    this._optionsManager.patch(options);
};
View.prototype.add = function add() {
    return this._node.add.apply(this._node, arguments);
};
View.prototype._add = View.prototype.add;
View.prototype.render = function render() {
    return this._node.render();
};
View.prototype.getSize = function getSize() {
    if (this._node && this._node.getSize) {
        return this._node.getSize.apply(this._node, arguments) || this.options.size;
    } else
        return this.options.size;
};
module.exports = View;
},{"./EventHandler":12,"./OptionsManager":15,"./RenderNode":16}],21:[function(require,module,exports){
function ViewSequence(options) {
    if (!options)
        options = [];
    if (options instanceof Array)
        options = { array: options };
    this._ = null;
    this.index = options.index || 0;
    if (options.array)
        this._ = new this.constructor.Backing(options.array);
    else if (options._)
        this._ = options._;
    if (this.index === this._.firstIndex)
        this._.firstNode = this;
    if (this.index === this._.firstIndex + this._.array.length - 1)
        this._.lastNode = this;
    if (options.loop !== undefined)
        this._.loop = options.loop;
    this._previousNode = null;
    this._nextNode = null;
}
ViewSequence.Backing = function Backing(array) {
    this.array = array;
    this.firstIndex = 0;
    this.loop = false;
    this.firstNode = null;
    this.lastNode = null;
};
ViewSequence.Backing.prototype.getValue = function getValue(i) {
    var _i = i - this.firstIndex;
    if (_i < 0 || _i >= this.array.length)
        return null;
    return this.array[_i];
};
ViewSequence.Backing.prototype.setValue = function setValue(i, value) {
    this.array[i - this.firstIndex] = value;
};
ViewSequence.Backing.prototype.reindex = function reindex(start, removeCount, insertCount) {
    if (!this.array[0])
        return;
    var i = 0;
    var index = this.firstIndex;
    var indexShiftAmount = insertCount - removeCount;
    var node = this.firstNode;
    while (index < start - 1) {
        node = node.getNext();
        index++;
    }
    var spliceStartNode = node;
    for (i = 0; i < removeCount; i++) {
        node = node.getNext();
        if (node)
            node._previousNode = spliceStartNode;
    }
    var spliceResumeNode = node ? node.getNext() : null;
    spliceStartNode._nextNode = null;
    node = spliceStartNode;
    for (i = 0; i < insertCount; i++)
        node = node.getNext();
    index += insertCount;
    if (node !== spliceResumeNode) {
        node._nextNode = spliceResumeNode;
        if (spliceResumeNode)
            spliceResumeNode._previousNode = node;
    }
    if (spliceResumeNode) {
        node = spliceResumeNode;
        index++;
        while (node && index < this.array.length + this.firstIndex) {
            if (node._nextNode)
                node.index += indexShiftAmount;
            else
                node.index = index;
            node = node.getNext();
            index++;
        }
    }
};
ViewSequence.prototype.getPrevious = function getPrevious() {
    if (this.index === this._.firstIndex) {
        if (this._.loop) {
            this._previousNode = this._.lastNode || new this.constructor({
                _: this._,
                index: this._.firstIndex + this._.array.length - 1
            });
            this._previousNode._nextNode = this;
        } else {
            this._previousNode = null;
        }
    } else if (!this._previousNode) {
        this._previousNode = new this.constructor({
            _: this._,
            index: this.index - 1
        });
        this._previousNode._nextNode = this;
    }
    return this._previousNode;
};
ViewSequence.prototype.getNext = function getNext() {
    if (this.index === this._.firstIndex + this._.array.length - 1) {
        if (this._.loop) {
            this._nextNode = this._.firstNode || new this.constructor({
                _: this._,
                index: this._.firstIndex
            });
            this._nextNode._previousNode = this;
        } else {
            this._nextNode = null;
        }
    } else if (!this._nextNode) {
        this._nextNode = new this.constructor({
            _: this._,
            index: this.index + 1
        });
        this._nextNode._previousNode = this;
    }
    return this._nextNode;
};
ViewSequence.prototype.getIndex = function getIndex() {
    return this.index;
};
ViewSequence.prototype.toString = function toString() {
    return '' + this.index;
};
ViewSequence.prototype.unshift = function unshift(value) {
    this._.array.unshift.apply(this._.array, arguments);
    this._.firstIndex -= arguments.length;
};
ViewSequence.prototype.push = function push(value) {
    this._.array.push.apply(this._.array, arguments);
};
ViewSequence.prototype.splice = function splice(index, howMany) {
    var values = Array.prototype.slice.call(arguments, 2);
    this._.array.splice.apply(this._.array, [
        index - this._.firstIndex,
        howMany
    ].concat(values));
    this._.reindex(index, howMany, values.length);
};
ViewSequence.prototype.swap = function swap(other) {
    var otherValue = other.get();
    var myValue = this.get();
    this._.setValue(this.index, otherValue);
    this._.setValue(other.index, myValue);
    var myPrevious = this._previousNode;
    var myNext = this._nextNode;
    var myIndex = this.index;
    var otherPrevious = other._previousNode;
    var otherNext = other._nextNode;
    var otherIndex = other.index;
    this.index = otherIndex;
    this._previousNode = otherPrevious === this ? other : otherPrevious;
    if (this._previousNode)
        this._previousNode._nextNode = this;
    this._nextNode = otherNext === this ? other : otherNext;
    if (this._nextNode)
        this._nextNode._previousNode = this;
    other.index = myIndex;
    other._previousNode = myPrevious === other ? this : myPrevious;
    if (other._previousNode)
        other._previousNode._nextNode = other;
    other._nextNode = myNext === other ? this : myNext;
    if (other._nextNode)
        other._nextNode._previousNode = other;
    if (this.index === this._.firstIndex)
        this._.firstNode = this;
    else if (this.index === this._.firstIndex + this._.array.length - 1)
        this._.lastNode = this;
    if (other.index === this._.firstIndex)
        this._.firstNode = other;
    else if (other.index === this._.firstIndex + this._.array.length - 1)
        this._.lastNode = other;
};
ViewSequence.prototype.get = function get() {
    return this._.getValue(this.index);
};
ViewSequence.prototype.getSize = function getSize() {
    var target = this.get();
    return target ? target.getSize() : null;
};
ViewSequence.prototype.render = function render() {
    var target = this.get();
    return target ? target.render.apply(target, arguments) : null;
};
module.exports = ViewSequence;
},{}],22:[function(require,module,exports){
var EventHandler = require('./..\\core\\EventHandler');
function GenericSync(syncs, options) {
    this._eventInput = new EventHandler();
    this._eventOutput = new EventHandler();
    EventHandler.setInputHandler(this, this._eventInput);
    EventHandler.setOutputHandler(this, this._eventOutput);
    this._syncs = {};
    if (syncs)
        this.addSync(syncs);
    if (options)
        this.setOptions(options);
}
GenericSync.DIRECTION_X = 0;
GenericSync.DIRECTION_Y = 1;
GenericSync.DIRECTION_Z = 2;
var registry = {};
GenericSync.register = function register(syncObject) {
    for (var key in syncObject) {
        if (registry[key]) {
            if (registry[key] === syncObject[key])
                return;
            else
                throw new Error('this key is registered to a different sync class');
        } else
            registry[key] = syncObject[key];
    }
};
GenericSync.prototype.setOptions = function (options) {
    for (var key in this._syncs) {
        this._syncs[key].setOptions(options);
    }
};
GenericSync.prototype.pipeSync = function pipeToSync(key) {
    var sync = this._syncs[key];
    this._eventInput.pipe(sync);
    sync.pipe(this._eventOutput);
};
GenericSync.prototype.unpipeSync = function unpipeFromSync(key) {
    var sync = this._syncs[key];
    this._eventInput.unpipe(sync);
    sync.unpipe(this._eventOutput);
};
function _addSingleSync(key, options) {
    if (!registry[key])
        return;
    this._syncs[key] = new registry[key](options);
    this.pipeSync(key);
}
GenericSync.prototype.addSync = function addSync(syncs) {
    if (syncs instanceof Array)
        for (var i = 0; i < syncs.length; i++)
            _addSingleSync.call(this, syncs[i]);
    else if (syncs instanceof Object)
        for (var key in syncs)
            _addSingleSync.call(this, key, syncs[key]);
};
module.exports = GenericSync;
},{"./..\\core\\EventHandler":12}],23:[function(require,module,exports){
var EventHandler = require('./..\\core\\EventHandler');
function MouseSync(options) {
    this.options = Object.create(MouseSync.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    this._eventInput = new EventHandler();
    this._eventOutput = new EventHandler();
    EventHandler.setInputHandler(this, this._eventInput);
    EventHandler.setOutputHandler(this, this._eventOutput);
    this._eventInput.on('mousedown', _handleStart.bind(this));
    this._eventInput.on('mousemove', _handleMove.bind(this));
    this._eventInput.on('mouseup', _handleEnd.bind(this));
    if (this.options.propogate)
        this._eventInput.on('mouseleave', _handleLeave.bind(this));
    else
        this._eventInput.on('mouseleave', _handleEnd.bind(this));
    this._payload = {
        delta: null,
        position: null,
        velocity: null,
        clientX: 0,
        clientY: 0,
        offsetX: 0,
        offsetY: 0
    };
    this._position = null;
    this._prevCoord = undefined;
    this._prevTime = undefined;
    this._down = false;
    this._moved = false;
}
MouseSync.DEFAULT_OPTIONS = {
    direction: undefined,
    rails: false,
    scale: 1,
    propogate: true
};
MouseSync.DIRECTION_X = 0;
MouseSync.DIRECTION_Y = 1;
var MINIMUM_TICK_TIME = 8;
var _now = Date.now;
function _handleStart(event) {
    var delta;
    var velocity;
    event.preventDefault();
    var x = event.clientX;
    var y = event.clientY;
    this._prevCoord = [
        x,
        y
    ];
    this._prevTime = _now();
    this._down = true;
    this._move = false;
    if (this.options.direction !== undefined) {
        this._position = 0;
        delta = 0;
        velocity = 0;
    } else {
        this._position = [
            0,
            0
        ];
        delta = [
            0,
            0
        ];
        velocity = [
            0,
            0
        ];
    }
    var payload = this._payload;
    payload.delta = delta;
    payload.position = this._position;
    payload.velocity = velocity;
    payload.clientX = x;
    payload.clientY = y;
    payload.offsetX = event.offsetX;
    payload.offsetY = event.offsetY;
    this._eventOutput.emit('start', payload);
}
function _handleMove(event) {
    if (!this._prevCoord)
        return;
    var prevCoord = this._prevCoord;
    var prevTime = this._prevTime;
    var x = event.clientX;
    var y = event.clientY;
    var currTime = _now();
    var diffX = x - prevCoord[0];
    var diffY = y - prevCoord[1];
    if (this.options.rails) {
        if (Math.abs(diffX) > Math.abs(diffY))
            diffY = 0;
        else
            diffX = 0;
    }
    var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME);
    var velX = diffX / diffTime;
    var velY = diffY / diffTime;
    var scale = this.options.scale;
    var nextVel;
    var nextDelta;
    if (this.options.direction === MouseSync.DIRECTION_X) {
        nextDelta = scale * diffX;
        nextVel = scale * velX;
        this._position += nextDelta;
    } else if (this.options.direction === MouseSync.DIRECTION_Y) {
        nextDelta = scale * diffY;
        nextVel = scale * velY;
        this._position += nextDelta;
    } else {
        nextDelta = [
            scale * diffX,
            scale * diffY
        ];
        nextVel = [
            scale * velX,
            scale * velY
        ];
        this._position[0] += nextDelta[0];
        this._position[1] += nextDelta[1];
    }
    var payload = this._payload;
    payload.delta = nextDelta;
    payload.position = this._position;
    payload.velocity = nextVel;
    payload.clientX = x;
    payload.clientY = y;
    payload.offsetX = event.offsetX;
    payload.offsetY = event.offsetY;
    this._eventOutput.emit('update', payload);
    this._prevCoord = [
        x,
        y
    ];
    this._prevTime = currTime;
    this._move = true;
}
function _handleEnd(event) {
    if (!this._down)
        return;
    this._eventOutput.emit('end', this._payload);
    this._prevCoord = undefined;
    this._prevTime = undefined;
    this._down = false;
    this._move = false;
}
function _handleLeave(event) {
    if (!this._down || !this._move)
        return;
    var boundMove = _handleMove.bind(this);
    var boundEnd = function (event) {
            _handleEnd.call(this, event);
            document.removeEventListener('mousemove', boundMove);
            document.removeEventListener('mouseup', boundEnd);
        }.bind(this, event);
    document.addEventListener('mousemove', boundMove);
    document.addEventListener('mouseup', boundEnd);
}
MouseSync.prototype.getOptions = function getOptions() {
    return this.options;
};
MouseSync.prototype.setOptions = function setOptions(options) {
    if (options.direction !== undefined)
        this.options.direction = options.direction;
    if (options.rails !== undefined)
        this.options.rails = options.rails;
    if (options.scale !== undefined)
        this.options.scale = options.scale;
    if (options.propogate !== undefined)
        this.options.propogate = options.propogate;
};
module.exports = MouseSync;
},{"./..\\core\\EventHandler":12}],24:[function(require,module,exports){
var EventHandler = require('./..\\core\\EventHandler');
var Engine = require('./..\\core\\Engine');
function ScrollSync(options) {
    this.options = Object.create(ScrollSync.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    this._payload = {
        delta: null,
        position: null,
        velocity: null,
        slip: true
    };
    this._eventInput = new EventHandler();
    this._eventOutput = new EventHandler();
    EventHandler.setInputHandler(this, this._eventInput);
    EventHandler.setOutputHandler(this, this._eventOutput);
    this._position = this.options.direction === undefined ? [
        0,
        0
    ] : 0;
    this._prevTime = undefined;
    this._prevVel = undefined;
    this._eventInput.on('mousewheel', _handleMove.bind(this));
    this._eventInput.on('wheel', _handleMove.bind(this));
    this._inProgress = false;
    this._loopBound = false;
}
ScrollSync.DEFAULT_OPTIONS = {
    direction: undefined,
    minimumEndSpeed: Infinity,
    rails: false,
    scale: 1,
    stallTime: 50,
    lineHeight: 40
};
ScrollSync.DIRECTION_X = 0;
ScrollSync.DIRECTION_Y = 1;
var MINIMUM_TICK_TIME = 8;
var _now = Date.now;
function _newFrame() {
    if (this._inProgress && _now() - this._prevTime > this.options.stallTime) {
        this._inProgress = false;
        var finalVel = Math.abs(this._prevVel) >= this.options.minimumEndSpeed ? this._prevVel : 0;
        var payload = this._payload;
        payload.position = this._position;
        payload.velocity = finalVel;
        payload.slip = true;
        this._eventOutput.emit('end', payload);
    }
}
function _handleMove(event) {
    event.preventDefault();
    if (!this._inProgress) {
        this._inProgress = true;
        this._position = this.options.direction === undefined ? [
            0,
            0
        ] : 0;
        payload = this._payload;
        payload.slip = true;
        payload.position = this._position;
        payload.clientX = event.clientX;
        payload.clientY = event.clientY;
        payload.offsetX = event.offsetX;
        payload.offsetY = event.offsetY;
        this._eventOutput.emit('start', payload);
        if (!this._loopBound) {
            Engine.on('prerender', _newFrame.bind(this));
            this._loopBound = true;
        }
    }
    var currTime = _now();
    var prevTime = this._prevTime || currTime;
    var diffX = event.wheelDeltaX !== undefined ? event.wheelDeltaX : -event.deltaX;
    var diffY = event.wheelDeltaY !== undefined ? event.wheelDeltaY : -event.deltaY;
    if (event.deltaMode === 1) {
        diffX *= this.options.lineHeight;
        diffY *= this.options.lineHeight;
    }
    if (this.options.rails) {
        if (Math.abs(diffX) > Math.abs(diffY))
            diffY = 0;
        else
            diffX = 0;
    }
    var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME);
    var velX = diffX / diffTime;
    var velY = diffY / diffTime;
    var scale = this.options.scale;
    var nextVel;
    var nextDelta;
    if (this.options.direction === ScrollSync.DIRECTION_X) {
        nextDelta = scale * diffX;
        nextVel = scale * velX;
        this._position += nextDelta;
    } else if (this.options.direction === ScrollSync.DIRECTION_Y) {
        nextDelta = scale * diffY;
        nextVel = scale * velY;
        this._position += nextDelta;
    } else {
        nextDelta = [
            scale * diffX,
            scale * diffY
        ];
        nextVel = [
            scale * velX,
            scale * velY
        ];
        this._position[0] += nextDelta[0];
        this._position[1] += nextDelta[1];
    }
    var payload = this._payload;
    payload.delta = nextDelta;
    payload.velocity = nextVel;
    payload.position = this._position;
    payload.slip = true;
    this._eventOutput.emit('update', payload);
    this._prevTime = currTime;
    this._prevVel = nextVel;
}
ScrollSync.prototype.getOptions = function getOptions() {
    return this.options;
};
ScrollSync.prototype.setOptions = function setOptions(options) {
    if (options.direction !== undefined)
        this.options.direction = options.direction;
    if (options.minimumEndSpeed !== undefined)
        this.options.minimumEndSpeed = options.minimumEndSpeed;
    if (options.rails !== undefined)
        this.options.rails = options.rails;
    if (options.scale !== undefined)
        this.options.scale = options.scale;
    if (options.stallTime !== undefined)
        this.options.stallTime = options.stallTime;
};
module.exports = ScrollSync;
},{"./..\\core\\Engine":9,"./..\\core\\EventHandler":12}],25:[function(require,module,exports){
var TouchTracker = require('./TouchTracker');
var EventHandler = require('./..\\core\\EventHandler');
function TouchSync(options) {
    this.options = Object.create(TouchSync.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    this._eventOutput = new EventHandler();
    this._touchTracker = new TouchTracker();
    EventHandler.setOutputHandler(this, this._eventOutput);
    EventHandler.setInputHandler(this, this._touchTracker);
    this._touchTracker.on('trackstart', _handleStart.bind(this));
    this._touchTracker.on('trackmove', _handleMove.bind(this));
    this._touchTracker.on('trackend', _handleEnd.bind(this));
    this._payload = {
        delta: null,
        position: null,
        velocity: null,
        clientX: undefined,
        clientY: undefined,
        count: 0,
        touch: undefined
    };
    this._position = null;
}
TouchSync.DEFAULT_OPTIONS = {
    direction: undefined,
    rails: false,
    scale: 1
};
TouchSync.DIRECTION_X = 0;
TouchSync.DIRECTION_Y = 1;
var MINIMUM_TICK_TIME = 8;
function _handleStart(data) {
    var velocity;
    var delta;
    if (this.options.direction !== undefined) {
        this._position = 0;
        velocity = 0;
        delta = 0;
    } else {
        this._position = [
            0,
            0
        ];
        velocity = [
            0,
            0
        ];
        delta = [
            0,
            0
        ];
    }
    var payload = this._payload;
    payload.delta = delta;
    payload.position = this._position;
    payload.velocity = velocity;
    payload.clientX = data.x;
    payload.clientY = data.y;
    payload.count = data.count;
    payload.touch = data.identifier;
    this._eventOutput.emit('start', payload);
}
function _handleMove(data) {
    var history = data.history;
    var currHistory = history[history.length - 1];
    var prevHistory = history[history.length - 2];
    var prevTime = prevHistory.timestamp;
    var currTime = currHistory.timestamp;
    var diffX = currHistory.x - prevHistory.x;
    var diffY = currHistory.y - prevHistory.y;
    if (this.options.rails) {
        if (Math.abs(diffX) > Math.abs(diffY))
            diffY = 0;
        else
            diffX = 0;
    }
    var diffTime = Math.max(currTime - prevTime, MINIMUM_TICK_TIME);
    var velX = diffX / diffTime;
    var velY = diffY / diffTime;
    var scale = this.options.scale;
    var nextVel;
    var nextDelta;
    if (this.options.direction === TouchSync.DIRECTION_X) {
        nextDelta = scale * diffX;
        nextVel = scale * velX;
        this._position += nextDelta;
    } else if (this.options.direction === TouchSync.DIRECTION_Y) {
        nextDelta = scale * diffY;
        nextVel = scale * velY;
        this._position += nextDelta;
    } else {
        nextDelta = [
            scale * diffX,
            scale * diffY
        ];
        nextVel = [
            scale * velX,
            scale * velY
        ];
        this._position[0] += nextDelta[0];
        this._position[1] += nextDelta[1];
    }
    var payload = this._payload;
    payload.delta = nextDelta;
    payload.velocity = nextVel;
    payload.position = this._position;
    payload.clientX = data.x;
    payload.clientY = data.y;
    payload.count = data.count;
    payload.touch = data.identifier;
    this._eventOutput.emit('update', payload);
}
function _handleEnd(data) {
    this._payload.count = data.count;
    this._eventOutput.emit('end', this._payload);
}
TouchSync.prototype.setOptions = function setOptions(options) {
    if (options.direction !== undefined)
        this.options.direction = options.direction;
    if (options.rails !== undefined)
        this.options.rails = options.rails;
    if (options.scale !== undefined)
        this.options.scale = options.scale;
};
TouchSync.prototype.getOptions = function getOptions() {
    return this.options;
};
module.exports = TouchSync;
},{"./..\\core\\EventHandler":12,"./TouchTracker":26}],26:[function(require,module,exports){
var EventHandler = require('./..\\core\\EventHandler');
var _now = Date.now;
function _timestampTouch(touch, event, history) {
    return {
        x: touch.clientX,
        y: touch.clientY,
        identifier: touch.identifier,
        origin: event.origin,
        timestamp: _now(),
        count: event.touches.length,
        history: history
    };
}
function _handleStart(event) {
    for (var i = 0; i < event.changedTouches.length; i++) {
        var touch = event.changedTouches[i];
        var data = _timestampTouch(touch, event, null);
        this.eventOutput.emit('trackstart', data);
        if (!this.selective && !this.touchHistory[touch.identifier])
            this.track(data);
    }
}
function _handleMove(event) {
    for (var i = 0; i < event.changedTouches.length; i++) {
        var touch = event.changedTouches[i];
        var history = this.touchHistory[touch.identifier];
        if (history) {
            var data = _timestampTouch(touch, event, history);
            this.touchHistory[touch.identifier].push(data);
            this.eventOutput.emit('trackmove', data);
        }
    }
}
function _handleEnd(event) {
    for (var i = 0; i < event.changedTouches.length; i++) {
        var touch = event.changedTouches[i];
        var history = this.touchHistory[touch.identifier];
        if (history) {
            var data = _timestampTouch(touch, event, history);
            this.eventOutput.emit('trackend', data);
            delete this.touchHistory[touch.identifier];
        }
    }
}
function _handleUnpipe() {
    for (var i in this.touchHistory) {
        var history = this.touchHistory[i];
        this.eventOutput.emit('trackend', {
            touch: history[history.length - 1].touch,
            timestamp: Date.now(),
            count: 0,
            history: history
        });
        delete this.touchHistory[i];
    }
}
function TouchTracker(selective) {
    this.selective = selective;
    this.touchHistory = {};
    this.eventInput = new EventHandler();
    this.eventOutput = new EventHandler();
    EventHandler.setInputHandler(this, this.eventInput);
    EventHandler.setOutputHandler(this, this.eventOutput);
    this.eventInput.on('touchstart', _handleStart.bind(this));
    this.eventInput.on('touchmove', _handleMove.bind(this));
    this.eventInput.on('touchend', _handleEnd.bind(this));
    this.eventInput.on('touchcancel', _handleEnd.bind(this));
    this.eventInput.on('unpipe', _handleUnpipe.bind(this));
}
TouchTracker.prototype.track = function track(data) {
    this.touchHistory[data.identifier] = [data];
};
module.exports = TouchTracker;
},{"./..\\core\\EventHandler":12}],27:[function(require,module,exports){
var Utilities = {};
Utilities.clamp = function clamp(value, range) {
    return Math.max(Math.min(value, range[1]), range[0]);
};
Utilities.length = function length(array) {
    var distanceSquared = 0;
    for (var i = 0; i < array.length; i++) {
        distanceSquared += array[i] * array[i];
    }
    return Math.sqrt(distanceSquared);
};
module.exports = Utilities;
},{}],28:[function(require,module,exports){
function Vector(x, y, z) {
    if (arguments.length === 1)
        this.set(x);
    else {
        this.x = x || 0;
        this.y = y || 0;
        this.z = z || 0;
    }
    return this;
}
var _register = new Vector(0, 0, 0);
Vector.prototype.add = function add(v) {
    return _setXYZ.call(_register, this.x + v.x, this.y + v.y, this.z + v.z);
};
Vector.prototype.sub = function sub(v) {
    return _setXYZ.call(_register, this.x - v.x, this.y - v.y, this.z - v.z);
};
Vector.prototype.mult = function mult(r) {
    return _setXYZ.call(_register, r * this.x, r * this.y, r * this.z);
};
Vector.prototype.div = function div(r) {
    return this.mult(1 / r);
};
Vector.prototype.cross = function cross(v) {
    var x = this.x;
    var y = this.y;
    var z = this.z;
    var vx = v.x;
    var vy = v.y;
    var vz = v.z;
    return _setXYZ.call(_register, z * vy - y * vz, x * vz - z * vx, y * vx - x * vy);
};
Vector.prototype.equals = function equals(v) {
    return v.x === this.x && v.y === this.y && v.z === this.z;
};
Vector.prototype.rotateX = function rotateX(theta) {
    var x = this.x;
    var y = this.y;
    var z = this.z;
    var cosTheta = Math.cos(theta);
    var sinTheta = Math.sin(theta);
    return _setXYZ.call(_register, x, y * cosTheta - z * sinTheta, y * sinTheta + z * cosTheta);
};
Vector.prototype.rotateY = function rotateY(theta) {
    var x = this.x;
    var y = this.y;
    var z = this.z;
    var cosTheta = Math.cos(theta);
    var sinTheta = Math.sin(theta);
    return _setXYZ.call(_register, z * sinTheta + x * cosTheta, y, z * cosTheta - x * sinTheta);
};
Vector.prototype.rotateZ = function rotateZ(theta) {
    var x = this.x;
    var y = this.y;
    var z = this.z;
    var cosTheta = Math.cos(theta);
    var sinTheta = Math.sin(theta);
    return _setXYZ.call(_register, x * cosTheta - y * sinTheta, x * sinTheta + y * cosTheta, z);
};
Vector.prototype.dot = function dot(v) {
    return this.x * v.x + this.y * v.y + this.z * v.z;
};
Vector.prototype.normSquared = function normSquared() {
    return this.dot(this);
};
Vector.prototype.norm = function norm() {
    return Math.sqrt(this.normSquared());
};
Vector.prototype.normalize = function normalize(length) {
    if (arguments.length === 0)
        length = 1;
    var norm = this.norm();
    if (norm > 1e-7)
        return _setFromVector.call(_register, this.mult(length / norm));
    else
        return _setXYZ.call(_register, length, 0, 0);
};
Vector.prototype.clone = function clone() {
    return new Vector(this);
};
Vector.prototype.isZero = function isZero() {
    return !(this.x || this.y || this.z);
};
function _setXYZ(x, y, z) {
    this.x = x;
    this.y = y;
    this.z = z;
    return this;
}
function _setFromArray(v) {
    return _setXYZ.call(this, v[0], v[1], v[2] || 0);
}
function _setFromVector(v) {
    return _setXYZ.call(this, v.x, v.y, v.z);
}
function _setFromNumber(x) {
    return _setXYZ.call(this, x, 0, 0);
}
Vector.prototype.set = function set(v) {
    if (v instanceof Array)
        return _setFromArray.call(this, v);
    if (v instanceof Vector)
        return _setFromVector.call(this, v);
    if (typeof v === 'number')
        return _setFromNumber.call(this, v);
};
Vector.prototype.setXYZ = function (x, y, z) {
    return _setXYZ.apply(this, arguments);
};
Vector.prototype.set1D = function (x) {
    return _setFromNumber.call(this, x);
};
Vector.prototype.put = function put(v) {
    if (this === _register)
        _setFromVector.call(v, _register);
    else
        _setFromVector.call(v, this);
};
Vector.prototype.clear = function clear() {
    return _setXYZ.call(this, 0, 0, 0);
};
Vector.prototype.cap = function cap(cap) {
    if (cap === Infinity)
        return _setFromVector.call(_register, this);
    var norm = this.norm();
    if (norm > cap)
        return _setFromVector.call(_register, this.mult(cap / norm));
    else
        return _setFromVector.call(_register, this);
};
Vector.prototype.project = function project(n) {
    return n.mult(this.dot(n));
};
Vector.prototype.reflectAcross = function reflectAcross(n) {
    n.normalize().put(n);
    return _setFromVector(_register, this.sub(this.project(n).mult(2)));
};
Vector.prototype.get = function get() {
    return [
        this.x,
        this.y,
        this.z
    ];
};
Vector.prototype.get1D = function () {
    return this.x;
};
module.exports = Vector;
},{}],29:[function(require,module,exports){
var Transform = require('./..\\core\\Transform');
var Transitionable = require('./..\\transitions\\Transitionable');
var EventHandler = require('./..\\core\\EventHandler');
var Utilities = require('./..\\math\\Utilities');
var GenericSync = require('./..\\inputs\\GenericSync');
var MouseSync = require('./..\\inputs\\MouseSync');
var TouchSync = require('./..\\inputs\\TouchSync');
GenericSync.register({
    'mouse': MouseSync,
    'touch': TouchSync
});
function Draggable(options) {
    this.options = Object.create(Draggable.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    this._positionState = new Transitionable([
        0,
        0
    ]);
    this._differential = [
        0,
        0
    ];
    this._active = true;
    this.sync = new GenericSync([
        'mouse',
        'touch'
    ], { scale: this.options.scale });
    this.eventOutput = new EventHandler();
    EventHandler.setInputHandler(this, this.sync);
    EventHandler.setOutputHandler(this, this.eventOutput);
    _bindEvents.call(this);
}
var _direction = {
        x: 1,
        y: 2
    };
Draggable.DIRECTION_X = _direction.x;
Draggable.DIRECTION_Y = _direction.y;
var _clamp = Utilities.clamp;
Draggable.DEFAULT_OPTIONS = {
    projection: _direction.x | _direction.y,
    scale: 1,
    xRange: null,
    yRange: null,
    snapX: 0,
    snapY: 0,
    transition: { duration: 0 }
};
function _mapDifferential(differential) {
    var opts = this.options;
    var projection = opts.projection;
    var snapX = opts.snapX;
    var snapY = opts.snapY;
    var tx = projection & _direction.x ? differential[0] : 0;
    var ty = projection & _direction.y ? differential[1] : 0;
    if (snapX > 0)
        tx -= tx % snapX;
    if (snapY > 0)
        ty -= ty % snapY;
    return [
        tx,
        ty
    ];
}
function _handleStart() {
    if (!this._active)
        return;
    if (this._positionState.isActive())
        this._positionState.halt();
    this.eventOutput.emit('start', { position: this.getPosition() });
}
function _handleMove(event) {
    if (!this._active)
        return;
    var options = this.options;
    this._differential = event.position;
    var newDifferential = _mapDifferential.call(this, this._differential);
    this._differential[0] -= newDifferential[0];
    this._differential[1] -= newDifferential[1];
    var pos = this.getPosition();
    pos[0] += newDifferential[0];
    pos[1] += newDifferential[1];
    if (options.xRange) {
        var xRange = [
                options.xRange[0] + 0.5 * options.snapX,
                options.xRange[1] - 0.5 * options.snapX
            ];
        pos[0] = _clamp(pos[0], xRange);
    }
    if (options.yRange) {
        var yRange = [
                options.yRange[0] + 0.5 * options.snapY,
                options.yRange[1] - 0.5 * options.snapY
            ];
        pos[1] = _clamp(pos[1], yRange);
    }
    this.eventOutput.emit('update', { position: pos });
}
function _handleEnd() {
    if (!this._active)
        return;
    this.eventOutput.emit('end', { position: this.getPosition() });
}
function _bindEvents() {
    this.sync.on('start', _handleStart.bind(this));
    this.sync.on('update', _handleMove.bind(this));
    this.sync.on('end', _handleEnd.bind(this));
}
Draggable.prototype.setOptions = function setOptions(options) {
    var currentOptions = this.options;
    if (options.projection !== undefined) {
        var proj = options.projection;
        this.options.projection = 0;
        [
            'x',
            'y'
        ].forEach(function (val) {
            if (proj.indexOf(val) !== -1)
                currentOptions.projection |= _direction[val];
        });
    }
    if (options.scale !== undefined) {
        currentOptions.scale = options.scale;
        this.sync.setOptions({ scale: options.scale });
    }
    if (options.xRange !== undefined)
        currentOptions.xRange = options.xRange;
    if (options.yRange !== undefined)
        currentOptions.yRange = options.yRange;
    if (options.snapX !== undefined)
        currentOptions.snapX = options.snapX;
    if (options.snapY !== undefined)
        currentOptions.snapY = options.snapY;
};
Draggable.prototype.getPosition = function getPosition() {
    return this._positionState.get();
};
Draggable.prototype.setRelativePosition = function setRelativePosition(position, transition, callback) {
    var currPos = this.getPosition();
    var relativePosition = [
            currPos[0] + position[0],
            currPos[1] + position[1]
        ];
    this.setPosition(relativePosition, transition, callback);
};
Draggable.prototype.setPosition = function setPosition(position, transition, callback) {
    if (this._positionState.isActive())
        this._positionState.halt();
    this._positionState.set(position, transition, callback);
};
Draggable.prototype.activate = function activate() {
    this._active = true;
};
Draggable.prototype.deactivate = function deactivate() {
    this._active = false;
};
Draggable.prototype.toggle = function toggle() {
    this._active = !this._active;
};
Draggable.prototype.modify = function modify(target) {
    var pos = this.getPosition();
    return {
        transform: Transform.translate(pos[0], pos[1]),
        target: target
    };
};
module.exports = Draggable;
},{"./..\\core\\EventHandler":12,"./..\\core\\Transform":19,"./..\\inputs\\GenericSync":22,"./..\\inputs\\MouseSync":23,"./..\\inputs\\TouchSync":25,"./..\\math\\Utilities":27,"./..\\transitions\\Transitionable":45}],30:[function(require,module,exports){
var Modifier = require('./..\\core\\Modifier');
var Transform = require('./..\\core\\Transform');
var Transitionable = require('./..\\transitions\\Transitionable');
var TransitionableTransform = require('./..\\transitions\\TransitionableTransform');
function StateModifier(options) {
    this._transformState = new TransitionableTransform(Transform.identity);
    this._opacityState = new Transitionable(1);
    this._originState = new Transitionable([
        0,
        0
    ]);
    this._alignState = new Transitionable([
        0,
        0
    ]);
    this._sizeState = new Transitionable([
        0,
        0
    ]);
    this._modifier = new Modifier({
        transform: this._transformState,
        opacity: this._opacityState,
        origin: null,
        align: null,
        size: null
    });
    this._hasOrigin = false;
    this._hasAlign = false;
    this._hasSize = false;
    if (options) {
        if (options.transform)
            this.setTransform(options.transform);
        if (options.opacity !== undefined)
            this.setOpacity(options.opacity);
        if (options.origin)
            this.setOrigin(options.origin);
        if (options.align)
            this.setAlign(options.align);
        if (options.size)
            this.setSize(options.size);
    }
}
StateModifier.prototype.setTransform = function setTransform(transform, transition, callback) {
    this._transformState.set(transform, transition, callback);
    return this;
};
StateModifier.prototype.setOpacity = function setOpacity(opacity, transition, callback) {
    this._opacityState.set(opacity, transition, callback);
    return this;
};
StateModifier.prototype.setOrigin = function setOrigin(origin, transition, callback) {
    if (origin === null) {
        if (this._hasOrigin) {
            this._modifier.originFrom(null);
            this._hasOrigin = false;
        }
        return this;
    } else if (!this._hasOrigin) {
        this._hasOrigin = true;
        this._modifier.originFrom(this._originState);
    }
    this._originState.set(origin, transition, callback);
    return this;
};
StateModifier.prototype.setAlign = function setOrigin(align, transition, callback) {
    if (align === null) {
        if (this._hasAlign) {
            this._modifier.alignFrom(null);
            this._hasAlign = false;
        }
        return this;
    } else if (!this._hasAlign) {
        this._hasAlign = true;
        this._modifier.alignFrom(this._alignState);
    }
    this._alignState.set(align, transition, callback);
    return this;
};
StateModifier.prototype.setSize = function setSize(size, transition, callback) {
    if (size === null) {
        if (this._hasSize) {
            this._modifier.sizeFrom(null);
            this._hasSize = false;
        }
        return this;
    } else if (!this._hasSize) {
        this._hasSize = true;
        this._modifier.sizeFrom(this._sizeState);
    }
    this._sizeState.set(size, transition, callback);
    return this;
};
StateModifier.prototype.halt = function halt() {
    this._transformState.halt();
    this._opacityState.halt();
    this._originState.halt();
    this._alignState.halt();
    this._sizeState.halt();
};
StateModifier.prototype.getTransform = function getTransform() {
    return this._transformState.get();
};
StateModifier.prototype.getFinalTransform = function getFinalTransform() {
    return this._transformState.getFinal();
};
StateModifier.prototype.getOpacity = function getOpacity() {
    return this._opacityState.get();
};
StateModifier.prototype.getOrigin = function getOrigin() {
    return this._hasOrigin ? this._originState.get() : null;
};
StateModifier.prototype.getAlign = function getAlign() {
    return this._hasAlign ? this._alignState.get() : null;
};
StateModifier.prototype.getSize = function getSize() {
    return this._hasSize ? this._sizeState.get() : null;
};
StateModifier.prototype.modify = function modify(target) {
    return this._modifier.modify(target);
};
module.exports = StateModifier;
},{"./..\\core\\Modifier":14,"./..\\core\\Transform":19,"./..\\transitions\\Transitionable":45,"./..\\transitions\\TransitionableTransform":46}],31:[function(require,module,exports){
var EventHandler = require('./..\\core\\EventHandler');
function PhysicsEngine(options) {
    this.options = Object.create(PhysicsEngine.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    this._particles = [];
    this._bodies = [];
    this._agents = {};
    this._forces = [];
    this._constraints = [];
    this._buffer = 0;
    this._prevTime = now();
    this._isSleeping = false;
    this._eventHandler = null;
    this._currAgentId = 0;
    this._hasBodies = false;
}
var TIMESTEP = 17;
var MIN_TIME_STEP = 1000 / 120;
var MAX_TIME_STEP = 17;
PhysicsEngine.DEFAULT_OPTIONS = {
    constraintSteps: 1,
    sleepTolerance: 1e-7
};
var now = function () {
        return Date.now;
    }();
PhysicsEngine.prototype.setOptions = function setOptions(opts) {
    for (var key in opts)
        if (this.options[key])
            this.options[key] = opts[key];
};
PhysicsEngine.prototype.addBody = function addBody(body) {
    body._engine = this;
    if (body.isBody) {
        this._bodies.push(body);
        this._hasBodies = true;
    } else
        this._particles.push(body);
    return body;
};
PhysicsEngine.prototype.removeBody = function removeBody(body) {
    var array = body.isBody ? this._bodies : this._particles;
    var index = array.indexOf(body);
    if (index > -1) {
        for (var i = 0; i < Object.keys(this._agents).length; i++)
            this.detachFrom(i, body);
        array.splice(index, 1);
    }
    if (this.getBodies().length === 0)
        this._hasBodies = false;
};
function _mapAgentArray(agent) {
    if (agent.applyForce)
        return this._forces;
    if (agent.applyConstraint)
        return this._constraints;
}
function _attachOne(agent, targets, source) {
    if (targets === undefined)
        targets = this.getParticlesAndBodies();
    if (!(targets instanceof Array))
        targets = [targets];
    this._agents[this._currAgentId] = {
        agent: agent,
        targets: targets,
        source: source
    };
    _mapAgentArray.call(this, agent).push(this._currAgentId);
    return this._currAgentId++;
}
PhysicsEngine.prototype.attach = function attach(agents, targets, source) {
    if (agents instanceof Array) {
        var agentIDs = [];
        for (var i = 0; i < agents.length; i++)
            agentIDs[i] = _attachOne.call(this, agents[i], targets, source);
        return agentIDs;
    } else
        return _attachOne.call(this, agents, targets, source);
};
PhysicsEngine.prototype.attachTo = function attachTo(agentID, target) {
    _getBoundAgent.call(this, agentID).targets.push(target);
};
PhysicsEngine.prototype.detach = function detach(id) {
    var agent = this.getAgent(id);
    var agentArray = _mapAgentArray.call(this, agent);
    var index = agentArray.indexOf(id);
    agentArray.splice(index, 1);
    delete this._agents[id];
};
PhysicsEngine.prototype.detachFrom = function detachFrom(id, target) {
    var boundAgent = _getBoundAgent.call(this, id);
    if (boundAgent.source === target)
        this.detach(id);
    else {
        var targets = boundAgent.targets;
        var index = targets.indexOf(target);
        if (index > -1)
            targets.splice(index, 1);
    }
};
PhysicsEngine.prototype.detachAll = function detachAll() {
    this._agents = {};
    this._forces = [];
    this._constraints = [];
    this._currAgentId = 0;
};
function _getBoundAgent(id) {
    return this._agents[id];
}
PhysicsEngine.prototype.getAgent = function getAgent(id) {
    return _getBoundAgent.call(this, id).agent;
};
PhysicsEngine.prototype.getParticles = function getParticles() {
    return this._particles;
};
PhysicsEngine.prototype.getBodies = function getBodies() {
    return this._bodies;
};
PhysicsEngine.prototype.getParticlesAndBodies = function getParticlesAndBodies() {
    return this.getParticles().concat(this.getBodies());
};
PhysicsEngine.prototype.forEachParticle = function forEachParticle(fn, dt) {
    var particles = this.getParticles();
    for (var index = 0, len = particles.length; index < len; index++)
        fn.call(this, particles[index], dt);
};
PhysicsEngine.prototype.forEachBody = function forEachBody(fn, dt) {
    if (!this._hasBodies)
        return;
    var bodies = this.getBodies();
    for (var index = 0, len = bodies.length; index < len; index++)
        fn.call(this, bodies[index], dt);
};
PhysicsEngine.prototype.forEach = function forEach(fn, dt) {
    this.forEachParticle(fn, dt);
    this.forEachBody(fn, dt);
};
function _updateForce(index) {
    var boundAgent = _getBoundAgent.call(this, this._forces[index]);
    boundAgent.agent.applyForce(boundAgent.targets, boundAgent.source);
}
function _updateForces() {
    for (var index = this._forces.length - 1; index > -1; index--)
        _updateForce.call(this, index);
}
function _updateConstraint(index, dt) {
    var boundAgent = this._agents[this._constraints[index]];
    return boundAgent.agent.applyConstraint(boundAgent.targets, boundAgent.source, dt);
}
function _updateConstraints(dt) {
    var iteration = 0;
    while (iteration < this.options.constraintSteps) {
        for (var index = this._constraints.length - 1; index > -1; index--)
            _updateConstraint.call(this, index, dt);
        iteration++;
    }
}
function _updateVelocities(particle, dt) {
    particle.integrateVelocity(dt);
}
function _updateAngularVelocities(body, dt) {
    body.integrateAngularMomentum(dt);
    body.updateAngularVelocity();
}
function _updateOrientations(body, dt) {
    body.integrateOrientation(dt);
}
function _updatePositions(particle, dt) {
    particle.integratePosition(dt);
    particle.emit('update', particle);
}
function _integrate(dt) {
    _updateForces.call(this, dt);
    this.forEach(_updateVelocities, dt);
    this.forEachBody(_updateAngularVelocities, dt);
    _updateConstraints.call(this, dt);
    this.forEachBody(_updateOrientations, dt);
    this.forEach(_updatePositions, dt);
}
function _getEnergyParticles() {
    var energy = 0;
    var particleEnergy = 0;
    this.forEach(function (particle) {
        particleEnergy = particle.getEnergy();
        energy += particleEnergy;
        if (particleEnergy < particle.sleepTolerance)
            particle.sleep();
    });
    return energy;
}
function _getEnergyForces() {
    var energy = 0;
    for (var index = this._forces.length - 1; index > -1; index--)
        energy += this._forces[index].getEnergy() || 0;
    return energy;
}
function _getEnergyConstraints() {
    var energy = 0;
    for (var index = this._constraints.length - 1; index > -1; index--)
        energy += this._constraints[index].getEnergy() || 0;
    return energy;
}
PhysicsEngine.prototype.getEnergy = function getEnergy() {
    return _getEnergyParticles.call(this) + _getEnergyForces.call(this) + _getEnergyConstraints.call(this);
};
PhysicsEngine.prototype.step = function step() {
    var currTime = now();
    var dtFrame = currTime - this._prevTime;
    this._prevTime = currTime;
    if (dtFrame < MIN_TIME_STEP)
        return;
    if (dtFrame > MAX_TIME_STEP)
        dtFrame = MAX_TIME_STEP;
    _integrate.call(this, TIMESTEP);
};
PhysicsEngine.prototype.isSleeping = function isSleeping() {
    return this._isSleeping;
};
PhysicsEngine.prototype.sleep = function sleep() {
    this.emit('end', this);
    this._isSleeping = true;
};
PhysicsEngine.prototype.wake = function wake() {
    this._prevTime = now();
    this.emit('start', this);
    this._isSleeping = false;
};
PhysicsEngine.prototype.emit = function emit(type, data) {
    if (this._eventHandler === null)
        return;
    this._eventHandler.emit(type, data);
};
PhysicsEngine.prototype.on = function on(event, fn) {
    if (this._eventHandler === null)
        this._eventHandler = new EventHandler();
    this._eventHandler.on(event, fn);
};
module.exports = PhysicsEngine;
},{"./..\\core\\EventHandler":12}],32:[function(require,module,exports){
var Vector = require('./..\\..\\math\\Vector');
var Transform = require('./..\\..\\core\\Transform');
var EventHandler = require('./..\\..\\core\\EventHandler');
var Integrator = require('../integrators/SymplecticEuler');
function Particle(options) {
    options = options || {};
    this.position = new Vector();
    this.velocity = new Vector();
    this.force = new Vector();
    var defaults = Particle.DEFAULT_OPTIONS;
    this.setPosition(options.position || defaults.position);
    this.setVelocity(options.velocity || defaults.velocity);
    this.force.set(options.force || [
        0,
        0,
        0
    ]);
    this.mass = options.mass !== undefined ? options.mass : defaults.mass;
    this.axis = options.axis !== undefined ? options.axis : defaults.axis;
    this.inverseMass = 1 / this.mass;
    this._isSleeping = false;
    this._engine = null;
    this._eventOutput = null;
    this._positionGetter = null;
    this.transform = Transform.identity.slice();
    this._spec = {
        transform: this.transform,
        target: null
    };
}
Particle.DEFAULT_OPTIONS = {
    position: [
        0,
        0,
        0
    ],
    velocity: [
        0,
        0,
        0
    ],
    mass: 1,
    axis: undefined
};
Particle.SLEEP_TOLERANCE = 1e-7;
Particle.AXES = {
    X: 0,
    Y: 1,
    Z: 2
};
Particle.INTEGRATOR = new Integrator();
var _events = {
        start: 'start',
        update: 'update',
        end: 'end'
    };
var now = function () {
        return Date.now;
    }();
Particle.prototype.sleep = function sleep() {
    if (this._isSleeping)
        return;
    this.emit(_events.end, this);
    this._isSleeping = true;
};
Particle.prototype.wake = function wake() {
    if (!this._isSleeping)
        return;
    this.emit(_events.start, this);
    this._isSleeping = false;
    this._prevTime = now();
};
Particle.prototype.isBody = false;
Particle.prototype.setPosition = function setPosition(position) {
    this.position.set(position);
};
Particle.prototype.setPosition1D = function setPosition1D(x) {
    this.position.x = x;
};
Particle.prototype.getPosition = function getPosition() {
    if (this._positionGetter instanceof Function)
        this.setPosition(this._positionGetter());
    this._engine.step();
    return this.position.get();
};
Particle.prototype.getPosition1D = function getPosition1D() {
    this._engine.step();
    return this.position.x;
};
Particle.prototype.positionFrom = function positionFrom(positionGetter) {
    this._positionGetter = positionGetter;
};
Particle.prototype.setVelocity = function setVelocity(velocity) {
    this.velocity.set(velocity);
    this.wake();
};
Particle.prototype.setVelocity1D = function setVelocity1D(x) {
    this.velocity.x = x;
    this.wake();
};
Particle.prototype.getVelocity = function getVelocity() {
    return this.velocity.get();
};
Particle.prototype.getVelocity1D = function getVelocity1D() {
    return this.velocity.x;
};
Particle.prototype.setMass = function setMass(mass) {
    this.mass = mass;
    this.inverseMass = 1 / mass;
};
Particle.prototype.getMass = function getMass() {
    return this.mass;
};
Particle.prototype.reset = function reset(position, velocity) {
    this.setPosition(position || [
        0,
        0,
        0
    ]);
    this.setVelocity(velocity || [
        0,
        0,
        0
    ]);
};
Particle.prototype.applyForce = function applyForce(force) {
    if (force.isZero())
        return;
    this.force.add(force).put(this.force);
    this.wake();
};
Particle.prototype.applyImpulse = function applyImpulse(impulse) {
    if (impulse.isZero())
        return;
    var velocity = this.velocity;
    velocity.add(impulse.mult(this.inverseMass)).put(velocity);
};
Particle.prototype.integrateVelocity = function integrateVelocity(dt) {
    Particle.INTEGRATOR.integrateVelocity(this, dt);
};
Particle.prototype.integratePosition = function integratePosition(dt) {
    Particle.INTEGRATOR.integratePosition(this, dt);
};
Particle.prototype._integrate = function _integrate(dt) {
    this.integrateVelocity(dt);
    this.integratePosition(dt);
};
Particle.prototype.getEnergy = function getEnergy() {
    return 0.5 * this.mass * this.velocity.normSquared();
};
Particle.prototype.getTransform = function getTransform() {
    this._engine.step();
    var position = this.position;
    var axis = this.axis;
    var transform = this.transform;
    if (axis !== undefined) {
        if (axis & ~Particle.AXES.X) {
            position.x = 0;
        }
        if (axis & ~Particle.AXES.Y) {
            position.y = 0;
        }
        if (axis & ~Particle.AXES.Z) {
            position.z = 0;
        }
    }
    transform[12] = position.x;
    transform[13] = position.y;
    transform[14] = position.z;
    return transform;
};
Particle.prototype.modify = function modify(target) {
    var _spec = this._spec;
    _spec.transform = this.getTransform();
    _spec.target = target;
    return _spec;
};
function _createEventOutput() {
    this._eventOutput = new EventHandler();
    this._eventOutput.bindThis(this);
    EventHandler.setOutputHandler(this, this._eventOutput);
}
Particle.prototype.emit = function emit(type, data) {
    if (!this._eventOutput)
        return;
    this._eventOutput.emit(type, data);
};
Particle.prototype.on = function on() {
    _createEventOutput.call(this);
    return this.on.apply(this, arguments);
};
Particle.prototype.removeListener = function removeListener() {
    _createEventOutput.call(this);
    return this.removeListener.apply(this, arguments);
};
Particle.prototype.pipe = function pipe() {
    _createEventOutput.call(this);
    return this.pipe.apply(this, arguments);
};
Particle.prototype.unpipe = function unpipe() {
    _createEventOutput.call(this);
    return this.unpipe.apply(this, arguments);
};
module.exports = Particle;
},{"../integrators/SymplecticEuler":38,"./..\\..\\core\\EventHandler":12,"./..\\..\\core\\Transform":19,"./..\\..\\math\\Vector":28}],33:[function(require,module,exports){
var EventHandler = require('./..\\..\\core\\EventHandler');
function Constraint() {
    this.options = this.options || {};
    this._energy = 0;
    this._eventOutput = null;
}
Constraint.prototype.setOptions = function setOptions(options) {
    for (var key in options)
        this.options[key] = options[key];
};
Constraint.prototype.applyConstraint = function applyConstraint() {
};
Constraint.prototype.getEnergy = function getEnergy() {
    return this._energy;
};
Constraint.prototype.setEnergy = function setEnergy(energy) {
    this._energy = energy;
};
function _createEventOutput() {
    this._eventOutput = new EventHandler();
    this._eventOutput.bindThis(this);
    EventHandler.setOutputHandler(this, this._eventOutput);
}
Constraint.prototype.on = function on() {
    _createEventOutput.call(this);
    return this.on.apply(this, arguments);
};
Constraint.prototype.addListener = function addListener() {
    _createEventOutput.call(this);
    return this.addListener.apply(this, arguments);
};
Constraint.prototype.pipe = function pipe() {
    _createEventOutput.call(this);
    return this.pipe.apply(this, arguments);
};
Constraint.prototype.removeListener = function removeListener() {
    return this.removeListener.apply(this, arguments);
};
Constraint.prototype.unpipe = function unpipe() {
    return this.unpipe.apply(this, arguments);
};
module.exports = Constraint;
},{"./..\\..\\core\\EventHandler":12}],34:[function(require,module,exports){
var Constraint = require('./Constraint');
var Vector = require('./..\\..\\math\\Vector');
function Snap(options) {
    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    this.pDiff = new Vector();
    this.vDiff = new Vector();
    this.impulse1 = new Vector();
    this.impulse2 = new Vector();
    Constraint.call(this);
}
Snap.prototype = Object.create(Constraint.prototype);
Snap.prototype.constructor = Snap;
Snap.DEFAULT_OPTIONS = {
    period: 300,
    dampingRatio: 0.1,
    length: 0,
    anchor: undefined
};
var pi = Math.PI;
function _calcEnergy(impulse, disp, dt) {
    return Math.abs(impulse.dot(disp) / dt);
}
Snap.prototype.setOptions = function setOptions(options) {
    if (options.anchor !== undefined) {
        if (options.anchor instanceof Vector)
            this.options.anchor = options.anchor;
        if (options.anchor.position instanceof Vector)
            this.options.anchor = options.anchor.position;
        if (options.anchor instanceof Array)
            this.options.anchor = new Vector(options.anchor);
    }
    if (options.length !== undefined)
        this.options.length = options.length;
    if (options.dampingRatio !== undefined)
        this.options.dampingRatio = options.dampingRatio;
    if (options.period !== undefined)
        this.options.period = options.period;
};
Snap.prototype.setAnchor = function setAnchor(v) {
    if (this.options.anchor !== undefined)
        this.options.anchor = new Vector();
    this.options.anchor.set(v);
};
Snap.prototype.getEnergy = function getEnergy(target, source) {
    var options = this.options;
    var restLength = options.length;
    var anchor = options.anchor || source.position;
    var strength = Math.pow(2 * pi / options.period, 2);
    var dist = anchor.sub(target.position).norm() - restLength;
    return 0.5 * strength * dist * dist;
};
Snap.prototype.applyConstraint = function applyConstraint(targets, source, dt) {
    var options = this.options;
    var pDiff = this.pDiff;
    var vDiff = this.vDiff;
    var impulse1 = this.impulse1;
    var impulse2 = this.impulse2;
    var length = options.length;
    var anchor = options.anchor || source.position;
    var period = options.period;
    var dampingRatio = options.dampingRatio;
    for (var i = 0; i < targets.length; i++) {
        var target = targets[i];
        var p1 = target.position;
        var v1 = target.velocity;
        var m1 = target.mass;
        var w1 = target.inverseMass;
        pDiff.set(p1.sub(anchor));
        var dist = pDiff.norm() - length;
        var effMass;
        if (source) {
            var w2 = source.inverseMass;
            var v2 = source.velocity;
            vDiff.set(v1.sub(v2));
            effMass = 1 / (w1 + w2);
        } else {
            vDiff.set(v1);
            effMass = m1;
        }
        var gamma;
        var beta;
        if (this.options.period === 0) {
            gamma = 0;
            beta = 1;
        } else {
            var k = 4 * effMass * pi * pi / (period * period);
            var c = 4 * effMass * pi * dampingRatio / period;
            beta = dt * k / (c + dt * k);
            gamma = 1 / (c + dt * k);
        }
        var antiDrift = beta / dt * dist;
        pDiff.normalize(-antiDrift).sub(vDiff).mult(dt / (gamma + dt / effMass)).put(impulse1);
        target.applyImpulse(impulse1);
        if (source) {
            impulse1.mult(-1).put(impulse2);
            source.applyImpulse(impulse2);
        }
        this.setEnergy(_calcEnergy(impulse1, pDiff, dt));
    }
};
module.exports = Snap;
},{"./..\\..\\math\\Vector":28,"./Constraint":33}],35:[function(require,module,exports){
var Force = require('./Force');
function Drag(options) {
    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    Force.call(this);
}
Drag.prototype = Object.create(Force.prototype);
Drag.prototype.constructor = Drag;
Drag.FORCE_FUNCTIONS = {
    LINEAR: function (velocity) {
        return velocity;
    },
    QUADRATIC: function (velocity) {
        return velocity.mult(velocity.norm());
    }
};
Drag.DEFAULT_OPTIONS = {
    strength: 0.01,
    forceFunction: Drag.FORCE_FUNCTIONS.LINEAR
};
Drag.prototype.applyForce = function applyForce(targets) {
    var strength = this.options.strength;
    var forceFunction = this.options.forceFunction;
    var force = this.force;
    for (var index = 0; index < targets.length; index++) {
        var particle = targets[index];
        forceFunction(particle.velocity).mult(-strength).put(force);
        particle.applyForce(force);
    }
};
Drag.prototype.setOptions = function setOptions(options) {
    for (var key in options)
        this.options[key] = options[key];
};
module.exports = Drag;
},{"./Force":36}],36:[function(require,module,exports){
var Vector = require('./..\\..\\math\\Vector');
var EventHandler = require('./..\\..\\core\\EventHandler');
function Force(force) {
    this.force = new Vector(force);
    this._energy = 0;
    this._eventOutput = null;
}
Force.prototype.setOptions = function setOptions(options) {
    for (var key in options)
        this.options[key] = options[key];
};
Force.prototype.applyForce = function applyForce(body) {
    body.applyForce(this.force);
};
Force.prototype.getEnergy = function getEnergy() {
    return this._energy;
};
Force.prototype.setEnergy = function setEnergy(energy) {
    this._energy = energy;
};
function _createEventOutput() {
    this._eventOutput = new EventHandler();
    this._eventOutput.bindThis(this);
    EventHandler.setOutputHandler(this, this._eventOutput);
}
Force.prototype.on = function on() {
    _createEventOutput.call(this);
    return this.on.apply(this, arguments);
};
Force.prototype.addListener = function addListener() {
    _createEventOutput.call(this);
    return this.addListener.apply(this, arguments);
};
Force.prototype.pipe = function pipe() {
    _createEventOutput.call(this);
    return this.pipe.apply(this, arguments);
};
Force.prototype.removeListener = function removeListener() {
    return this.removeListener.apply(this, arguments);
};
Force.prototype.unpipe = function unpipe() {
    return this.unpipe.apply(this, arguments);
};
module.exports = Force;
},{"./..\\..\\core\\EventHandler":12,"./..\\..\\math\\Vector":28}],37:[function(require,module,exports){
var Force = require('./Force');
var Vector = require('./..\\..\\math\\Vector');
function Spring(options) {
    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    this.disp = new Vector(0, 0, 0);
    _init.call(this);
    Force.call(this);
}
Spring.prototype = Object.create(Force.prototype);
Spring.prototype.constructor = Spring;
var pi = Math.PI;
Spring.FORCE_FUNCTIONS = {
    FENE: function (dist, rMax) {
        var rMaxSmall = rMax * 0.99;
        var r = Math.max(Math.min(dist, rMaxSmall), -rMaxSmall);
        return r / (1 - r * r / (rMax * rMax));
    },
    HOOK: function (dist) {
        return dist;
    }
};
Spring.DEFAULT_OPTIONS = {
    period: 300,
    dampingRatio: 0.1,
    length: 0,
    maxLength: Infinity,
    anchor: undefined,
    forceFunction: Spring.FORCE_FUNCTIONS.HOOK
};
function _setForceFunction(fn) {
    this.forceFunction = fn;
}
function _calcStiffness() {
    var options = this.options;
    options.stiffness = Math.pow(2 * pi / options.period, 2);
}
function _calcDamping() {
    var options = this.options;
    options.damping = 4 * pi * options.dampingRatio / options.period;
}
function _calcEnergy(strength, dist) {
    return 0.5 * strength * dist * dist;
}
function _init() {
    _setForceFunction.call(this, this.options.forceFunction);
    _calcStiffness.call(this);
    _calcDamping.call(this);
}
Spring.prototype.setOptions = function setOptions(options) {
    if (options.anchor !== undefined) {
        if (options.anchor.position instanceof Vector)
            this.options.anchor = options.anchor.position;
        if (options.anchor instanceof Vector)
            this.options.anchor = options.anchor;
        if (options.anchor instanceof Array)
            this.options.anchor = new Vector(options.anchor);
    }
    if (options.period !== undefined)
        this.options.period = options.period;
    if (options.dampingRatio !== undefined)
        this.options.dampingRatio = options.dampingRatio;
    if (options.length !== undefined)
        this.options.length = options.length;
    if (options.forceFunction !== undefined)
        this.options.forceFunction = options.forceFunction;
    if (options.maxLength !== undefined)
        this.options.maxLength = options.maxLength;
    _init.call(this);
};
Spring.prototype.applyForce = function applyForce(targets, source) {
    var force = this.force;
    var disp = this.disp;
    var options = this.options;
    var stiffness = options.stiffness;
    var damping = options.damping;
    var restLength = options.length;
    var lMax = options.maxLength;
    var anchor = options.anchor || source.position;
    for (var i = 0; i < targets.length; i++) {
        var target = targets[i];
        var p2 = target.position;
        var v2 = target.velocity;
        anchor.sub(p2).put(disp);
        var dist = disp.norm() - restLength;
        if (dist === 0)
            return;
        var m = target.mass;
        stiffness *= m;
        damping *= m;
        disp.normalize(stiffness * this.forceFunction(dist, lMax)).put(force);
        if (damping)
            if (source)
                force.add(v2.sub(source.velocity).mult(-damping)).put(force);
            else
                force.add(v2.mult(-damping)).put(force);
        target.applyForce(force);
        if (source)
            source.applyForce(force.mult(-1));
        this.setEnergy(_calcEnergy(stiffness, dist));
    }
};
Spring.prototype.getEnergy = function getEnergy(target) {
    var options = this.options;
    var restLength = options.length;
    var anchor = options.anchor;
    var strength = options.stiffness;
    var dist = anchor.sub(target.position).norm() - restLength;
    return 0.5 * strength * dist * dist;
};
Spring.prototype.setAnchor = function setAnchor(anchor) {
    if (!this.options.anchor)
        this.options.anchor = new Vector();
    this.options.anchor.set(anchor);
};
module.exports = Spring;
},{"./..\\..\\math\\Vector":28,"./Force":36}],38:[function(require,module,exports){
var OptionsManager = require('./..\\..\\core\\OptionsManager');
function SymplecticEuler(options) {
    this.options = Object.create(SymplecticEuler.DEFAULT_OPTIONS);
    this._optionsManager = new OptionsManager(this.options);
    if (options)
        this.setOptions(options);
}
SymplecticEuler.DEFAULT_OPTIONS = {
    velocityCap: undefined,
    angularVelocityCap: undefined
};
SymplecticEuler.prototype.setOptions = function setOptions(options) {
    this._optionsManager.patch(options);
};
SymplecticEuler.prototype.getOptions = function getOptions() {
    return this._optionsManager.value();
};
SymplecticEuler.prototype.integrateVelocity = function integrateVelocity(body, dt) {
    var v = body.velocity;
    var w = body.inverseMass;
    var f = body.force;
    if (f.isZero())
        return;
    v.add(f.mult(dt * w)).put(v);
    f.clear();
};
SymplecticEuler.prototype.integratePosition = function integratePosition(body, dt) {
    var p = body.position;
    var v = body.velocity;
    if (this.options.velocityCap)
        v.cap(this.options.velocityCap).put(v);
    p.add(v.mult(dt)).put(p);
};
SymplecticEuler.prototype.integrateAngularMomentum = function integrateAngularMomentum(body, dt) {
    var L = body.angularMomentum;
    var t = body.torque;
    if (t.isZero())
        return;
    if (this.options.angularVelocityCap)
        t.cap(this.options.angularVelocityCap).put(t);
    L.add(t.mult(dt)).put(L);
    t.clear();
};
SymplecticEuler.prototype.integrateOrientation = function integrateOrientation(body, dt) {
    var q = body.orientation;
    var w = body.angularVelocity;
    if (w.isZero())
        return;
    q.add(q.multiply(w).scalarMultiply(0.5 * dt)).put(q);
};
module.exports = SymplecticEuler;
},{"./..\\..\\core\\OptionsManager":15}],39:[function(require,module,exports){
var Surface = require('./..\\core\\Surface');
var Context = require('./..\\core\\Context');
function ContainerSurface(options) {
    Surface.call(this, options);
    this._container = document.createElement('div');
    this._container.classList.add('famous-group');
    this._container.classList.add('famous-container-group');
    this._shouldRecalculateSize = false;
    this.context = new Context(this._container);
    this.setContent(this._container);
}
ContainerSurface.prototype = Object.create(Surface.prototype);
ContainerSurface.prototype.constructor = ContainerSurface;
ContainerSurface.prototype.elementType = 'div';
ContainerSurface.prototype.elementClass = 'famous-surface';
ContainerSurface.prototype.add = function add() {
    return this.context.add.apply(this.context, arguments);
};
ContainerSurface.prototype.render = function render() {
    if (this._sizeDirty)
        this._shouldRecalculateSize = true;
    return Surface.prototype.render.apply(this, arguments);
};
ContainerSurface.prototype.deploy = function deploy() {
    this._shouldRecalculateSize = true;
    return Surface.prototype.deploy.apply(this, arguments);
};
ContainerSurface.prototype.commit = function commit(context, transform, opacity, origin, size) {
    var previousSize = this._size ? [
            this._size[0],
            this._size[1]
        ] : null;
    var result = Surface.prototype.commit.apply(this, arguments);
    if (this._shouldRecalculateSize || previousSize && (this._size[0] !== previousSize[0] || this._size[1] !== previousSize[1])) {
        this.context.setSize();
        this._shouldRecalculateSize = false;
    }
    this.context.update();
    return result;
};
module.exports = ContainerSurface;
},{"./..\\core\\Context":7,"./..\\core\\Surface":18}],40:[function(require,module,exports){
var Surface = require('./..\\core\\Surface');
function ImageSurface(options) {
    this._imageUrl = undefined;
    Surface.apply(this, arguments);
}
ImageSurface.prototype = Object.create(Surface.prototype);
ImageSurface.prototype.constructor = ImageSurface;
ImageSurface.prototype.elementType = 'img';
ImageSurface.prototype.elementClass = 'famous-surface';
ImageSurface.prototype.setContent = function setContent(imageUrl) {
    this._imageUrl = imageUrl;
    this._contentDirty = true;
};
ImageSurface.prototype.deploy = function deploy(target) {
    target.src = this._imageUrl || '';
};
ImageSurface.prototype.recall = function recall(target) {
    target.src = '';
};
module.exports = ImageSurface;
},{"./..\\core\\Surface":18}],41:[function(require,module,exports){
var Surface = require('./..\\core\\Surface');
function InputSurface(options) {
    this._placeholder = options.placeholder || '';
    this._value = options.value || '';
    this._type = options.type || 'text';
    this._name = options.name || '';
    Surface.apply(this, arguments);
    this.on('click', this.focus.bind(this));
    window.addEventListener('click', function (event) {
        if (event.target !== this._currTarget)
            this.blur();
    }.bind(this));
}
InputSurface.prototype = Object.create(Surface.prototype);
InputSurface.prototype.constructor = InputSurface;
InputSurface.prototype.elementType = 'input';
InputSurface.prototype.elementClass = 'famous-surface';
InputSurface.prototype.setPlaceholder = function setPlaceholder(str) {
    this._placeholder = str;
    this._contentDirty = true;
    return this;
};
InputSurface.prototype.focus = function focus() {
    if (this._currTarget)
        this._currTarget.focus();
    return this;
};
InputSurface.prototype.blur = function blur() {
    if (this._currTarget)
        this._currTarget.blur();
    return this;
};
InputSurface.prototype.setValue = function setValue(str) {
    this._value = str;
    this._contentDirty = true;
    return this;
};
InputSurface.prototype.setType = function setType(str) {
    this._type = str;
    this._contentDirty = true;
    return this;
};
InputSurface.prototype.getValue = function getValue() {
    if (this._currTarget) {
        return this._currTarget.value;
    } else {
        return this._value;
    }
};
InputSurface.prototype.setName = function setName(str) {
    this._name = str;
    this._contentDirty = true;
    return this;
};
InputSurface.prototype.getName = function getName() {
    return this._name;
};
InputSurface.prototype.deploy = function deploy(target) {
    if (this._placeholder !== '')
        target.placeholder = this._placeholder;
    target.value = this._value;
    target.type = this._type;
    target.name = this._name;
};
module.exports = InputSurface;
},{"./..\\core\\Surface":18}],42:[function(require,module,exports){
var Easing = {
        inQuad: function (t) {
            return t * t;
        },
        outQuad: function (t) {
            return -(t -= 1) * t + 1;
        },
        inOutQuad: function (t) {
            if ((t /= 0.5) < 1)
                return 0.5 * t * t;
            return -0.5 * (--t * (t - 2) - 1);
        },
        inCubic: function (t) {
            return t * t * t;
        },
        outCubic: function (t) {
            return --t * t * t + 1;
        },
        inOutCubic: function (t) {
            if ((t /= 0.5) < 1)
                return 0.5 * t * t * t;
            return 0.5 * ((t -= 2) * t * t + 2);
        },
        inQuart: function (t) {
            return t * t * t * t;
        },
        outQuart: function (t) {
            return -(--t * t * t * t - 1);
        },
        inOutQuart: function (t) {
            if ((t /= 0.5) < 1)
                return 0.5 * t * t * t * t;
            return -0.5 * ((t -= 2) * t * t * t - 2);
        },
        inQuint: function (t) {
            return t * t * t * t * t;
        },
        outQuint: function (t) {
            return --t * t * t * t * t + 1;
        },
        inOutQuint: function (t) {
            if ((t /= 0.5) < 1)
                return 0.5 * t * t * t * t * t;
            return 0.5 * ((t -= 2) * t * t * t * t + 2);
        },
        inSine: function (t) {
            return -1 * Math.cos(t * (Math.PI / 2)) + 1;
        },
        outSine: function (t) {
            return Math.sin(t * (Math.PI / 2));
        },
        inOutSine: function (t) {
            return -0.5 * (Math.cos(Math.PI * t) - 1);
        },
        inExpo: function (t) {
            return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));
        },
        outExpo: function (t) {
            return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;
        },
        inOutExpo: function (t) {
            if (t === 0)
                return 0;
            if (t === 1)
                return 1;
            if ((t /= 0.5) < 1)
                return 0.5 * Math.pow(2, 10 * (t - 1));
            return 0.5 * (-Math.pow(2, -10 * --t) + 2);
        },
        inCirc: function (t) {
            return -(Math.sqrt(1 - t * t) - 1);
        },
        outCirc: function (t) {
            return Math.sqrt(1 - --t * t);
        },
        inOutCirc: function (t) {
            if ((t /= 0.5) < 1)
                return -0.5 * (Math.sqrt(1 - t * t) - 1);
            return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
        },
        inElastic: function (t) {
            var s = 1.70158;
            var p = 0;
            var a = 1;
            if (t === 0)
                return 0;
            if (t === 1)
                return 1;
            if (!p)
                p = 0.3;
            s = p / (2 * Math.PI) * Math.asin(1 / a);
            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
        },
        outElastic: function (t) {
            var s = 1.70158;
            var p = 0;
            var a = 1;
            if (t === 0)
                return 0;
            if (t === 1)
                return 1;
            if (!p)
                p = 0.3;
            s = p / (2 * Math.PI) * Math.asin(1 / a);
            return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;
        },
        inOutElastic: function (t) {
            var s = 1.70158;
            var p = 0;
            var a = 1;
            if (t === 0)
                return 0;
            if ((t /= 0.5) === 2)
                return 1;
            if (!p)
                p = 0.3 * 1.5;
            s = p / (2 * Math.PI) * Math.asin(1 / a);
            if (t < 1)
                return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;
        },
        inBack: function (t, s) {
            if (s === undefined)
                s = 1.70158;
            return t * t * ((s + 1) * t - s);
        },
        outBack: function (t, s) {
            if (s === undefined)
                s = 1.70158;
            return --t * t * ((s + 1) * t + s) + 1;
        },
        inOutBack: function (t, s) {
            if (s === undefined)
                s = 1.70158;
            if ((t /= 0.5) < 1)
                return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));
            return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);
        },
        inBounce: function (t) {
            return 1 - Easing.outBounce(1 - t);
        },
        outBounce: function (t) {
            if (t < 1 / 2.75) {
                return 7.5625 * t * t;
            } else if (t < 2 / 2.75) {
                return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;
            } else if (t < 2.5 / 2.75) {
                return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;
            } else {
                return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
            }
        },
        inOutBounce: function (t) {
            if (t < 0.5)
                return Easing.inBounce(t * 2) * 0.5;
            return Easing.outBounce(t * 2 - 1) * 0.5 + 0.5;
        }
    };
module.exports = Easing;
},{}],43:[function(require,module,exports){
var Utility = require('./..\\utilities\\Utility');
function MultipleTransition(method) {
    this.method = method;
    this._instances = [];
    this.state = [];
}
MultipleTransition.SUPPORTS_MULTIPLE = true;
MultipleTransition.prototype.get = function get() {
    for (var i = 0; i < this._instances.length; i++) {
        this.state[i] = this._instances[i].get();
    }
    return this.state;
};
MultipleTransition.prototype.set = function set(endState, transition, callback) {
    var _allCallback = Utility.after(endState.length, callback);
    for (var i = 0; i < endState.length; i++) {
        if (!this._instances[i])
            this._instances[i] = new this.method();
        this._instances[i].set(endState[i], transition, _allCallback);
    }
};
MultipleTransition.prototype.reset = function reset(startState) {
    for (var i = 0; i < startState.length; i++) {
        if (!this._instances[i])
            this._instances[i] = new this.method();
        this._instances[i].reset(startState[i]);
    }
};
module.exports = MultipleTransition;
},{"./..\\utilities\\Utility":49}],44:[function(require,module,exports){
var PE = require('./..\\physics\\PhysicsEngine');
var Particle = require('./..\\physics\\bodies\\Particle');
var Spring = require('./..\\physics\\constraints\\Snap');
var Vector = require('./..\\math\\Vector');
function SnapTransition(state) {
    state = state || 0;
    this.endState = new Vector(state);
    this.initState = new Vector();
    this._dimensions = 1;
    this._restTolerance = 1e-10;
    this._absRestTolerance = this._restTolerance;
    this._callback = undefined;
    this.PE = new PE();
    this.particle = new Particle();
    this.spring = new Spring({ anchor: this.endState });
    this.PE.addBody(this.particle);
    this.PE.attach(this.spring, this.particle);
}
SnapTransition.SUPPORTS_MULTIPLE = 3;
SnapTransition.DEFAULT_OPTIONS = {
    period: 100,
    dampingRatio: 0.2,
    velocity: 0
};
function _getEnergy() {
    return this.particle.getEnergy() + this.spring.getEnergy(this.particle);
}
function _setAbsoluteRestTolerance() {
    var distance = this.endState.sub(this.initState).normSquared();
    this._absRestTolerance = distance === 0 ? this._restTolerance : this._restTolerance * distance;
}
function _setTarget(target) {
    this.endState.set(target);
    _setAbsoluteRestTolerance.call(this);
}
function _wake() {
    this.PE.wake();
}
function _sleep() {
    this.PE.sleep();
}
function _setParticlePosition(p) {
    this.particle.position.set(p);
}
function _setParticleVelocity(v) {
    this.particle.velocity.set(v);
}
function _getParticlePosition() {
    return this._dimensions === 0 ? this.particle.getPosition1D() : this.particle.getPosition();
}
function _getParticleVelocity() {
    return this._dimensions === 0 ? this.particle.getVelocity1D() : this.particle.getVelocity();
}
function _setCallback(callback) {
    this._callback = callback;
}
function _setupDefinition(definition) {
    var defaults = SnapTransition.DEFAULT_OPTIONS;
    if (definition.period === undefined)
        definition.period = defaults.period;
    if (definition.dampingRatio === undefined)
        definition.dampingRatio = defaults.dampingRatio;
    if (definition.velocity === undefined)
        definition.velocity = defaults.velocity;
    this.spring.setOptions({
        period: definition.period,
        dampingRatio: definition.dampingRatio
    });
    _setParticleVelocity.call(this, definition.velocity);
}
function _update() {
    if (this.PE.isSleeping()) {
        if (this._callback) {
            var cb = this._callback;
            this._callback = undefined;
            cb();
        }
        return;
    }
    if (_getEnergy.call(this) < this._absRestTolerance) {
        _setParticlePosition.call(this, this.endState);
        _setParticleVelocity.call(this, [
            0,
            0,
            0
        ]);
        _sleep.call(this);
    }
}
SnapTransition.prototype.reset = function reset(state, velocity) {
    this._dimensions = state instanceof Array ? state.length : 0;
    this.initState.set(state);
    _setParticlePosition.call(this, state);
    _setTarget.call(this, state);
    if (velocity)
        _setParticleVelocity.call(this, velocity);
    _setCallback.call(this, undefined);
};
SnapTransition.prototype.getVelocity = function getVelocity() {
    return _getParticleVelocity.call(this);
};
SnapTransition.prototype.setVelocity = function setVelocity(velocity) {
    this.call(this, _setParticleVelocity(velocity));
};
SnapTransition.prototype.isActive = function isActive() {
    return !this.PE.isSleeping();
};
SnapTransition.prototype.halt = function halt() {
    this.set(this.get());
};
SnapTransition.prototype.get = function get() {
    _update.call(this);
    return _getParticlePosition.call(this);
};
SnapTransition.prototype.set = function set(state, definition, callback) {
    if (!definition) {
        this.reset(state);
        if (callback)
            callback();
        return;
    }
    this._dimensions = state instanceof Array ? state.length : 0;
    _wake.call(this);
    _setupDefinition.call(this, definition);
    _setTarget.call(this, state);
    _setCallback.call(this, callback);
};
module.exports = SnapTransition;
},{"./..\\math\\Vector":28,"./..\\physics\\PhysicsEngine":31,"./..\\physics\\bodies\\Particle":32,"./..\\physics\\constraints\\Snap":34}],45:[function(require,module,exports){
var MultipleTransition = require('./MultipleTransition');
var TweenTransition = require('./TweenTransition');
function Transitionable(start) {
    this.currentAction = null;
    this.actionQueue = [];
    this.callbackQueue = [];
    this.state = 0;
    this.velocity = undefined;
    this._callback = undefined;
    this._engineInstance = null;
    this._currentMethod = null;
    this.set(start);
}
var transitionMethods = {};
Transitionable.registerMethod = function registerMethod(name, engineClass) {
    if (!(name in transitionMethods)) {
        transitionMethods[name] = engineClass;
        return true;
    } else
        return false;
};
Transitionable.unregisterMethod = function unregisterMethod(name) {
    if (name in transitionMethods) {
        delete transitionMethods[name];
        return true;
    } else
        return false;
};
function _loadNext() {
    if (this._callback) {
        var callback = this._callback;
        this._callback = undefined;
        callback();
    }
    if (this.actionQueue.length <= 0) {
        this.set(this.get());
        return;
    }
    this.currentAction = this.actionQueue.shift();
    this._callback = this.callbackQueue.shift();
    var method = null;
    var endValue = this.currentAction[0];
    var transition = this.currentAction[1];
    if (transition instanceof Object && transition.method) {
        method = transition.method;
        if (typeof method === 'string')
            method = transitionMethods[method];
    } else {
        method = TweenTransition;
    }
    if (this._currentMethod !== method) {
        if (!(endValue instanceof Object) || method.SUPPORTS_MULTIPLE === true || endValue.length <= method.SUPPORTS_MULTIPLE) {
            this._engineInstance = new method();
        } else {
            this._engineInstance = new MultipleTransition(method);
        }
        this._currentMethod = method;
    }
    this._engineInstance.reset(this.state, this.velocity);
    if (this.velocity !== undefined)
        transition.velocity = this.velocity;
    this._engineInstance.set(endValue, transition, _loadNext.bind(this));
}
Transitionable.prototype.set = function set(endState, transition, callback) {
    if (!transition) {
        this.reset(endState);
        if (callback)
            callback();
        return this;
    }
    var action = [
            endState,
            transition
        ];
    this.actionQueue.push(action);
    this.callbackQueue.push(callback);
    if (!this.currentAction)
        _loadNext.call(this);
    return this;
};
Transitionable.prototype.reset = function reset(startState, startVelocity) {
    this._currentMethod = null;
    this._engineInstance = null;
    this._callback = undefined;
    this.state = startState;
    this.velocity = startVelocity;
    this.currentAction = null;
    this.actionQueue = [];
    this.callbackQueue = [];
};
Transitionable.prototype.delay = function delay(duration, callback) {
    this.set(this.get(), {
        duration: duration,
        curve: function () {
            return 0;
        }
    }, callback);
};
Transitionable.prototype.get = function get(timestamp) {
    if (this._engineInstance) {
        if (this._engineInstance.getVelocity)
            this.velocity = this._engineInstance.getVelocity();
        this.state = this._engineInstance.get(timestamp);
    }
    return this.state;
};
Transitionable.prototype.isActive = function isActive() {
    return !!this.currentAction;
};
Transitionable.prototype.halt = function halt() {
    this.set(this.get());
};
module.exports = Transitionable;
},{"./MultipleTransition":43,"./TweenTransition":47}],46:[function(require,module,exports){
var Transitionable = require('./Transitionable');
var Transform = require('./..\\core\\Transform');
var Utility = require('./..\\utilities\\Utility');
function TransitionableTransform(transform) {
    this._final = Transform.identity.slice();
    this.translate = new Transitionable([
        0,
        0,
        0
    ]);
    this.rotate = new Transitionable([
        0,
        0,
        0
    ]);
    this.skew = new Transitionable([
        0,
        0,
        0
    ]);
    this.scale = new Transitionable([
        1,
        1,
        1
    ]);
    if (transform)
        this.set(transform);
}
function _build() {
    return Transform.build({
        translate: this.translate.get(),
        rotate: this.rotate.get(),
        skew: this.skew.get(),
        scale: this.scale.get()
    });
}
TransitionableTransform.prototype.setTranslate = function setTranslate(translate, transition, callback) {
    this.translate.set(translate, transition, callback);
    this._final = this._final.slice();
    this._final[12] = translate[0];
    this._final[13] = translate[1];
    if (translate[2] !== undefined)
        this._final[14] = translate[2];
    return this;
};
TransitionableTransform.prototype.setScale = function setScale(scale, transition, callback) {
    this.scale.set(scale, transition, callback);
    this._final = this._final.slice();
    this._final[0] = scale[0];
    this._final[5] = scale[1];
    if (scale[2] !== undefined)
        this._final[10] = scale[2];
    return this;
};
TransitionableTransform.prototype.setRotate = function setRotate(eulerAngles, transition, callback) {
    this.rotate.set(eulerAngles, transition, callback);
    this._final = _build.call(this);
    this._final = Transform.build({
        translate: this.translate.get(),
        rotate: eulerAngles,
        scale: this.scale.get(),
        skew: this.skew.get()
    });
    return this;
};
TransitionableTransform.prototype.setSkew = function setSkew(skewAngles, transition, callback) {
    this.skew.set(skewAngles, transition, callback);
    this._final = Transform.build({
        translate: this.translate.get(),
        rotate: this.rotate.get(),
        scale: this.scale.get(),
        skew: skewAngles
    });
    return this;
};
TransitionableTransform.prototype.set = function set(transform, transition, callback) {
    this._final = transform;
    var components = Transform.interpret(transform);
    var _callback = callback ? Utility.after(4, callback) : null;
    this.translate.set(components.translate, transition, _callback);
    this.rotate.set(components.rotate, transition, _callback);
    this.skew.set(components.skew, transition, _callback);
    this.scale.set(components.scale, transition, _callback);
    return this;
};
TransitionableTransform.prototype.setDefaultTransition = function setDefaultTransition(transition) {
    this.translate.setDefault(transition);
    this.rotate.setDefault(transition);
    this.skew.setDefault(transition);
    this.scale.setDefault(transition);
};
TransitionableTransform.prototype.get = function get() {
    if (this.isActive()) {
        return _build.call(this);
    } else
        return this._final;
};
TransitionableTransform.prototype.getFinal = function getFinal() {
    return this._final;
};
TransitionableTransform.prototype.isActive = function isActive() {
    return this.translate.isActive() || this.rotate.isActive() || this.scale.isActive() || this.skew.isActive();
};
TransitionableTransform.prototype.halt = function halt() {
    this._final = this.get();
    this.translate.halt();
    this.rotate.halt();
    this.skew.halt();
    this.scale.halt();
};
module.exports = TransitionableTransform;
},{"./..\\core\\Transform":19,"./..\\utilities\\Utility":49,"./Transitionable":45}],47:[function(require,module,exports){
function TweenTransition(options) {
    this.options = Object.create(TweenTransition.DEFAULT_OPTIONS);
    if (options)
        this.setOptions(options);
    this._startTime = 0;
    this._startValue = 0;
    this._updateTime = 0;
    this._endValue = 0;
    this._curve = undefined;
    this._duration = 0;
    this._active = false;
    this._callback = undefined;
    this.state = 0;
    this.velocity = undefined;
}
TweenTransition.Curves = {
    linear: function (t) {
        return t;
    },
    easeIn: function (t) {
        return t * t;
    },
    easeOut: function (t) {
        return t * (2 - t);
    },
    easeInOut: function (t) {
        if (t <= 0.5)
            return 2 * t * t;
        else
            return -2 * t * t + 4 * t - 1;
    },
    easeOutBounce: function (t) {
        return t * (3 - 2 * t);
    },
    spring: function (t) {
        return (1 - t) * Math.sin(6 * Math.PI * t) + t;
    }
};
TweenTransition.SUPPORTS_MULTIPLE = true;
TweenTransition.DEFAULT_OPTIONS = {
    curve: TweenTransition.Curves.linear,
    duration: 500,
    speed: 0
};
var registeredCurves = {};
TweenTransition.registerCurve = function registerCurve(curveName, curve) {
    if (!registeredCurves[curveName]) {
        registeredCurves[curveName] = curve;
        return true;
    } else {
        return false;
    }
};
TweenTransition.unregisterCurve = function unregisterCurve(curveName) {
    if (registeredCurves[curveName]) {
        delete registeredCurves[curveName];
        return true;
    } else {
        return false;
    }
};
TweenTransition.getCurve = function getCurve(curveName) {
    var curve = registeredCurves[curveName];
    if (curve !== undefined)
        return curve;
    else
        throw new Error('curve not registered');
};
TweenTransition.getCurves = function getCurves() {
    return registeredCurves;
};
function _interpolate(a, b, t) {
    return (1 - t) * a + t * b;
}
function _clone(obj) {
    if (obj instanceof Object) {
        if (obj instanceof Array)
            return obj.slice(0);
        else
            return Object.create(obj);
    } else
        return obj;
}
function _normalize(transition, defaultTransition) {
    var result = { curve: defaultTransition.curve };
    if (defaultTransition.duration)
        result.duration = defaultTransition.duration;
    if (defaultTransition.speed)
        result.speed = defaultTransition.speed;
    if (transition instanceof Object) {
        if (transition.duration !== undefined)
            result.duration = transition.duration;
        if (transition.curve)
            result.curve = transition.curve;
        if (transition.speed)
            result.speed = transition.speed;
    }
    if (typeof result.curve === 'string')
        result.curve = TweenTransition.getCurve(result.curve);
    return result;
}
TweenTransition.prototype.setOptions = function setOptions(options) {
    if (options.curve !== undefined)
        this.options.curve = options.curve;
    if (options.duration !== undefined)
        this.options.duration = options.duration;
    if (options.speed !== undefined)
        this.options.speed = options.speed;
};
TweenTransition.prototype.set = function set(endValue, transition, callback) {
    if (!transition) {
        this.reset(endValue);
        if (callback)
            callback();
        return;
    }
    this._startValue = _clone(this.get());
    transition = _normalize(transition, this.options);
    if (transition.speed) {
        var startValue = this._startValue;
        if (startValue instanceof Object) {
            var variance = 0;
            for (var i in startValue)
                variance += (endValue[i] - startValue[i]) * (endValue[i] - startValue[i]);
            transition.duration = Math.sqrt(variance) / transition.speed;
        } else {
            transition.duration = Math.abs(endValue - startValue) / transition.speed;
        }
    }
    this._startTime = Date.now();
    this._endValue = _clone(endValue);
    this._startVelocity = _clone(transition.velocity);
    this._duration = transition.duration;
    this._curve = transition.curve;
    this._active = true;
    this._callback = callback;
};
TweenTransition.prototype.reset = function reset(startValue, startVelocity) {
    if (this._callback) {
        var callback = this._callback;
        this._callback = undefined;
        callback();
    }
    this.state = _clone(startValue);
    this.velocity = _clone(startVelocity);
    this._startTime = 0;
    this._duration = 0;
    this._updateTime = 0;
    this._startValue = this.state;
    this._startVelocity = this.velocity;
    this._endValue = this.state;
    this._active = false;
};
TweenTransition.prototype.getVelocity = function getVelocity() {
    return this.velocity;
};
TweenTransition.prototype.get = function get(timestamp) {
    this.update(timestamp);
    return this.state;
};
function _calculateVelocity(current, start, curve, duration, t) {
    var velocity;
    var eps = 1e-7;
    var speed = (curve(t) - curve(t - eps)) / eps;
    if (current instanceof Array) {
        velocity = [];
        for (var i = 0; i < current.length; i++) {
            if (typeof current[i] === 'number')
                velocity[i] = speed * (current[i] - start[i]) / duration;
            else
                velocity[i] = 0;
        }
    } else
        velocity = speed * (current - start) / duration;
    return velocity;
}
function _calculateState(start, end, t) {
    var state;
    if (start instanceof Array) {
        state = [];
        for (var i = 0; i < start.length; i++) {
            if (typeof start[i] === 'number')
                state[i] = _interpolate(start[i], end[i], t);
            else
                state[i] = start[i];
        }
    } else
        state = _interpolate(start, end, t);
    return state;
}
TweenTransition.prototype.update = function update(timestamp) {
    if (!this._active) {
        if (this._callback) {
            var callback = this._callback;
            this._callback = undefined;
            callback();
        }
        return;
    }
    if (!timestamp)
        timestamp = Date.now();
    if (this._updateTime >= timestamp)
        return;
    this._updateTime = timestamp;
    var timeSinceStart = timestamp - this._startTime;
    if (timeSinceStart >= this._duration) {
        this.state = this._endValue;
        this.velocity = _calculateVelocity(this.state, this._startValue, this._curve, this._duration, 1);
        this._active = false;
    } else if (timeSinceStart < 0) {
        this.state = this._startValue;
        this.velocity = this._startVelocity;
    } else {
        var t = timeSinceStart / this._duration;
        this.state = _calculateState(this._startValue, this._endValue, this._curve(t));
        this.velocity = _calculateVelocity(this.state, this._startValue, this._curve, this._duration, t);
    }
};
TweenTransition.prototype.isActive = function isActive() {
    return this._active;
};
TweenTransition.prototype.halt = function halt() {
    this.reset(this.get());
};
TweenTransition.registerCurve('linear', TweenTransition.Curves.linear);
TweenTransition.registerCurve('easeIn', TweenTransition.Curves.easeIn);
TweenTransition.registerCurve('easeOut', TweenTransition.Curves.easeOut);
TweenTransition.registerCurve('easeInOut', TweenTransition.Curves.easeInOut);
TweenTransition.registerCurve('easeOutBounce', TweenTransition.Curves.easeOutBounce);
TweenTransition.registerCurve('spring', TweenTransition.Curves.spring);
TweenTransition.customCurve = function customCurve(v1, v2) {
    v1 = v1 || 0;
    v2 = v2 || 0;
    return function (t) {
        return v1 * t + (-2 * v1 - v2 + 3) * t * t + (v1 + v2 - 2) * t * t * t;
    };
};
module.exports = TweenTransition;
},{}],48:[function(require,module,exports){
var FamousEngine = require('./..\\core\\Engine');
var _event = 'prerender';
var getTime = window.performance ? function () {
        return window.performance.now();
    } : function () {
        return Date.now();
    };
function addTimerFunction(fn) {
    FamousEngine.on(_event, fn);
    return fn;
}
function setTimeout(fn, duration) {
    var t = getTime();
    var callback = function () {
        var t2 = getTime();
        if (t2 - t >= duration) {
            fn.apply(this, arguments);
            FamousEngine.removeListener(_event, callback);
        }
    };
    return addTimerFunction(callback);
}
function setInterval(fn, duration) {
    var t = getTime();
    var callback = function () {
        var t2 = getTime();
        if (t2 - t >= duration) {
            fn.apply(this, arguments);
            t = getTime();
        }
    };
    return addTimerFunction(callback);
}
function after(fn, numTicks) {
    if (numTicks === undefined)
        return undefined;
    var callback = function () {
        numTicks--;
        if (numTicks <= 0) {
            fn.apply(this, arguments);
            clear(callback);
        }
    };
    return addTimerFunction(callback);
}
function every(fn, numTicks) {
    numTicks = numTicks || 1;
    var initial = numTicks;
    var callback = function () {
        numTicks--;
        if (numTicks <= 0) {
            fn.apply(this, arguments);
            numTicks = initial;
        }
    };
    return addTimerFunction(callback);
}
function clear(fn) {
    FamousEngine.removeListener(_event, fn);
}
function debounce(func, wait) {
    var timeout;
    var ctx;
    var timestamp;
    var result;
    var args;
    return function () {
        ctx = this;
        args = arguments;
        timestamp = getTime();
        var fn = function () {
            var last = getTime - timestamp;
            if (last < wait) {
                timeout = setTimeout(fn, wait - last);
            } else {
                timeout = null;
                result = func.apply(ctx, args);
            }
        };
        clear(timeout);
        timeout = setTimeout(fn, wait);
        return result;
    };
}
module.exports = {
    setTimeout: setTimeout,
    setInterval: setInterval,
    debounce: debounce,
    after: after,
    every: every,
    clear: clear
};
},{"./..\\core\\Engine":9}],49:[function(require,module,exports){
var Utility = {};
Utility.Direction = {
    X: 0,
    Y: 1,
    Z: 2
};
Utility.after = function after(count, callback) {
    var counter = count;
    return function () {
        counter--;
        if (counter === 0)
            callback.apply(this, arguments);
    };
};
Utility.loadURL = function loadURL(url, callback) {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function onreadystatechange() {
        if (this.readyState === 4) {
            if (callback)
                callback(this.responseText);
        }
    };
    xhr.open('GET', url);
    xhr.send();
};
Utility.createDocumentFragmentFromHTML = function createDocumentFragmentFromHTML(html) {
    var element = document.createElement('div');
    element.innerHTML = html;
    var result = document.createDocumentFragment();
    while (element.hasChildNodes())
        result.appendChild(element.firstChild);
    return result;
};
module.exports = Utility;
},{}],50:[function(require,module,exports){
var Entity = require('./..\\core\\Entity');
var Transform = require('./..\\core\\Transform');
var OptionsManager = require('./..\\core\\OptionsManager');
var EventHandler = require('./..\\core\\EventHandler');
var Transitionable = require('./..\\transitions\\Transitionable');
function FlexibleLayout(options) {
    this.options = Object.create(FlexibleLayout.DEFAULT_OPTIONS);
    this.optionsManager = new OptionsManager(this.options);
    if (options)
        this.setOptions(options);
    this.id = Entity.register(this);
    this._ratios = new Transitionable(this.options.ratios);
    this._nodes = [];
    this._cachedDirection = null;
    this._cachedTotalLength = false;
    this._cachedLengths = [];
    this._cachedTransforms = null;
    this._ratiosDirty = false;
    this._eventOutput = new EventHandler();
    EventHandler.setOutputHandler(this, this._eventOutput);
}
FlexibleLayout.DIRECTION_X = 0;
FlexibleLayout.DIRECTION_Y = 1;
FlexibleLayout.DEFAULT_OPTIONS = {
    direction: FlexibleLayout.DIRECTION_X,
    transition: false,
    ratios: []
};
function _reflow(ratios, length, direction) {
    var currTransform;
    var translation = 0;
    var flexLength = length;
    var ratioSum = 0;
    var ratio;
    var node;
    var i;
    this._cachedLengths = [];
    this._cachedTransforms = [];
    for (i = 0; i < ratios.length; i++) {
        ratio = ratios[i];
        node = this._nodes[i];
        if (typeof ratio !== 'number')
            flexLength -= node.getSize()[direction] || 0;
        else
            ratioSum += ratio;
    }
    for (i = 0; i < ratios.length; i++) {
        node = this._nodes[i];
        ratio = ratios[i];
        length = typeof ratio === 'number' ? flexLength * ratio / ratioSum : node.getSize()[direction];
        currTransform = direction === FlexibleLayout.DIRECTION_X ? Transform.translate(translation, 0, 0) : Transform.translate(0, translation, 0);
        this._cachedTransforms.push(currTransform);
        this._cachedLengths.push(length);
        translation += length;
    }
}
FlexibleLayout.prototype.render = function render() {
    return this.id;
};
FlexibleLayout.prototype.setOptions = function setOptions(options) {
    this.optionsManager.setOptions(options);
};
FlexibleLayout.prototype.sequenceFrom = function sequenceFrom(sequence) {
    this._nodes = sequence;
    if (this._ratios.get().length === 0) {
        var ratios = [];
        for (var i = 0; i < this._nodes.length; i++)
            ratios.push(1);
        this.setRatios(ratios);
    }
};
FlexibleLayout.prototype.setRatios = function setRatios(ratios, transition, callback) {
    if (transition === undefined)
        transition = this.options.transition;
    var currRatios = this._ratios;
    if (currRatios.get().length === 0)
        transition = undefined;
    if (currRatios.isActive())
        currRatios.halt();
    currRatios.set(ratios, transition, callback);
    this._ratiosDirty = true;
};
FlexibleLayout.prototype.commit = function commit(context) {
    var parentSize = context.size;
    var parentTransform = context.transform;
    var parentOrigin = context.origin;
    var ratios = this._ratios.get();
    var direction = this.options.direction;
    var length = parentSize[direction];
    var size;
    if (length !== this._cachedTotalLength || this._ratiosDirty || this._ratios.isActive() || direction !== this._cachedDirection) {
        _reflow.call(this, ratios, length, direction);
        if (length !== this._cachedTotalLength)
            this._cachedTotalLength = length;
        if (direction !== this._cachedDirection)
            this._cachedDirection = direction;
        if (this._ratiosDirty)
            this._ratiosDirty = false;
    }
    var result = [];
    for (var i = 0; i < ratios.length; i++) {
        size = [
            undefined,
            undefined
        ];
        length = this._cachedLengths[i];
        size[direction] = length;
        result.push({
            transform: this._cachedTransforms[i],
            size: size,
            target: this._nodes[i].render()
        });
    }
    if (parentSize && (parentOrigin[0] !== 0 && parentOrigin[1] !== 0))
        parentTransform = Transform.moveThen([
            -parentSize[0] * parentOrigin[0],
            -parentSize[1] * parentOrigin[1],
            0
        ], parentTransform);
    return {
        transform: parentTransform,
        size: parentSize,
        target: result
    };
};
module.exports = FlexibleLayout;
},{"./..\\core\\Entity":10,"./..\\core\\EventHandler":12,"./..\\core\\OptionsManager":15,"./..\\core\\Transform":19,"./..\\transitions\\Transitionable":45}],51:[function(require,module,exports){
var Entity = require('./..\\core\\Entity');
var RenderNode = require('./..\\core\\RenderNode');
var Transform = require('./..\\core\\Transform');
var ViewSequence = require('./..\\core\\ViewSequence');
var EventHandler = require('./..\\core\\EventHandler');
var Modifier = require('./..\\core\\Modifier');
var OptionsManager = require('./..\\core\\OptionsManager');
var Transitionable = require('./..\\transitions\\Transitionable');
var TransitionableTransform = require('./..\\transitions\\TransitionableTransform');
function GridLayout(options) {
    this.options = Object.create(GridLayout.DEFAULT_OPTIONS);
    this.optionsManager = new OptionsManager(this.options);
    if (options)
        this.setOptions(options);
    this.id = Entity.register(this);
    this._modifiers = [];
    this._states = [];
    this._contextSizeCache = [
        0,
        0
    ];
    this._dimensionsCache = [
        0,
        0
    ];
    this._activeCount = 0;
    this._eventOutput = new EventHandler();
    EventHandler.setOutputHandler(this, this._eventOutput);
}
function _reflow(size, cols, rows) {
    var usableSize = [
            size[0],
            size[1]
        ];
    usableSize[0] -= this.options.gutterSize[0] * (cols - 1);
    usableSize[1] -= this.options.gutterSize[1] * (rows - 1);
    var rowSize = Math.round(usableSize[1] / rows);
    var colSize = Math.round(usableSize[0] / cols);
    var currY = 0;
    var currX;
    var currIndex = 0;
    for (var i = 0; i < rows; i++) {
        currX = 0;
        for (var j = 0; j < cols; j++) {
            if (this._modifiers[currIndex] === undefined) {
                _createModifier.call(this, currIndex, [
                    colSize,
                    rowSize
                ], [
                    currX,
                    currY,
                    0
                ], 1);
            } else {
                _animateModifier.call(this, currIndex, [
                    colSize,
                    rowSize
                ], [
                    currX,
                    currY,
                    0
                ], 1);
            }
            currIndex++;
            currX += colSize + this.options.gutterSize[0];
        }
        currY += rowSize + this.options.gutterSize[1];
    }
    this._dimensionsCache = [
        this.options.dimensions[0],
        this.options.dimensions[1]
    ];
    this._contextSizeCache = [
        size[0],
        size[1]
    ];
    this._activeCount = rows * cols;
    for (i = this._activeCount; i < this._modifiers.length; i++)
        _animateModifier.call(this, i, [
            Math.round(colSize),
            Math.round(rowSize)
        ], [
            0,
            0
        ], 0);
    this._eventOutput.emit('reflow');
}
function _createModifier(index, size, position, opacity) {
    var transitionItem = {
            transform: new TransitionableTransform(Transform.translate.apply(null, position)),
            opacity: new Transitionable(opacity),
            size: new Transitionable(size)
        };
    var modifier = new Modifier({
            transform: transitionItem.transform,
            opacity: transitionItem.opacity,
            size: transitionItem.size
        });
    this._states[index] = transitionItem;
    this._modifiers[index] = modifier;
}
function _animateModifier(index, size, position, opacity) {
    var currState = this._states[index];
    var currSize = currState.size;
    var currOpacity = currState.opacity;
    var currTransform = currState.transform;
    var transition = this.options.transition;
    currTransform.halt();
    currOpacity.halt();
    currSize.halt();
    currTransform.setTranslate(position, transition);
    currSize.set(size, transition);
    currOpacity.set(opacity, transition);
}
GridLayout.DEFAULT_OPTIONS = {
    dimensions: [
        1,
        1
    ],
    transition: false,
    gutterSize: [
        0,
        0
    ]
};
GridLayout.prototype.render = function render() {
    return this.id;
};
GridLayout.prototype.setOptions = function setOptions(options) {
    return this.optionsManager.setOptions(options);
};
GridLayout.prototype.sequenceFrom = function sequenceFrom(sequence) {
    if (sequence instanceof Array)
        sequence = new ViewSequence(sequence);
    this.sequence = sequence;
};
GridLayout.prototype.commit = function commit(context) {
    var transform = context.transform;
    var opacity = context.opacity;
    var origin = context.origin;
    var size = context.size;
    var cols = this.options.dimensions[0];
    var rows = this.options.dimensions[1];
    if (size[0] !== this._contextSizeCache[0] || size[1] !== this._contextSizeCache[1] || cols !== this._dimensionsCache[0] || rows !== this._dimensionsCache[1]) {
        _reflow.call(this, size, cols, rows);
    }
    var sequence = this.sequence;
    var result = [];
    var currIndex = 0;
    while (sequence && currIndex < this._modifiers.length) {
        var item = sequence.get();
        var modifier = this._modifiers[currIndex];
        if (currIndex >= this._activeCount && this._states[currIndex].opacity.isActive()) {
            this._modifiers.splice(currIndex, 1);
            this._states.splice(currIndex, 1);
        }
        if (item) {
            result.push(modifier.modify({
                origin: origin,
                target: item.render()
            }));
        }
        sequence = sequence.getNext();
        currIndex++;
    }
    if (size)
        transform = Transform.moveThen([
            -size[0] * origin[0],
            -size[1] * origin[1],
            0
        ], transform);
    return {
        transform: transform,
        opacity: opacity,
        size: size,
        target: result
    };
};
module.exports = GridLayout;
},{"./..\\core\\Entity":10,"./..\\core\\EventHandler":12,"./..\\core\\Modifier":14,"./..\\core\\OptionsManager":15,"./..\\core\\RenderNode":16,"./..\\core\\Transform":19,"./..\\core\\ViewSequence":21,"./..\\transitions\\Transitionable":45,"./..\\transitions\\TransitionableTransform":46}],52:[function(require,module,exports){
var Transform = require('./..\\core\\Transform');
var Modifier = require('./..\\core\\Modifier');
var RenderNode = require('./..\\core\\RenderNode');
var Utility = require('./..\\utilities\\Utility');
var OptionsManager = require('./..\\core\\OptionsManager');
var Transitionable = require('./..\\transitions\\Transitionable');
var TransitionableTransform = require('./..\\transitions\\TransitionableTransform');
function Lightbox(options) {
    this.options = Object.create(Lightbox.DEFAULT_OPTIONS);
    this._optionsManager = new OptionsManager(this.options);
    if (options)
        this.setOptions(options);
    this._showing = false;
    this.nodes = [];
    this.transforms = [];
    this.states = [];
}
Lightbox.DEFAULT_OPTIONS = {
    inTransform: Transform.scale(0.001, 0.001, 0.001),
    inOpacity: 0,
    inOrigin: [
        0.5,
        0.5
    ],
    outTransform: Transform.scale(0.001, 0.001, 0.001),
    outOpacity: 0,
    outOrigin: [
        0.5,
        0.5
    ],
    showTransform: Transform.identity,
    showOpacity: 1,
    showOrigin: [
        0.5,
        0.5
    ],
    inTransition: true,
    outTransition: true,
    overlap: false
};
Lightbox.prototype.setOptions = function setOptions(options) {
    return this._optionsManager.setOptions(options);
};
Lightbox.prototype.show = function show(renderable, transition, callback) {
    if (!renderable) {
        return this.hide(callback);
    }
    if (transition instanceof Function) {
        callback = transition;
        transition = undefined;
    }
    if (this._showing) {
        if (this.options.overlap)
            this.hide();
        else {
            return this.hide(this.show.bind(this, renderable, transition, callback));
        }
    }
    this._showing = true;
    var stateItem = {
            transform: new TransitionableTransform(this.options.inTransform),
            origin: new Transitionable(this.options.inOrigin),
            opacity: new Transitionable(this.options.inOpacity)
        };
    var transform = new Modifier({
            transform: stateItem.transform,
            opacity: stateItem.opacity,
            origin: stateItem.origin
        });
    var node = new RenderNode();
    node.add(transform).add(renderable);
    this.nodes.push(node);
    this.states.push(stateItem);
    this.transforms.push(transform);
    var _cb = callback ? Utility.after(3, callback) : undefined;
    if (!transition)
        transition = this.options.inTransition;
    stateItem.transform.set(this.options.showTransform, transition, _cb);
    stateItem.opacity.set(this.options.showOpacity, transition, _cb);
    stateItem.origin.set(this.options.showOrigin, transition, _cb);
};
Lightbox.prototype.hide = function hide(transition, callback) {
    if (!this._showing)
        return;
    this._showing = false;
    if (transition instanceof Function) {
        callback = transition;
        transition = undefined;
    }
    var node = this.nodes[this.nodes.length - 1];
    var transform = this.transforms[this.transforms.length - 1];
    var stateItem = this.states[this.states.length - 1];
    var _cb = Utility.after(3, function () {
            this.nodes.splice(this.nodes.indexOf(node), 1);
            this.states.splice(this.states.indexOf(stateItem), 1);
            this.transforms.splice(this.transforms.indexOf(transform), 1);
            if (callback)
                callback.call(this);
        }.bind(this));
    if (!transition)
        transition = this.options.outTransition;
    stateItem.transform.set(this.options.outTransform, transition, _cb);
    stateItem.opacity.set(this.options.outOpacity, transition, _cb);
    stateItem.origin.set(this.options.outOrigin, transition, _cb);
};
Lightbox.prototype.render = function render() {
    var result = [];
    for (var i = 0; i < this.nodes.length; i++) {
        result.push(this.nodes[i].render());
    }
    return result;
};
module.exports = Lightbox;
},{"./..\\core\\Modifier":14,"./..\\core\\OptionsManager":15,"./..\\core\\RenderNode":16,"./..\\core\\Transform":19,"./..\\transitions\\Transitionable":45,"./..\\transitions\\TransitionableTransform":46,"./..\\utilities\\Utility":49}],53:[function(require,module,exports){
var Modifier = require('./..\\core\\Modifier');
var RenderNode = require('./..\\core\\RenderNode');
var Transform = require('./..\\core\\Transform');
var Transitionable = require('./..\\transitions\\Transitionable');
var View = require('./..\\core\\View');
function RenderController(options) {
    View.apply(this, arguments);
    this._showing = -1;
    this._outgoingRenderables = [];
    this._nextRenderable = null;
    this._renderables = [];
    this._nodes = [];
    this._modifiers = [];
    this._states = [];
    this.inTransformMap = RenderController.DefaultMap.transform;
    this.inOpacityMap = RenderController.DefaultMap.opacity;
    this.inOriginMap = RenderController.DefaultMap.origin;
    this.outTransformMap = RenderController.DefaultMap.transform;
    this.outOpacityMap = RenderController.DefaultMap.opacity;
    this.outOriginMap = RenderController.DefaultMap.origin;
    this._output = [];
}
RenderController.prototype = Object.create(View.prototype);
RenderController.prototype.constructor = RenderController;
RenderController.DEFAULT_OPTIONS = {
    inTransition: true,
    outTransition: true,
    overlap: true
};
RenderController.DefaultMap = {
    transform: function () {
        return Transform.identity;
    },
    opacity: function (progress) {
        return progress;
    },
    origin: null
};
function _mappedState(map, state) {
    return map(state.get());
}
RenderController.prototype.inTransformFrom = function inTransformFrom(transform) {
    if (transform instanceof Function)
        this.inTransformMap = transform;
    else if (transform && transform.get)
        this.inTransformMap = transform.get.bind(transform);
    else
        throw new Error('inTransformFrom takes only function or getter object');
    return this;
};
RenderController.prototype.inOpacityFrom = function inOpacityFrom(opacity) {
    if (opacity instanceof Function)
        this.inOpacityMap = opacity;
    else if (opacity && opacity.get)
        this.inOpacityMap = opacity.get.bind(opacity);
    else
        throw new Error('inOpacityFrom takes only function or getter object');
    return this;
};
RenderController.prototype.inOriginFrom = function inOriginFrom(origin) {
    if (origin instanceof Function)
        this.inOriginMap = origin;
    else if (origin && origin.get)
        this.inOriginMap = origin.get.bind(origin);
    else
        throw new Error('inOriginFrom takes only function or getter object');
    return this;
};
RenderController.prototype.outTransformFrom = function outTransformFrom(transform) {
    if (transform instanceof Function)
        this.outTransformMap = transform;
    else if (transform && transform.get)
        this.outTransformMap = transform.get.bind(transform);
    else
        throw new Error('inTransformFrom takes only function or getter object');
    return this;
};
RenderController.prototype.outOpacityFrom = function outOpacityFrom(opacity) {
    if (opacity instanceof Function)
        this.outOpacityMap = opacity;
    else if (opacity && opacity.get)
        this.outOpacityMap = opacity.get.bind(opacity);
    else
        throw new Error('inOpacityFrom takes only function or getter object');
    return this;
};
RenderController.prototype.outOriginFrom = function outOriginFrom(origin) {
    if (origin instanceof Function)
        this.outOriginMap = origin;
    else if (origin && origin.get)
        this.outOriginMap = origin.get.bind(origin);
    else
        throw new Error('inOriginFrom takes only function or getter object');
    return this;
};
RenderController.prototype.show = function show(renderable, transition, callback) {
    if (!renderable) {
        return this.hide(callback);
    }
    if (transition instanceof Function) {
        callback = transition;
        transition = null;
    }
    if (this._showing >= 0) {
        if (this.options.overlap)
            this.hide();
        else {
            if (this._nextRenderable) {
                this._nextRenderable = renderable;
            } else {
                this._nextRenderable = renderable;
                this.hide(function () {
                    if (this._nextRenderable === renderable)
                        this.show(this._nextRenderable, callback);
                    this._nextRenderable = null;
                });
            }
            return undefined;
        }
    }
    var state = null;
    var renderableIndex = this._renderables.indexOf(renderable);
    if (renderableIndex >= 0) {
        this._showing = renderableIndex;
        state = this._states[renderableIndex];
        state.halt();
        var outgoingIndex = this._outgoingRenderables.indexOf(renderable);
        if (outgoingIndex >= 0)
            this._outgoingRenderables.splice(outgoingIndex, 1);
    } else {
        state = new Transitionable(0);
        var modifier = new Modifier({
                transform: this.inTransformMap ? _mappedState.bind(this, this.inTransformMap, state) : null,
                opacity: this.inOpacityMap ? _mappedState.bind(this, this.inOpacityMap, state) : null,
                origin: this.inOriginMap ? _mappedState.bind(this, this.inOriginMap, state) : null
            });
        var node = new RenderNode();
        node.add(modifier).add(renderable);
        this._showing = this._nodes.length;
        this._nodes.push(node);
        this._modifiers.push(modifier);
        this._states.push(state);
        this._renderables.push(renderable);
    }
    if (!transition)
        transition = this.options.inTransition;
    state.set(1, transition, callback);
};
RenderController.prototype.hide = function hide(transition, callback) {
    if (this._showing < 0)
        return;
    var index = this._showing;
    this._showing = -1;
    if (transition instanceof Function) {
        callback = transition;
        transition = undefined;
    }
    var node = this._nodes[index];
    var modifier = this._modifiers[index];
    var state = this._states[index];
    var renderable = this._renderables[index];
    modifier.transformFrom(this.outTransformMap ? _mappedState.bind(this, this.outTransformMap, state) : null);
    modifier.opacityFrom(this.outOpacityMap ? _mappedState.bind(this, this.outOpacityMap, state) : null);
    modifier.originFrom(this.outOriginMap ? _mappedState.bind(this, this.outOriginMap, state) : null);
    if (this._outgoingRenderables.indexOf(renderable) < 0)
        this._outgoingRenderables.push(renderable);
    if (!transition)
        transition = this.options.outTransition;
    state.halt();
    state.set(0, transition, function (node, modifier, state, renderable) {
        if (this._outgoingRenderables.indexOf(renderable) >= 0) {
            var index = this._nodes.indexOf(node);
            this._nodes.splice(index, 1);
            this._modifiers.splice(index, 1);
            this._states.splice(index, 1);
            this._renderables.splice(index, 1);
            this._outgoingRenderables.splice(this._outgoingRenderables.indexOf(renderable), 1);
            if (this._showing >= index)
                this._showing--;
        }
        if (callback)
            callback.call(this);
    }.bind(this, node, modifier, state, renderable));
};
RenderController.prototype.render = function render() {
    var result = this._output;
    if (result.length > this._nodes.length)
        result.splice(this._nodes.length);
    for (var i = 0; i < this._nodes.length; i++) {
        result[i] = this._nodes[i].render();
    }
    return result;
};
module.exports = RenderController;
},{"./..\\core\\Modifier":14,"./..\\core\\RenderNode":16,"./..\\core\\Transform":19,"./..\\core\\View":20,"./..\\transitions\\Transitionable":45}],54:[function(require,module,exports){
var Entity = require('./..\\core\\Entity');
var Group = require('./..\\core\\Group');
var OptionsManager = require('./..\\core\\OptionsManager');
var Transform = require('./..\\core\\Transform');
var Utility = require('./..\\utilities\\Utility');
var ViewSequence = require('./..\\core\\ViewSequence');
var EventHandler = require('./..\\core\\EventHandler');
function Scroller(options) {
    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);
    this._optionsManager = new OptionsManager(this.options);
    if (options)
        this._optionsManager.setOptions(options);
    this._node = null;
    this._position = 0;
    this._positionOffset = 0;
    this._positionGetter = null;
    this._outputFunction = null;
    this._masterOutputFunction = null;
    this.outputFrom();
    this._onEdge = 0;
    this.group = new Group();
    this.group.add({ render: _innerRender.bind(this) });
    this._entityId = Entity.register(this);
    this._size = [
        undefined,
        undefined
    ];
    this._contextSize = [
        undefined,
        undefined
    ];
    this._eventInput = new EventHandler();
    this._eventOutput = new EventHandler();
    EventHandler.setInputHandler(this, this._eventInput);
    EventHandler.setOutputHandler(this, this._eventOutput);
}
Scroller.DEFAULT_OPTIONS = {
    direction: Utility.Direction.Y,
    margin: 0,
    clipSize: undefined,
    groupScroll: false
};
function _sizeForDir(size) {
    if (!size)
        size = this._contextSize;
    var dimension = this.options.direction === Utility.Direction.X ? 0 : 1;
    return size[dimension] === undefined ? this._contextSize[dimension] : size[dimension];
}
function _output(node, offset, target) {
    var size = node.getSize ? node.getSize() : this._contextSize;
    var transform = this._outputFunction(offset);
    target.push({
        transform: transform,
        target: node.render()
    });
    return _sizeForDir.call(this, size);
}
function _getClipSize() {
    if (this.options.clipSize)
        return this.options.clipSize;
    else
        return _sizeForDir.call(this, this._contextSize);
}
Scroller.prototype.setOptions = function setOptions(options) {
    this._optionsManager.setOptions(options);
    if (this.options.groupScroll) {
        this.group.pipe(this._eventOutput);
    } else {
        this.group.unpipe(this._eventOutput);
    }
};
Scroller.prototype.onEdge = function onEdge() {
    return this._onEdge;
};
Scroller.prototype.outputFrom = function outputFrom(fn, masterFn) {
    if (!fn) {
        fn = function (offset) {
            return this.options.direction === Utility.Direction.X ? Transform.translate(offset, 0) : Transform.translate(0, offset);
        }.bind(this);
        if (!masterFn)
            masterFn = fn;
    }
    this._outputFunction = fn;
    this._masterOutputFunction = masterFn ? masterFn : function (offset) {
        return Transform.inverse(fn(-offset));
    };
};
Scroller.prototype.positionFrom = function positionFrom(position) {
    if (position instanceof Function)
        this._positionGetter = position;
    else if (position && position.get)
        this._positionGetter = position.get.bind(position);
    else {
        this._positionGetter = null;
        this._position = position;
    }
    if (this._positionGetter)
        this._position = this._positionGetter.call(this);
};
Scroller.prototype.sequenceFrom = function sequenceFrom(node) {
    if (node instanceof Array)
        node = new ViewSequence({ array: node });
    this._node = node;
    this._positionOffset = 0;
};
Scroller.prototype.getSize = function getSize(actual) {
    return actual ? this._contextSize : this._size;
};
Scroller.prototype.render = function render() {
    if (!this._node)
        return null;
    if (this._positionGetter)
        this._position = this._positionGetter.call(this);
    return this._entityId;
};
Scroller.prototype.commit = function commit(context) {
    var transform = context.transform;
    var opacity = context.opacity;
    var origin = context.origin;
    var size = context.size;
    if (!this.options.clipSize && (size[0] !== this._contextSize[0] || size[1] !== this._contextSize[1])) {
        this._onEdge = 0;
        this._contextSize[0] = size[0];
        this._contextSize[1] = size[1];
        if (this.options.direction === Utility.Direction.X) {
            this._size[0] = _getClipSize.call(this);
            this._size[1] = undefined;
        } else {
            this._size[0] = undefined;
            this._size[1] = _getClipSize.call(this);
        }
    }
    var scrollTransform = this._masterOutputFunction(-this._position);
    return {
        transform: Transform.multiply(transform, scrollTransform),
        size: size,
        opacity: opacity,
        origin: origin,
        target: this.group.render()
    };
};
function _normalizeState() {
    var nodeSize = _sizeForDir.call(this, this._node.getSize());
    var nextNode = this._node && this._node.getNext ? this._node.getNext() : null;
    while (nextNode && this._position + this._positionOffset >= nodeSize) {
        this._positionOffset -= nodeSize;
        this._node = nextNode;
        nodeSize = _sizeForDir.call(this, this._node.getSize());
        nextNode = this._node && this._node.getNext ? this._node.getNext() : null;
    }
    var prevNode = this._node && this._node.getPrevious ? this._node.getPrevious() : null;
    while (prevNode && this._position + this._positionOffset < 0) {
        var prevNodeSize = _sizeForDir.call(this, prevNode.getSize());
        this._positionOffset += prevNodeSize;
        this._node = prevNode;
        prevNode = this._node && this._node.getPrevious ? this._node.getPrevious() : null;
    }
}
function _innerRender() {
    var size = null;
    var position = this._position;
    var result = [];
    this._onEdge = 0;
    var offset = -this._positionOffset;
    var clipSize = _getClipSize.call(this);
    var currNode = this._node;
    while (currNode && offset - position < clipSize + this.options.margin) {
        offset += _output.call(this, currNode, offset, result);
        currNode = currNode.getNext ? currNode.getNext() : null;
    }
    var sizeNode = this._node;
    var nodesSize = _sizeForDir.call(this, sizeNode.getSize());
    if (offset < clipSize) {
        while (sizeNode && nodesSize < clipSize) {
            sizeNode = sizeNode.getPrevious();
            if (sizeNode)
                nodesSize += _sizeForDir.call(this, sizeNode.getSize());
        }
        sizeNode = this._node;
        while (sizeNode && nodesSize < clipSize) {
            sizeNode = sizeNode.getNext();
            if (sizeNode)
                nodesSize += _sizeForDir.call(this, sizeNode.getSize());
        }
    }
    var edgeSize = nodesSize !== undefined && nodesSize < clipSize ? nodesSize : clipSize;
    if (!currNode && offset - position <= edgeSize) {
        this._onEdge = 1;
        this._eventOutput.emit('edgeHit', { position: offset - edgeSize });
    } else if (!this._node.getPrevious() && position <= 0) {
        this._onEdge = -1;
        this._eventOutput.emit('edgeHit', { position: 0 });
    }
    currNode = this._node && this._node.getPrevious ? this._node.getPrevious() : null;
    offset = -this._positionOffset;
    if (currNode) {
        size = currNode.getSize ? currNode.getSize() : this._contextSize;
        offset -= _sizeForDir.call(this, size);
    }
    while (currNode && offset - position > -(_getClipSize.call(this) + this.options.margin)) {
        _output.call(this, currNode, offset, result);
        currNode = currNode.getPrevious ? currNode.getPrevious() : null;
        if (currNode) {
            size = currNode.getSize ? currNode.getSize() : this._contextSize;
            offset -= _sizeForDir.call(this, size);
        }
    }
    _normalizeState.call(this);
    return result;
}
module.exports = Scroller;
},{"./..\\core\\Entity":10,"./..\\core\\EventHandler":12,"./..\\core\\Group":13,"./..\\core\\OptionsManager":15,"./..\\core\\Transform":19,"./..\\core\\ViewSequence":21,"./..\\utilities\\Utility":49}],55:[function(require,module,exports){
var PhysicsEngine = require('./..\\physics\\PhysicsEngine');
var Particle = require('./..\\physics\\bodies\\Particle');
var Drag = require('./..\\physics\\forces\\Drag');
var Spring = require('./..\\physics\\forces\\Spring');
var EventHandler = require('./..\\core\\EventHandler');
var OptionsManager = require('./..\\core\\OptionsManager');
var ViewSequence = require('./..\\core\\ViewSequence');
var Scroller = require('./Scroller');
var Utility = require('./..\\utilities\\Utility');
var GenericSync = require('./..\\inputs\\GenericSync');
var ScrollSync = require('./..\\inputs\\ScrollSync');
var TouchSync = require('./..\\inputs\\TouchSync');
GenericSync.register({
    scroll: ScrollSync,
    touch: TouchSync
});
function Scrollview(options) {
    this.options = Object.create(Scrollview.DEFAULT_OPTIONS);
    this._optionsManager = new OptionsManager(this.options);
    this._node = null;
    this._physicsEngine = new PhysicsEngine();
    this._particle = new Particle();
    this._physicsEngine.addBody(this._particle);
    this.spring = new Spring({
        anchor: [
            0,
            0,
            0
        ]
    });
    this.drag = new Drag({ forceFunction: Drag.FORCE_FUNCTIONS.QUADRATIC });
    this.friction = new Drag({ forceFunction: Drag.FORCE_FUNCTIONS.LINEAR });
    this.sync = new GenericSync([
        'scroll',
        'touch'
    ], { direction: this.options.direction });
    this._eventInput = new EventHandler();
    this._eventOutput = new EventHandler();
    this._eventInput.pipe(this.sync);
    this.sync.pipe(this._eventInput);
    EventHandler.setInputHandler(this, this._eventInput);
    EventHandler.setOutputHandler(this, this._eventOutput);
    this._touchCount = 0;
    this._springState = 0;
    this._onEdge = 0;
    this._pageSpringPosition = 0;
    this._edgeSpringPosition = 0;
    this._touchVelocity = undefined;
    this._earlyEnd = false;
    this._needsPaginationCheck = false;
    this._scroller = new Scroller();
    this._scroller.positionFrom(this.getPosition.bind(this));
    this.setOptions(options);
    _bindEvents.call(this);
}
var TOLERANCE = 0.5;
Scrollview.DEFAULT_OPTIONS = {
    direction: Utility.Direction.Y,
    rails: true,
    friction: 0.001,
    drag: 0.0001,
    edgeGrip: 0.5,
    edgePeriod: 300,
    edgeDamp: 1,
    margin: 1000,
    paginated: false,
    pagePeriod: 500,
    pageDamp: 0.8,
    pageStopSpeed: 10,
    pageSwitchSpeed: 0.5,
    speedLimit: 10,
    groupScroll: false
};
var SpringStates = {
        NONE: 0,
        EDGE: 1,
        PAGE: 2
    };
function _handleStart(event) {
    this._touchCount = event.count;
    if (event.count === undefined)
        this._touchCount = 1;
    _detachAgents.call(this);
    this.setVelocity(0);
    this._touchVelocity = 0;
    this._earlyEnd = false;
}
function _handleMove(event) {
    var velocity = -event.velocity;
    var delta = -event.delta;
    if (this._onEdge && event.slip) {
        if (velocity < 0 && this._onEdge < 0 || velocity > 0 && this._onEdge > 0) {
            if (!this._earlyEnd) {
                _handleEnd.call(this, event);
                this._earlyEnd = true;
            }
        } else if (this._earlyEnd && Math.abs(velocity) > Math.abs(this.getVelocity())) {
            _handleStart.call(this, event);
        }
    }
    if (this._earlyEnd)
        return;
    this._touchVelocity = velocity;
    if (event.slip)
        this.setVelocity(velocity);
    else
        this.setPosition(this.getPosition() + delta);
}
function _handleEnd(event) {
    this._touchCount = event.count || 0;
    if (!this._touchCount) {
        _detachAgents.call(this);
        if (this._onEdge)
            _setSpring.call(this, this._edgeSpringPosition, SpringStates.EDGE);
        _attachAgents.call(this);
        var velocity = -event.velocity;
        var speedLimit = this.options.speedLimit;
        if (event.slip)
            speedLimit *= this.options.edgeGrip;
        if (velocity < -speedLimit)
            velocity = -speedLimit;
        else if (velocity > speedLimit)
            velocity = speedLimit;
        this.setVelocity(velocity);
        this._touchVelocity = undefined;
        this._needsPaginationCheck = true;
    }
}
function _bindEvents() {
    this._eventInput.bindThis(this);
    this._eventInput.on('start', _handleStart);
    this._eventInput.on('update', _handleMove);
    this._eventInput.on('end', _handleEnd);
    this._scroller.on('edgeHit', function (data) {
        this._edgeSpringPosition = data.position;
    }.bind(this));
}
function _attachAgents() {
    if (this._springState)
        this._physicsEngine.attach([this.spring], this._particle);
    else
        this._physicsEngine.attach([
            this.drag,
            this.friction
        ], this._particle);
}
function _detachAgents() {
    this._springState = SpringStates.NONE;
    this._physicsEngine.detachAll();
}
function _nodeSizeForDirection(node) {
    var direction = this.options.direction;
    var nodeSize = (node.getSize() || this._scroller.getSize())[direction];
    if (!nodeSize)
        nodeSize = this._scroller.getSize()[direction];
    return nodeSize;
}
function _handleEdge(edgeDetected) {
    if (!this._onEdge && edgeDetected) {
        this.sync.setOptions({ scale: this.options.edgeGrip });
        if (!this._touchCount && this._springState !== SpringStates.EDGE) {
            _setSpring.call(this, this._edgeSpringPosition, SpringStates.EDGE);
        }
    } else if (this._onEdge && !edgeDetected) {
        this.sync.setOptions({ scale: 1 });
        if (this._springState && Math.abs(this.getVelocity()) < 0.001) {
            _detachAgents.call(this);
            _attachAgents.call(this);
        }
    }
    this._onEdge = edgeDetected;
}
function _handlePagination() {
    if (!this._needsPaginationCheck)
        return;
    if (this._touchCount)
        return;
    if (this._springState === SpringStates.EDGE)
        return;
    var velocity = this.getVelocity();
    if (Math.abs(velocity) >= this.options.pageStopSpeed)
        return;
    var position = this.getPosition();
    var velocitySwitch = Math.abs(velocity) > this.options.pageSwitchSpeed;
    var nodeSize = _nodeSizeForDirection.call(this, this._node);
    var positionNext = position > 0.5 * nodeSize;
    var velocityNext = velocity > 0;
    if (positionNext && !velocitySwitch || velocitySwitch && velocityNext)
        this.goToNextPage();
    else
        _setSpring.call(this, 0, SpringStates.PAGE);
    this._needsPaginationCheck = false;
}
function _setSpring(position, springState) {
    var springOptions;
    if (springState === SpringStates.EDGE) {
        this._edgeSpringPosition = position;
        springOptions = {
            anchor: [
                this._edgeSpringPosition,
                0,
                0
            ],
            period: this.options.edgePeriod,
            dampingRatio: this.options.edgeDamp
        };
    } else if (springState === SpringStates.PAGE) {
        this._pageSpringPosition = position;
        springOptions = {
            anchor: [
                this._pageSpringPosition,
                0,
                0
            ],
            period: this.options.pagePeriod,
            dampingRatio: this.options.pageDamp
        };
    }
    this.spring.setOptions(springOptions);
    if (springState && !this._springState) {
        _detachAgents.call(this);
        this._springState = springState;
        _attachAgents.call(this);
    }
    this._springState = springState;
}
function _normalizeState() {
    var position = this.getPosition();
    var nodeSize = _nodeSizeForDirection.call(this, this._node);
    var nextNode = this._node.getNext();
    while (position > nodeSize + TOLERANCE && nextNode) {
        _shiftOrigin.call(this, -nodeSize);
        position -= nodeSize;
        this._scroller.sequenceFrom(nextNode);
        this._node = nextNode;
        nextNode = this._node.getNext();
        nodeSize = _nodeSizeForDirection.call(this, this._node);
    }
    var previousNode = this._node.getPrevious();
    var previousNodeSize;
    while (position < -TOLERANCE && previousNode) {
        previousNodeSize = _nodeSizeForDirection.call(this, previousNode);
        this._scroller.sequenceFrom(previousNode);
        this._node = previousNode;
        _shiftOrigin.call(this, previousNodeSize);
        position += previousNodeSize;
        previousNode = this._node.getPrevious();
    }
}
function _shiftOrigin(amount) {
    this._edgeSpringPosition += amount;
    this._pageSpringPosition += amount;
    this.setPosition(this.getPosition() + amount);
    if (this._springState === SpringStates.EDGE) {
        this.spring.setOptions({
            anchor: [
                this._edgeSpringPosition,
                0,
                0
            ]
        });
    } else if (this._springState === SpringStates.PAGE) {
        this.spring.setOptions({
            anchor: [
                this._pageSpringPosition,
                0,
                0
            ]
        });
    }
}
Scrollview.prototype.outputFrom = function outputFrom() {
    return this._scroller.outputFrom.apply(this._scroller, arguments);
};
Scrollview.prototype.getPosition = function getPosition() {
    return this._particle.getPosition1D();
};
Scrollview.prototype.setPosition = function setPosition(x) {
    this._particle.setPosition1D(x);
};
Scrollview.prototype.getVelocity = function getVelocity() {
    return this._touchCount ? this._touchVelocity : this._particle.getVelocity1D();
};
Scrollview.prototype.setVelocity = function setVelocity(v) {
    this._particle.setVelocity1D(v);
};
Scrollview.prototype.setOptions = function setOptions(options) {
    if (options) {
        if (options.direction !== undefined) {
            if (options.direction === 'x')
                options.direction = Utility.Direction.X;
            else if (options.direction === 'y')
                options.direction = Utility.Direction.Y;
        }
        this._scroller.setOptions(options);
        this._optionsManager.setOptions(options);
    }
    this._scroller.setOptions(this.options);
    if (this.options.groupScroll)
        this._scroller.pipe(this._eventInput);
    else
        this._scroller.unpipe(this._eventInput);
    this.drag.setOptions({ strength: this.options.drag });
    this.friction.setOptions({ strength: this.options.friction });
    this.spring.setOptions({
        period: this.options.edgePeriod,
        dampingRatio: this.options.edgeDamp
    });
    this.sync.setOptions({
        rails: this.options.rails,
        direction: this.options.direction === Utility.Direction.X ? GenericSync.DIRECTION_X : GenericSync.DIRECTION_Y
    });
};
Scrollview.prototype.goToPreviousPage = function goToPreviousPage() {
    if (!this._node)
        return null;
    var previousNode = this._node.getPrevious();
    if (previousNode) {
        var currentPosition = this.getPosition();
        var previousNodeSize = _nodeSizeForDirection.call(this, previousNode);
        this._scroller.sequenceFrom(previousNode);
        this._node = previousNode;
        var previousSpringPosition = currentPosition < TOLERANCE ? -previousNodeSize : 0;
        _setSpring.call(this, previousSpringPosition, SpringStates.PAGE);
        _shiftOrigin.call(this, previousNodeSize);
    }
    this._eventOutput.emit('pageChange', { direction: -1 });
    return previousNode;
};
Scrollview.prototype.goToNextPage = function goToNextPage() {
    if (!this._node)
        return null;
    var nextNode = this._node.getNext();
    if (nextNode) {
        var currentPosition = this.getPosition();
        var currentNodeSize = _nodeSizeForDirection.call(this, this._node);
        var nextNodeSize = _nodeSizeForDirection.call(this, nextNode);
        this._scroller.sequenceFrom(nextNode);
        this._node = nextNode;
        var nextSpringPosition = currentPosition > currentNodeSize - TOLERANCE ? currentNodeSize + nextNodeSize : currentNodeSize;
        _setSpring.call(this, nextSpringPosition, SpringStates.PAGE);
        _shiftOrigin.call(this, -currentNodeSize);
    }
    this._eventOutput.emit('pageChange', { direction: 1 });
    return nextNode;
};
Scrollview.prototype.sequenceFrom = function sequenceFrom(node) {
    if (node instanceof Array)
        node = new ViewSequence({ array: node });
    this._node = node;
    return this._scroller.sequenceFrom(node);
};
Scrollview.prototype.getSize = function getSize() {
    return this._scroller.getSize.apply(this._scroller, arguments);
};
Scrollview.prototype.render = function render() {
    if (!this._node)
        return null;
    _normalizeState.call(this);
    _handleEdge.call(this, this._scroller.onEdge());
    if (this.options.paginated)
        _handlePagination.call(this);
    return this._scroller.render();
};
module.exports = Scrollview;
},{"./..\\core\\EventHandler":12,"./..\\core\\OptionsManager":15,"./..\\core\\ViewSequence":21,"./..\\inputs\\GenericSync":22,"./..\\inputs\\ScrollSync":24,"./..\\inputs\\TouchSync":25,"./..\\physics\\PhysicsEngine":31,"./..\\physics\\bodies\\Particle":32,"./..\\physics\\forces\\Drag":35,"./..\\physics\\forces\\Spring":37,"./..\\utilities\\Utility":49,"./Scroller":54}],56:[function(require,module,exports){
var OptionsManager = require('./..\\core\\OptionsManager');
var Transform = require('./..\\core\\Transform');
var ViewSequence = require('./..\\core\\ViewSequence');
var Utility = require('./..\\utilities\\Utility');
function SequentialLayout(options) {
    this._items = null;
    this._size = null;
    this._outputFunction = SequentialLayout.DEFAULT_OUTPUT_FUNCTION;
    this.options = Object.create(this.constructor.DEFAULT_OPTIONS);
    this.optionsManager = new OptionsManager(this.options);
    this._itemsCache = [];
    this._outputCache = {
        size: null,
        target: this._itemsCache
    };
    if (options)
        this.setOptions(options);
}
SequentialLayout.DEFAULT_OPTIONS = {
    direction: Utility.Direction.Y,
    itemSpacing: 0,
    defaultItemSize: [
        50,
        50
    ]
};
SequentialLayout.DEFAULT_OUTPUT_FUNCTION = function DEFAULT_OUTPUT_FUNCTION(input, offset, index) {
    var transform = this.options.direction === Utility.Direction.X ? Transform.translate(offset, 0) : Transform.translate(0, offset);
    return {
        transform: transform,
        target: input.render()
    };
};
SequentialLayout.prototype.getSize = function getSize() {
    if (!this._size)
        this.render();
    return this._size;
};
SequentialLayout.prototype.sequenceFrom = function sequenceFrom(items) {
    if (items instanceof Array)
        items = new ViewSequence(items);
    this._items = items;
    return this;
};
SequentialLayout.prototype.setOptions = function setOptions(options) {
    this.optionsManager.setOptions.apply(this.optionsManager, arguments);
    return this;
};
SequentialLayout.prototype.setOutputFunction = function setOutputFunction(outputFunction) {
    this._outputFunction = outputFunction;
    return this;
};
SequentialLayout.prototype.render = function render() {
    var length = 0;
    var girth = 0;
    var lengthDim = this.options.direction === Utility.Direction.X ? 0 : 1;
    var girthDim = this.options.direction === Utility.Direction.X ? 1 : 0;
    var currentNode = this._items;
    var result = this._itemsCache;
    var i = 0;
    while (currentNode) {
        var item = currentNode.get();
        if (!item)
            break;
        var itemSize;
        if (item && item.getSize)
            itemSize = item.getSize();
        if (!itemSize)
            itemSize = this.options.defaultItemSize;
        if (itemSize[girthDim] !== true)
            girth = Math.max(girth, itemSize[girthDim]);
        var output = this._outputFunction.call(this, item, length, i);
        result[i] = output;
        if (itemSize[lengthDim] && itemSize[lengthDim] !== true)
            length += itemSize[lengthDim] + this.options.itemSpacing;
        currentNode = currentNode.getNext();
        i++;
    }
    this._itemsCache.splice(i);
    if (!girth)
        girth = undefined;
    if (!this._size)
        this._size = [
            0,
            0
        ];
    this._size[lengthDim] = length - this.options.itemSpacing;
    this._size[girthDim] = girth;
    this._outputCache.size = this.getSize();
    return this._outputCache;
};
module.exports = SequentialLayout;
},{"./..\\core\\OptionsManager":15,"./..\\core\\Transform":19,"./..\\core\\ViewSequence":21,"./..\\utilities\\Utility":49}],57:[function(require,module,exports){
/**
 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
 *
 * @version 1.0.3
 * @codingstandard ftlabs-jsv2
 * @copyright The Financial Times Limited [All Rights Reserved]
 * @license MIT License (see LICENSE.txt)
 */

/*jslint browser:true, node:true*/
/*global define, Event, Node*/


/**
 * Instantiate fast-clicking listeners on the specified layer.
 *
 * @constructor
 * @param {Element} layer The layer to listen on
 * @param {Object} options The options to override the defaults
 */
function FastClick(layer, options) {
	'use strict';
	var oldOnClick;

	options = options || {};

	/**
	 * Whether a click is currently being tracked.
	 *
	 * @type boolean
	 */
	this.trackingClick = false;


	/**
	 * Timestamp for when click tracking started.
	 *
	 * @type number
	 */
	this.trackingClickStart = 0;


	/**
	 * The element being tracked for a click.
	 *
	 * @type EventTarget
	 */
	this.targetElement = null;


	/**
	 * X-coordinate of touch start event.
	 *
	 * @type number
	 */
	this.touchStartX = 0;


	/**
	 * Y-coordinate of touch start event.
	 *
	 * @type number
	 */
	this.touchStartY = 0;


	/**
	 * ID of the last touch, retrieved from Touch.identifier.
	 *
	 * @type number
	 */
	this.lastTouchIdentifier = 0;


	/**
	 * Touchmove boundary, beyond which a click will be cancelled.
	 *
	 * @type number
	 */
	this.touchBoundary = options.touchBoundary || 10;


	/**
	 * The FastClick layer.
	 *
	 * @type Element
	 */
	this.layer = layer;

	/**
	 * The minimum time between tap(touchstart and touchend) events
	 *
	 * @type number
	 */
	this.tapDelay = options.tapDelay || 200;

	if (FastClick.notNeeded(layer)) {
		return;
	}

	// Some old versions of Android don't have Function.prototype.bind
	function bind(method, context) {
		return function() { return method.apply(context, arguments); };
	}


	var methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];
	var context = this;
	for (var i = 0, l = methods.length; i < l; i++) {
		context[methods[i]] = bind(context[methods[i]], context);
	}

	// Set up event handlers as required
	if (deviceIsAndroid) {
		layer.addEventListener('mouseover', this.onMouse, true);
		layer.addEventListener('mousedown', this.onMouse, true);
		layer.addEventListener('mouseup', this.onMouse, true);
	}

	layer.addEventListener('click', this.onClick, true);
	layer.addEventListener('touchstart', this.onTouchStart, false);
	layer.addEventListener('touchmove', this.onTouchMove, false);
	layer.addEventListener('touchend', this.onTouchEnd, false);
	layer.addEventListener('touchcancel', this.onTouchCancel, false);

	// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
	// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
	// layer when they are cancelled.
	if (!Event.prototype.stopImmediatePropagation) {
		layer.removeEventListener = function(type, callback, capture) {
			var rmv = Node.prototype.removeEventListener;
			if (type === 'click') {
				rmv.call(layer, type, callback.hijacked || callback, capture);
			} else {
				rmv.call(layer, type, callback, capture);
			}
		};

		layer.addEventListener = function(type, callback, capture) {
			var adv = Node.prototype.addEventListener;
			if (type === 'click') {
				adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
					if (!event.propagationStopped) {
						callback(event);
					}
				}), capture);
			} else {
				adv.call(layer, type, callback, capture);
			}
		};
	}

	// If a handler is already declared in the element's onclick attribute, it will be fired before
	// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
	// adding it as listener.
	if (typeof layer.onclick === 'function') {

		// Android browser on at least 3.2 requires a new reference to the function in layer.onclick
		// - the old one won't work if passed to addEventListener directly.
		oldOnClick = layer.onclick;
		layer.addEventListener('click', function(event) {
			oldOnClick(event);
		}, false);
		layer.onclick = null;
	}
}


/**
 * Android requires exceptions.
 *
 * @type boolean
 */
var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0;


/**
 * iOS requires exceptions.
 *
 * @type boolean
 */
var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent);


/**
 * iOS 4 requires an exception for select elements.
 *
 * @type boolean
 */
var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


/**
 * iOS 6.0(+?) requires the target element to be manually derived
 *
 * @type boolean
 */
var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS ([6-9]|\d{2})_\d/).test(navigator.userAgent);

/**
 * BlackBerry requires exceptions.
 *
 * @type boolean
 */
var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;

/**
 * Determine whether a given element requires a native click.
 *
 * @param {EventTarget|Element} target Target DOM element
 * @returns {boolean} Returns true if the element needs a native click
 */
FastClick.prototype.needsClick = function(target) {
	'use strict';
	switch (target.nodeName.toLowerCase()) {

	// Don't send a synthetic click to disabled inputs (issue #62)
	case 'button':
	case 'select':
	case 'textarea':
		if (target.disabled) {
			return true;
		}

		break;
	case 'input':

		// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
		if ((deviceIsIOS && target.type === 'file') || target.disabled) {
			return true;
		}

		break;
	case 'label':
	case 'video':
		return true;
	}

	return (/\bneedsclick\b/).test(target.className);
};


/**
 * Determine whether a given element requires a call to focus to simulate click into element.
 *
 * @param {EventTarget|Element} target Target DOM element
 * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
 */
FastClick.prototype.needsFocus = function(target) {
	'use strict';
	switch (target.nodeName.toLowerCase()) {
	case 'textarea':
		return true;
	case 'select':
		return !deviceIsAndroid;
	case 'input':
		switch (target.type) {
		case 'button':
		case 'checkbox':
		case 'file':
		case 'image':
		case 'radio':
		case 'submit':
			return false;
		}

		// No point in attempting to focus disabled inputs
		return !target.disabled && !target.readOnly;
	default:
		return (/\bneedsfocus\b/).test(target.className);
	}
};


/**
 * Send a click event to the specified element.
 *
 * @param {EventTarget|Element} targetElement
 * @param {Event} event
 */
FastClick.prototype.sendClick = function(targetElement, event) {
	'use strict';
	var clickEvent, touch;

	// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
	if (document.activeElement && document.activeElement !== targetElement) {
		document.activeElement.blur();
	}

	touch = event.changedTouches[0];

	// Synthesise a click event, with an extra attribute so it can be tracked
	clickEvent = document.createEvent('MouseEvents');
	clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
	clickEvent.forwardedTouchEvent = true;
	targetElement.dispatchEvent(clickEvent);
};

FastClick.prototype.determineEventType = function(targetElement) {
	'use strict';

	//Issue #159: Android Chrome Select Box does not open with a synthetic click event
	if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
		return 'mousedown';
	}

	return 'click';
};


/**
 * @param {EventTarget|Element} targetElement
 */
FastClick.prototype.focus = function(targetElement) {
	'use strict';
	var length;

	// Issue #160: on iOS 7, some input elements (e.g. date datetime) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
	if (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time') {
		length = targetElement.value.length;
		targetElement.setSelectionRange(length, length);
	} else {
		targetElement.focus();
	}
};


/**
 * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
 *
 * @param {EventTarget|Element} targetElement
 */
FastClick.prototype.updateScrollParent = function(targetElement) {
	'use strict';
	var scrollParent, parentElement;

	scrollParent = targetElement.fastClickScrollParent;

	// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
	// target element was moved to another parent.
	if (!scrollParent || !scrollParent.contains(targetElement)) {
		parentElement = targetElement;
		do {
			if (parentElement.scrollHeight > parentElement.offsetHeight) {
				scrollParent = parentElement;
				targetElement.fastClickScrollParent = parentElement;
				break;
			}

			parentElement = parentElement.parentElement;
		} while (parentElement);
	}

	// Always update the scroll top tracker if possible.
	if (scrollParent) {
		scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
	}
};


/**
 * @param {EventTarget} targetElement
 * @returns {Element|EventTarget}
 */
FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {
	'use strict';

	// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
	if (eventTarget.nodeType === Node.TEXT_NODE) {
		return eventTarget.parentNode;
	}

	return eventTarget;
};


/**
 * On touch start, record the position and scroll offset.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchStart = function(event) {
	'use strict';
	var targetElement, touch, selection;

	// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
	if (event.targetTouches.length > 1) {
		return true;
	}

	targetElement = this.getTargetElementFromEventTarget(event.target);
	touch = event.targetTouches[0];

	if (deviceIsIOS) {

		// Only trusted events will deselect text on iOS (issue #49)
		selection = window.getSelection();
		if (selection.rangeCount && !selection.isCollapsed) {
			return true;
		}

		if (!deviceIsIOS4) {

			// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
			// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
			// with the same identifier as the touch event that previously triggered the click that triggered the alert.
			// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
			// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
			// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
			// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
			// random integers, it's safe to to continue if the identifier is 0 here.
			if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
				event.preventDefault();
				return false;
			}

			this.lastTouchIdentifier = touch.identifier;

			// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
			// 1) the user does a fling scroll on the scrollable layer
			// 2) the user stops the fling scroll with another tap
			// then the event.target of the last 'touchend' event will be the element that was under the user's finger
			// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
			// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
			this.updateScrollParent(targetElement);
		}
	}

	this.trackingClick = true;
	this.trackingClickStart = event.timeStamp;
	this.targetElement = targetElement;

	this.touchStartX = touch.pageX;
	this.touchStartY = touch.pageY;

	// Prevent phantom clicks on fast double-tap (issue #36)
	if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
		event.preventDefault();
	}

	return true;
};


/**
 * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.touchHasMoved = function(event) {
	'use strict';
	var touch = event.changedTouches[0], boundary = this.touchBoundary;

	if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
		return true;
	}

	return false;
};


/**
 * Update the last position.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchMove = function(event) {
	'use strict';
	if (!this.trackingClick) {
		return true;
	}

	// If the touch has moved, cancel the click tracking
	if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
		this.trackingClick = false;
		this.targetElement = null;
	}

	return true;
};


/**
 * Attempt to find the labelled control for the given label element.
 *
 * @param {EventTarget|HTMLLabelElement} labelElement
 * @returns {Element|null}
 */
FastClick.prototype.findControl = function(labelElement) {
	'use strict';

	// Fast path for newer browsers supporting the HTML5 control attribute
	if (labelElement.control !== undefined) {
		return labelElement.control;
	}

	// All browsers under test that support touch events also support the HTML5 htmlFor attribute
	if (labelElement.htmlFor) {
		return document.getElementById(labelElement.htmlFor);
	}

	// If no for attribute exists, attempt to retrieve the first labellable descendant element
	// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
	return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
};


/**
 * On touch end, determine whether to send a click event at once.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchEnd = function(event) {
	'use strict';
	var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;

	if (!this.trackingClick) {
		return true;
	}

	// Prevent phantom clicks on fast double-tap (issue #36)
	if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
		this.cancelNextClick = true;
		return true;
	}

	// Reset to prevent wrong click cancel on input (issue #156).
	this.cancelNextClick = false;

	this.lastClickTime = event.timeStamp;

	trackingClickStart = this.trackingClickStart;
	this.trackingClick = false;
	this.trackingClickStart = 0;

	// On some iOS devices, the targetElement supplied with the event is invalid if the layer
	// is performing a transition or scroll, and has to be re-detected manually. Note that
	// for this to function correctly, it must be called *after* the event target is checked!
	// See issue #57; also filed as rdar://13048589 .
	if (deviceIsIOSWithBadTarget) {
		touch = event.changedTouches[0];

		// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
		targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
		targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
	}

	targetTagName = targetElement.tagName.toLowerCase();
	if (targetTagName === 'label') {
		forElement = this.findControl(targetElement);
		if (forElement) {
			this.focus(targetElement);
			if (deviceIsAndroid) {
				return false;
			}

			targetElement = forElement;
		}
	} else if (this.needsFocus(targetElement)) {

		// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
		// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
		if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {
			this.targetElement = null;
			return false;
		}

		this.focus(targetElement);
		this.sendClick(targetElement, event);

		// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
		// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
		if (!deviceIsIOS || targetTagName !== 'select') {
			this.targetElement = null;
			event.preventDefault();
		}

		return false;
	}

	if (deviceIsIOS && !deviceIsIOS4) {

		// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
		// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
		scrollParent = targetElement.fastClickScrollParent;
		if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
			return true;
		}
	}

	// Prevent the actual click from going though - unless the target node is marked as requiring
	// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
	if (!this.needsClick(targetElement)) {
		event.preventDefault();
		this.sendClick(targetElement, event);
	}

	return false;
};


/**
 * On touch cancel, stop tracking the click.
 *
 * @returns {void}
 */
FastClick.prototype.onTouchCancel = function() {
	'use strict';
	this.trackingClick = false;
	this.targetElement = null;
};


/**
 * Determine mouse events which should be permitted.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onMouse = function(event) {
	'use strict';

	// If a target element was never set (because a touch event was never fired) allow the event
	if (!this.targetElement) {
		return true;
	}

	if (event.forwardedTouchEvent) {
		return true;
	}

	// Programmatically generated events targeting a specific element should be permitted
	if (!event.cancelable) {
		return true;
	}

	// Derive and check the target element to see whether the mouse event needs to be permitted;
	// unless explicitly enabled, prevent non-touch click events from triggering actions,
	// to prevent ghost/doubleclicks.
	if (!this.needsClick(this.targetElement) || this.cancelNextClick) {

		// Prevent any user-added listeners declared on FastClick element from being fired.
		if (event.stopImmediatePropagation) {
			event.stopImmediatePropagation();
		} else {

			// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
			event.propagationStopped = true;
		}

		// Cancel the event
		event.stopPropagation();
		event.preventDefault();

		return false;
	}

	// If the mouse event is permitted, return true for the action to go through.
	return true;
};


/**
 * On actual clicks, determine whether this is a touch-generated click, a click action occurring
 * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
 * an actual click which should be permitted.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onClick = function(event) {
	'use strict';
	var permitted;

	// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
	if (this.trackingClick) {
		this.targetElement = null;
		this.trackingClick = false;
		return true;
	}

	// Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
	if (event.target.type === 'submit' && event.detail === 0) {
		return true;
	}

	permitted = this.onMouse(event);

	// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
	if (!permitted) {
		this.targetElement = null;
	}

	// If clicks are permitted, return true for the action to go through.
	return permitted;
};


/**
 * Remove all FastClick's event listeners.
 *
 * @returns {void}
 */
FastClick.prototype.destroy = function() {
	'use strict';
	var layer = this.layer;

	if (deviceIsAndroid) {
		layer.removeEventListener('mouseover', this.onMouse, true);
		layer.removeEventListener('mousedown', this.onMouse, true);
		layer.removeEventListener('mouseup', this.onMouse, true);
	}

	layer.removeEventListener('click', this.onClick, true);
	layer.removeEventListener('touchstart', this.onTouchStart, false);
	layer.removeEventListener('touchmove', this.onTouchMove, false);
	layer.removeEventListener('touchend', this.onTouchEnd, false);
	layer.removeEventListener('touchcancel', this.onTouchCancel, false);
};


/**
 * Check whether FastClick is needed.
 *
 * @param {Element} layer The layer to listen on
 */
FastClick.notNeeded = function(layer) {
	'use strict';
	var metaViewport;
	var chromeVersion;
	var blackberryVersion;

	// Devices that don't support touch don't need FastClick
	if (typeof window.ontouchstart === 'undefined') {
		return true;
	}

	// Chrome version - zero for other browsers
	chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

	if (chromeVersion) {

		if (deviceIsAndroid) {
			metaViewport = document.querySelector('meta[name=viewport]');

			if (metaViewport) {
				// Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
				if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
					return true;
				}
				// Chrome 32 and above with width=device-width or less don't need FastClick
				if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {
					return true;
				}
			}

		// Chrome desktop doesn't need FastClick (issue #15)
		} else {
			return true;
		}
	}

	if (deviceIsBlackBerry10) {
		blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/);

		// BlackBerry 10.3+ does not require Fastclick library.
		// https://github.com/ftlabs/fastclick/issues/251
		if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
			metaViewport = document.querySelector('meta[name=viewport]');

			if (metaViewport) {
				// user-scalable=no eliminates click delay.
				if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
					return true;
				}
				// width=device-width (or less than device-width) eliminates click delay.
				if (document.documentElement.scrollWidth <= window.outerWidth) {
					return true;
				}
			}
		}
	}

	// IE10 with -ms-touch-action: none, which disables double-tap-to-zoom (issue #97)
	if (layer.style.msTouchAction === 'none') {
		return true;
	}

	return false;
};


/**
 * Factory method for creating a FastClick object
 *
 * @param {Element} layer The layer to listen on
 * @param {Object} options The options to override the defaults
 */
FastClick.attach = function(layer, options) {
	'use strict';
	return new FastClick(layer, options);
};


if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {

	// AMD. Register as an anonymous module.
	define(function() {
		'use strict';
		return FastClick;
	});
} else if (typeof module !== 'undefined' && module.exports) {
	module.exports = FastClick.attach;
	module.exports.FastClick = FastClick;
} else {
	window.FastClick = FastClick;
}

},{}],58:[function(require,module,exports){
"use strict";
/*globals Handlebars: true */
var base = require("./handlebars/base");

// Each of these augment the Handlebars object. No need to setup here.
// (This is done to easily share code between commonjs and browse envs)
var SafeString = require("./handlebars/safe-string")["default"];
var Exception = require("./handlebars/exception")["default"];
var Utils = require("./handlebars/utils");
var runtime = require("./handlebars/runtime");

// For compatibility and usage outside of module systems, make the Handlebars object a namespace
var create = function() {
  var hb = new base.HandlebarsEnvironment();

  Utils.extend(hb, base);
  hb.SafeString = SafeString;
  hb.Exception = Exception;
  hb.Utils = Utils;

  hb.VM = runtime;
  hb.template = function(spec) {
    return runtime.template(spec, hb);
  };

  return hb;
};

var Handlebars = create();
Handlebars.create = create;

exports["default"] = Handlebars;
},{"./handlebars/base":59,"./handlebars/exception":60,"./handlebars/runtime":61,"./handlebars/safe-string":62,"./handlebars/utils":63}],59:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];

var VERSION = "1.3.0";
exports.VERSION = VERSION;var COMPILER_REVISION = 4;
exports.COMPILER_REVISION = COMPILER_REVISION;
var REVISION_CHANGES = {
  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
  2: '== 1.0.0-rc.3',
  3: '== 1.0.0-rc.4',
  4: '>= 1.0.0'
};
exports.REVISION_CHANGES = REVISION_CHANGES;
var isArray = Utils.isArray,
    isFunction = Utils.isFunction,
    toString = Utils.toString,
    objectType = '[object Object]';

function HandlebarsEnvironment(helpers, partials) {
  this.helpers = helpers || {};
  this.partials = partials || {};

  registerDefaultHelpers(this);
}

exports.HandlebarsEnvironment = HandlebarsEnvironment;HandlebarsEnvironment.prototype = {
  constructor: HandlebarsEnvironment,

  logger: logger,
  log: log,

  registerHelper: function(name, fn, inverse) {
    if (toString.call(name) === objectType) {
      if (inverse || fn) { throw new Exception('Arg not supported with multiple helpers'); }
      Utils.extend(this.helpers, name);
    } else {
      if (inverse) { fn.not = inverse; }
      this.helpers[name] = fn;
    }
  },

  registerPartial: function(name, str) {
    if (toString.call(name) === objectType) {
      Utils.extend(this.partials,  name);
    } else {
      this.partials[name] = str;
    }
  }
};

function registerDefaultHelpers(instance) {
  instance.registerHelper('helperMissing', function(arg) {
    if(arguments.length === 2) {
      return undefined;
    } else {
      throw new Exception("Missing helper: '" + arg + "'");
    }
  });

  instance.registerHelper('blockHelperMissing', function(context, options) {
    var inverse = options.inverse || function() {}, fn = options.fn;

    if (isFunction(context)) { context = context.call(this); }

    if(context === true) {
      return fn(this);
    } else if(context === false || context == null) {
      return inverse(this);
    } else if (isArray(context)) {
      if(context.length > 0) {
        return instance.helpers.each(context, options);
      } else {
        return inverse(this);
      }
    } else {
      return fn(context);
    }
  });

  instance.registerHelper('each', function(context, options) {
    var fn = options.fn, inverse = options.inverse;
    var i = 0, ret = "", data;

    if (isFunction(context)) { context = context.call(this); }

    if (options.data) {
      data = createFrame(options.data);
    }

    if(context && typeof context === 'object') {
      if (isArray(context)) {
        for(var j = context.length; i<j; i++) {
          if (data) {
            data.index = i;
            data.first = (i === 0);
            data.last  = (i === (context.length-1));
          }
          ret = ret + fn(context[i], { data: data });
        }
      } else {
        for(var key in context) {
          if(context.hasOwnProperty(key)) {
            if(data) { 
              data.key = key; 
              data.index = i;
              data.first = (i === 0);
            }
            ret = ret + fn(context[key], {data: data});
            i++;
          }
        }
      }
    }

    if(i === 0){
      ret = inverse(this);
    }

    return ret;
  });

  instance.registerHelper('if', function(conditional, options) {
    if (isFunction(conditional)) { conditional = conditional.call(this); }

    // Default behavior is to render the positive path if the value is truthy and not empty.
    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
    if ((!options.hash.includeZero && !conditional) || Utils.isEmpty(conditional)) {
      return options.inverse(this);
    } else {
      return options.fn(this);
    }
  });

  instance.registerHelper('unless', function(conditional, options) {
    return instance.helpers['if'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});
  });

  instance.registerHelper('with', function(context, options) {
    if (isFunction(context)) { context = context.call(this); }

    if (!Utils.isEmpty(context)) return options.fn(context);
  });

  instance.registerHelper('log', function(context, options) {
    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;
    instance.log(level, context);
  });
}

var logger = {
  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },

  // State enum
  DEBUG: 0,
  INFO: 1,
  WARN: 2,
  ERROR: 3,
  level: 3,

  // can be overridden in the host environment
  log: function(level, obj) {
    if (logger.level <= level) {
      var method = logger.methodMap[level];
      if (typeof console !== 'undefined' && console[method]) {
        console[method].call(console, obj);
      }
    }
  }
};
exports.logger = logger;
function log(level, obj) { logger.log(level, obj); }

exports.log = log;var createFrame = function(object) {
  var obj = {};
  Utils.extend(obj, object);
  return obj;
};
exports.createFrame = createFrame;
},{"./exception":60,"./utils":63}],60:[function(require,module,exports){
"use strict";

var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

function Exception(message, node) {
  var line;
  if (node && node.firstLine) {
    line = node.firstLine;

    message += ' - ' + line + ':' + node.firstColumn;
  }

  var tmp = Error.prototype.constructor.call(this, message);

  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
  for (var idx = 0; idx < errorProps.length; idx++) {
    this[errorProps[idx]] = tmp[errorProps[idx]];
  }

  if (line) {
    this.lineNumber = line;
    this.column = node.firstColumn;
  }
}

Exception.prototype = new Error();

exports["default"] = Exception;
},{}],61:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];
var COMPILER_REVISION = require("./base").COMPILER_REVISION;
var REVISION_CHANGES = require("./base").REVISION_CHANGES;

function checkRevision(compilerInfo) {
  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
      currentRevision = COMPILER_REVISION;

  if (compilerRevision !== currentRevision) {
    if (compilerRevision < currentRevision) {
      var runtimeVersions = REVISION_CHANGES[currentRevision],
          compilerVersions = REVISION_CHANGES[compilerRevision];
      throw new Exception("Template was precompiled with an older version of Handlebars than the current runtime. "+
            "Please update your precompiler to a newer version ("+runtimeVersions+") or downgrade your runtime to an older version ("+compilerVersions+").");
    } else {
      // Use the embedded version info since the runtime doesn't know about this revision yet
      throw new Exception("Template was precompiled with a newer version of Handlebars than the current runtime. "+
            "Please update your runtime to a newer version ("+compilerInfo[1]+").");
    }
  }
}

exports.checkRevision = checkRevision;// TODO: Remove this line and break up compilePartial

function template(templateSpec, env) {
  if (!env) {
    throw new Exception("No environment passed to template");
  }

  // Note: Using env.VM references rather than local var references throughout this section to allow
  // for external users to override these as psuedo-supported APIs.
  var invokePartialWrapper = function(partial, name, context, helpers, partials, data) {
    var result = env.VM.invokePartial.apply(this, arguments);
    if (result != null) { return result; }

    if (env.compile) {
      var options = { helpers: helpers, partials: partials, data: data };
      partials[name] = env.compile(partial, { data: data !== undefined }, env);
      return partials[name](context, options);
    } else {
      throw new Exception("The partial " + name + " could not be compiled when running in runtime-only mode");
    }
  };

  // Just add water
  var container = {
    escapeExpression: Utils.escapeExpression,
    invokePartial: invokePartialWrapper,
    programs: [],
    program: function(i, fn, data) {
      var programWrapper = this.programs[i];
      if(data) {
        programWrapper = program(i, fn, data);
      } else if (!programWrapper) {
        programWrapper = this.programs[i] = program(i, fn);
      }
      return programWrapper;
    },
    merge: function(param, common) {
      var ret = param || common;

      if (param && common && (param !== common)) {
        ret = {};
        Utils.extend(ret, common);
        Utils.extend(ret, param);
      }
      return ret;
    },
    programWithDepth: env.VM.programWithDepth,
    noop: env.VM.noop,
    compilerInfo: null
  };

  return function(context, options) {
    options = options || {};
    var namespace = options.partial ? options : env,
        helpers,
        partials;

    if (!options.partial) {
      helpers = options.helpers;
      partials = options.partials;
    }
    var result = templateSpec.call(
          container,
          namespace, context,
          helpers,
          partials,
          options.data);

    if (!options.partial) {
      env.VM.checkRevision(container.compilerInfo);
    }

    return result;
  };
}

exports.template = template;function programWithDepth(i, fn, data /*, $depth */) {
  var args = Array.prototype.slice.call(arguments, 3);

  var prog = function(context, options) {
    options = options || {};

    return fn.apply(this, [context, options.data || data].concat(args));
  };
  prog.program = i;
  prog.depth = args.length;
  return prog;
}

exports.programWithDepth = programWithDepth;function program(i, fn, data) {
  var prog = function(context, options) {
    options = options || {};

    return fn(context, options.data || data);
  };
  prog.program = i;
  prog.depth = 0;
  return prog;
}

exports.program = program;function invokePartial(partial, name, context, helpers, partials, data) {
  var options = { partial: true, helpers: helpers, partials: partials, data: data };

  if(partial === undefined) {
    throw new Exception("The partial " + name + " could not be found");
  } else if(partial instanceof Function) {
    return partial(context, options);
  }
}

exports.invokePartial = invokePartial;function noop() { return ""; }

exports.noop = noop;
},{"./base":59,"./exception":60,"./utils":63}],62:[function(require,module,exports){
"use strict";
// Build out our basic SafeString type
function SafeString(string) {
  this.string = string;
}

SafeString.prototype.toString = function() {
  return "" + this.string;
};

exports["default"] = SafeString;
},{}],63:[function(require,module,exports){
"use strict";
/*jshint -W004 */
var SafeString = require("./safe-string")["default"];

var escape = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#x27;",
  "`": "&#x60;"
};

var badChars = /[&<>"'`]/g;
var possible = /[&<>"'`]/;

function escapeChar(chr) {
  return escape[chr] || "&amp;";
}

function extend(obj, value) {
  for(var key in value) {
    if(Object.prototype.hasOwnProperty.call(value, key)) {
      obj[key] = value[key];
    }
  }
}

exports.extend = extend;var toString = Object.prototype.toString;
exports.toString = toString;
// Sourced from lodash
// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
var isFunction = function(value) {
  return typeof value === 'function';
};
// fallback for older versions of Chrome and Safari
if (isFunction(/x/)) {
  isFunction = function(value) {
    return typeof value === 'function' && toString.call(value) === '[object Function]';
  };
}
var isFunction;
exports.isFunction = isFunction;
var isArray = Array.isArray || function(value) {
  return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;
};
exports.isArray = isArray;

function escapeExpression(string) {
  // don't escape SafeStrings, since they're already safe
  if (string instanceof SafeString) {
    return string.toString();
  } else if (!string && string !== 0) {
    return "";
  }

  // Force a string conversion as this will be done by the append regardless and
  // the regex test will do this transparently behind the scenes, causing issues if
  // an object's to string has escaped characters in it.
  string = "" + string;

  if(!possible.test(string)) { return string; }
  return string.replace(badChars, escapeChar);
}

exports.escapeExpression = escapeExpression;function isEmpty(value) {
  if (!value && value !== 0) {
    return true;
  } else if (isArray(value) && value.length === 0) {
    return true;
  } else {
    return false;
  }
}

exports.isEmpty = isEmpty;
},{"./safe-string":62}],64:[function(require,module,exports){
// Create a simple path alias to allow browserify to resolve
// the runtime on a supported path.
module.exports = require('./dist/cjs/handlebars.runtime');

},{"./dist/cjs/handlebars.runtime":58}],65:[function(require,module,exports){
module.exports = require("handlebars/runtime")["default"];

},{"handlebars/runtime":64}],66:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v2.1.1
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-05-01T17:11Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper window is present,
		// execute the factory and get jQuery
		// For environments that do not inherently posses a window with a document
		// (such as Node.js), expose a jQuery-making factory as module.exports
		// This accentuates the need for the creation of a real window
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Can't do this because several apps including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
// Support: Firefox 18+
//

var arr = [];

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,

	version = "2.1.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {
		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		return !jQuery.isArray( obj ) && obj - parseFloat( obj ) >= 0;
	},

	isPlainObject: function( obj ) {
		// Not plain objects:
		// - Any object or value whose internal [[Class]] property is not "[object Object]"
		// - DOM nodes
		// - window
		if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		if ( obj.constructor &&
				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
			return false;
		}

		// If the function hasn't returned already, we're confident that
		// |obj| is a plain object, created by {} or constructed with new Object
		return true;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		// Support: Android < 4.0, iOS < 6 (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call(obj) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		var script,
			indirect = eval;

		code = jQuery.trim( code );

		if ( code ) {
			// If the code includes a valid, prologue position
			// strict mode pragma, execute code by injecting a
			// script tag into the document.
			if ( code.indexOf("use strict") === 1 ) {
				script = document.createElement("script");
				script.text = code;
				document.head.appendChild( script ).parentNode.removeChild( script );
			} else {
			// Otherwise, avoid the DOM node creation, insertion
			// and removal by using an indirect global eval
				indirect( code );
			}
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {
	var length = obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v1.10.19
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-04-18
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + -(new Date()),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	strundefined = typeof undefined,
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf if we can't use a native one
	indexOf = arr.indexOf || function( elem ) {
		var i = 0,
			len = this.length;
		for ( ; i < len; i++ ) {
			if ( this[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + characterEncoding + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	if ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {
		return [];
	}

	if ( documentIsHTML && !seed ) {

		// Shortcuts
		if ( (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document (jQuery #6963)
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType === 9 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== strundefined && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare,
		doc = node ? node.ownerDocument || node : preferredDoc,
		parent = doc.defaultView;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;

	// Support tests
	documentIsHTML = !isXML( doc );

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent !== parent.top ) {
		// IE11 does not have attachEvent, so all must suffer
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", function() {
				setDocument();
			}, false );
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", function() {
				setDocument();
			});
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Check if getElementsByClassName can be trusted
	support.getElementsByClassName = rnative.test( doc.getElementsByClassName ) && assert(function( div ) {
		div.innerHTML = "<div class='a'></div><div class='a i'></div>";

		// Support: Safari<4
		// Catch class over-caching
		div.firstChild.className = "i";
		// Support: Opera<10
		// Catch gEBCN failure to find non-leading classes
		return div.getElementsByClassName("i").length === 2;
	});

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== strundefined && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== strundefined ) {
				return context.getElementsByTagName( tag );
			}
		} :
		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			div.innerHTML = "<select msallowclip=''><option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowclip^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch(e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (oldCache = outerCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							outerCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context !== document && context;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is no seed and only one group
	if ( match.length === 1 ) {

		// Take a shortcut and set the context if the root selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome<14
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) >= 0 ) !== not;
	});
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		}));
};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			len = this.length,
			ret = [],
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},
	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
});


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[0] === "<" && selector[ selector.length - 1 ] === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof rootjQuery.ready !== "undefined" ?
				rootjQuery.ready( selector ) :
				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.extend({
	dir: function( elem, dir, until ) {
		var matched = [],
			truncate = until !== undefined;

		while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
			if ( elem.nodeType === 1 ) {
				if ( truncate && jQuery( elem ).is( until ) ) {
					break;
				}
				matched.push( elem );
			}
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var matched = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				matched.push( n );
			}
		}

		return matched;
	}
});

jQuery.fn.extend({
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter(function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.unique(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.unique( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
});
var rnotwhite = (/\S+/g);



// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {
	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend({
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
});

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed, false );
	window.removeEventListener( "load", completed, false );
	jQuery.ready();
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		} else {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {
			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			len ? fn( elems[0], key ) : emptyGet;
};


/**
 * Determines whether an object can have data
 */
jQuery.acceptData = function( owner ) {
	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	/* jshint -W018 */
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};


function Data() {
	// Support: Android < 4,
	// Old WebKit does not have Object.preventExtensions/freeze method,
	// return new empty object instead with no [[set]] accessor
	Object.defineProperty( this.cache = {}, 0, {
		get: function() {
			return {};
		}
	});

	this.expando = jQuery.expando + Math.random();
}

Data.uid = 1;
Data.accepts = jQuery.acceptData;

Data.prototype = {
	key: function( owner ) {
		// We can accept data for non-element nodes in modern browsers,
		// but we should not, see #8335.
		// Always return the key for a frozen object.
		if ( !Data.accepts( owner ) ) {
			return 0;
		}

		var descriptor = {},
			// Check if the owner object already has a cache key
			unlock = owner[ this.expando ];

		// If not, create one
		if ( !unlock ) {
			unlock = Data.uid++;

			// Secure it in a non-enumerable, non-writable property
			try {
				descriptor[ this.expando ] = { value: unlock };
				Object.defineProperties( owner, descriptor );

			// Support: Android < 4
			// Fallback to a less secure definition
			} catch ( e ) {
				descriptor[ this.expando ] = unlock;
				jQuery.extend( owner, descriptor );
			}
		}

		// Ensure the cache object
		if ( !this.cache[ unlock ] ) {
			this.cache[ unlock ] = {};
		}

		return unlock;
	},
	set: function( owner, data, value ) {
		var prop,
			// There may be an unlock assigned to this node,
			// if there is no entry for this "owner", create one inline
			// and set the unlock as though an owner entry had always existed
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		// Handle: [ owner, key, value ] args
		if ( typeof data === "string" ) {
			cache[ data ] = value;

		// Handle: [ owner, { properties } ] args
		} else {
			// Fresh assignments by object are shallow copied
			if ( jQuery.isEmptyObject( cache ) ) {
				jQuery.extend( this.cache[ unlock ], data );
			// Otherwise, copy the properties one-by-one to the cache object
			} else {
				for ( prop in data ) {
					cache[ prop ] = data[ prop ];
				}
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		// Either a valid cache is found, or will be created.
		// New caches will be created and the unlock returned,
		// allowing direct access to the newly created
		// empty data object. A valid owner object must be provided.
		var cache = this.cache[ this.key( owner ) ];

		return key === undefined ?
			cache : cache[ key ];
	},
	access: function( owner, key, value ) {
		var stored;
		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				((key && typeof key === "string") && value === undefined) ) {

			stored = this.get( owner, key );

			return stored !== undefined ?
				stored : this.get( owner, jQuery.camelCase(key) );
		}

		// [*]When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i, name, camel,
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		if ( key === undefined ) {
			this.cache[ unlock ] = {};

		} else {
			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = key.concat( key.map( jQuery.camelCase ) );
			} else {
				camel = jQuery.camelCase( key );
				// Try the string as a key before any manipulation
				if ( key in cache ) {
					name = [ key, camel ];
				} else {
					// If a key with the spaces exists, use it.
					// Otherwise, create an array by matching non-whitespace
					name = camel;
					name = name in cache ?
						[ name ] : ( name.match( rnotwhite ) || [] );
				}
			}

			i = name.length;
			while ( i-- ) {
				delete cache[ name[ i ] ];
			}
		}
	},
	hasData: function( owner ) {
		return !jQuery.isEmptyObject(
			this.cache[ owner[ this.expando ] ] || {}
		);
	},
	discard: function( owner ) {
		if ( owner[ this.expando ] ) {
			delete this.cache[ owner[ this.expando ] ];
		}
	}
};
var data_priv = new Data();

var data_user = new Data();



/*
	Implementation Summary

	1. Enforce API surface and semantic compatibility with 1.9.x branch
	2. Improve the module's maintainability by reducing the storage
		paths to a single mechanism.
	3. Use the same single mechanism to support "private" and "user" data.
	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	5. Avoid exposing implementation details on user objects (eg. expando properties)
	6. Provide a clear path for implementation upgrade to WeakMap in 2014
*/
var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			data_user.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend({
	hasData: function( elem ) {
		return data_user.hasData( elem ) || data_priv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return data_user.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		data_user.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to data_priv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return data_priv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		data_priv.remove( elem, name );
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = data_user.get( elem );

				if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice(5) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					data_priv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				data_user.set( this, key );
			});
		}

		return access( this, function( value ) {
			var data,
				camelKey = jQuery.camelCase( key );

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {
				// Attempt to get data from the cache
				// with the key as-is
				data = data_user.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to get data from the cache
				// with the key camelized
				data = data_user.get( elem, camelKey );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, camelKey, undefined );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each(function() {
				// First, attempt to store a copy or reference of any
				// data that might've been store with a camelCased key.
				var data = data_user.get( this, camelKey );

				// For HTML5 data-* attribute interop, we have to
				// store property names with dashes in a camelCase form.
				// This might not apply to all properties...*
				data_user.set( this, camelKey, value );

				// *... In the case of properties that might _actually_
				// have dashes, we need to also store a copy of that
				// unchanged property.
				if ( key.indexOf("-") !== -1 && data !== undefined ) {
					data_user.set( this, key, value );
				}
			});
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each(function() {
			data_user.remove( this, key );
		});
	}
});


jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = data_priv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = data_priv.access( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return data_priv.get( elem, key ) || data_priv.access( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				data_priv.remove( elem, [ type + "queue", key ] );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = data_priv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {
		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
	};

var rcheckableType = (/^(?:checkbox|radio)$/i);



(function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// #11217 - WebKit loses check when the name is after the checked attribute
	// Support: Windows Web Apps (WWA)
	// `name` and `type` need .setAttribute for WWA
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Make sure textarea (and checkbox) defaultValue is properly cloned
	// Support: IE9-IE11+
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
})();
var strundefined = typeof undefined;



support.focusinBubbles = "onfocusin" in window;


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.hasData( elem ) && data_priv.get( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;
			data_priv.remove( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: Cordova 2.5 (WebKit) (#13255)
		// All events should have a target; Cordova deviceready doesn't
		if ( !event.target ) {
			event.target = document;
		}

		// Support: Safari 6.0+, Chrome < 28
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle, false );
	}
};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&
				// Support: Android < 4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && e.preventDefault ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && e.stopPropagation ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// Support: Chrome 15+
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// Create "bubbling" focus and blur events
// Support: Firefox, Chrome, Safari
if ( !support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = data_priv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				data_priv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = data_priv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					data_priv.remove( doc, fix );

				} else {
					data_priv.access( doc, fix, attaches );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});


var
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {

		// Support: IE 9
		option: [ 1, "<select multiple='multiple'>", "</select>" ],

		thead: [ 1, "<table>", "</table>" ],
		col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		_default: [ 0, "", "" ]
	};

// Support: IE 9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: 1.x compatibility
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute("type");
	}

	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		data_priv.set(
			elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
		);
	}
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( data_priv.hasData( src ) ) {
		pdataOld = data_priv.access( src );
		pdataCur = data_priv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( data_user.hasData( src ) ) {
		udataOld = data_user.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		data_user.set( dest, udataCur );
	}
}

function getAll( context, tag ) {
	var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
			context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
			[];

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], ret ) :
		ret;
}

// Support: IE >= 9
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Support: IE >= 9
		// Fix Cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var elem, tmp, tag, wrap, contains, j,
			fragment = context.createDocumentFragment(),
			nodes = [],
			i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					// Support: QtWebKit
					// jQuery.merge because push.apply(_, arraylike) throws
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || fragment.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];

					// Descend through wrappers to the right content
					j = wrap[ 0 ];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Support: QtWebKit
					// jQuery.merge because push.apply(_, arraylike) throws
					jQuery.merge( nodes, tmp.childNodes );

					// Remember the top-level container
					tmp = fragment.firstChild;

					// Fixes #12346
					// Support: Webkit, IE
					tmp.textContent = "";
				}
			}
		}

		// Remove wrapper from fragment
		fragment.textContent = "";

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( fragment.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		return fragment;
	},

	cleanData: function( elems ) {
		var data, elem, type, key,
			special = jQuery.event.special,
			i = 0;

		for ( ; (elem = elems[ i ]) !== undefined; i++ ) {
			if ( jQuery.acceptData( elem ) ) {
				key = elem[ data_priv.expando ];

				if ( key && (data = data_priv.cache[ key ]) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}
					if ( data_priv.cache[ key ] ) {
						// Discard any remaining `private` data
						delete data_priv.cache[ key ];
					}
				}
			}
			// Discard any remaining `user` data
			delete data_user.cache[ elem[ data_user.expando ] ];
		}
	}
});

jQuery.fn.extend({
	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each(function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				});
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	remove: function( selector, keepData /* Internal Use Only */ ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {
			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map(function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var arg = arguments[ 0 ];

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			arg = this.parentNode;

			jQuery.cleanData( getAll( this ) );

			if ( arg ) {
				arg.replaceChild( elem, this );
			}
		});

		// Force removal if there was no new content (e.g., from empty arguments)
		return arg && (arg.length || arg.nodeType) ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var fragment, first, scripts, hasScripts, node, doc,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[ 0 ],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[ 0 ] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							// Support: QtWebKit
							// jQuery.merge because push.apply(_, arraylike) throws
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[ i ], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
							}
						}
					}
				}
			}
		}

		return this;
	}
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: QtWebKit
			// .get() because push.apply(_, arraylike) throws
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});


var iframe,
	elemdisplay = {};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */
// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var style,
		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		// getDefaultComputedStyle might be reliably used only on attached element
		display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

			// Use of this method is a temporary fix (more like optmization) until something better comes along,
			// since it was removed from specification and supported only in FF
			style.display : jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = iframe[ 0 ].contentDocument;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = (/^margin/);

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {
		return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
	};



function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE9
	// getPropertyValue is only needed for .css('filter') in IE9, see #12537
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];
	}

	if ( computed ) {

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// Support: iOS < 6
		// A tribute to the "awesome hack by Dean Edwards"
		// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
		// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
		if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?
		// Support: IE
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {
	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {
				// Hook not needed (or it's not possible to use it due to missing dependency),
				// remove it.
				// Since there are no other hooks for marginRight, remove the whole object.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.

			return (this.get = hookFn).apply( this, arguments );
		}
	};
}


(function() {
	var pixelPositionVal, boxSizingReliableVal,
		docElem = document.documentElement,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	if ( !div.style ) {
		return;
	}

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" +
		"position:absolute";
	container.appendChild( div );

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computePixelPositionAndBoxSizingReliable() {
		div.style.cssText =
			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
			"border:1px;padding:1px;width:4px;position:absolute";
		div.innerHTML = "";
		docElem.appendChild( container );

		var divStyle = window.getComputedStyle( div, null );
		pixelPositionVal = divStyle.top !== "1%";
		boxSizingReliableVal = divStyle.width === "4px";

		docElem.removeChild( container );
	}

	// Support: node.js jsdom
	// Don't assume that getComputedStyle is a property of the global object
	if ( window.getComputedStyle ) {
		jQuery.extend( support, {
			pixelPosition: function() {
				// This test is executed only once but we still do memoizing
				// since we can use the boxSizingReliable pre-computing.
				// No need to check if the test was already performed, though.
				computePixelPositionAndBoxSizingReliable();
				return pixelPositionVal;
			},
			boxSizingReliable: function() {
				if ( boxSizingReliableVal == null ) {
					computePixelPositionAndBoxSizingReliable();
				}
				return boxSizingReliableVal;
			},
			reliableMarginRight: function() {
				// Support: Android 2.3
				// Check if div with explicit width and no margin-right incorrectly
				// gets computed margin-right based on width of container. (#3333)
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// This support function is only executed once so no memoizing is needed.
				var ret,
					marginDiv = div.appendChild( document.createElement( "div" ) );

				// Reset CSS: box-sizing; display; margin; border; padding
				marginDiv.style.cssText = div.style.cssText =
					// Support: Firefox<29, Android 2.3
					// Vendor-prefix box-sizing
					"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
					"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
				marginDiv.style.marginRight = marginDiv.style.width = "0";
				div.style.width = "1px";
				docElem.appendChild( container );

				ret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );

				docElem.removeChild( container );

				return ret;
			}
		});
	}
})();


// A method for quickly swapping in/out CSS properties to get correct calculations.
jQuery.swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var
	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name[0].toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = data_priv.get( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = data_priv.access( elem, "olddisplay", defaultDisplay(elem.nodeName) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display !== "none" || !hidden ) {
				data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set. See: #7116
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Fixes #8908, it can be done more correctly by specifying setters in cssHooks,
			// but it would mean to define eight (for every problematic property) identical functions
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				style[ name ] = value;
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

// Support: Android 2.3
jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			// Work around by temporarily setting element display to inline-block
			return jQuery.swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});

jQuery.fn.extend({
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	}
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*
					// Use a string for doubling factor so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur()
				// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		} ]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// we're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = data_priv.get( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE9-10 do not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			data_priv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
			style.display = "inline-block";
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always(function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		});
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = data_priv.access( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;

			data_priv.remove( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || data_priv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = data_priv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = data_priv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		});
	}
});

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = setTimeout( next, time );
		hooks.stop = function() {
			clearTimeout( timeout );
		};
	});
};


(function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: iOS 5.1, Android 4.x, Android 2.3
	// Check the default checkbox/radio value ("" on old WebKit; "on" elsewhere)
	support.checkOn = input.value !== "";

	// Must access the parent to make an option select properly
	// Support: IE9, IE10
	support.optSelected = opt.selected;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Check if an input maintains its value after becoming a radio
	// Support: IE9, IE10
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
})();


var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	}
});

jQuery.extend({
	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					elem[ propName ] = false;
				}

				elem.removeAttribute( name );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	}
});

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle;
		if ( !isXML ) {
			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ name ];
			attrHandle[ name ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				name.toLowerCase() :
				null;
			attrHandle[ name ] = handle;
		}
		return ret;
	};
});




var rfocusable = /^(?:input|select|textarea|button)$/i;

jQuery.fn.extend({
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each(function() {
			delete this[ jQuery.propFix[ name ] || name ];
		});
	}
});

jQuery.extend({
	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
					elem.tabIndex :
					-1;
			}
		}
	}
});

// Support: IE9+
// Selectedness for an option in an optgroup can be inaccurate
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});




var rclass = /[\t\r\n\f]/g;

jQuery.fn.extend({
	addClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			proceed = typeof value === "string" && value,
			i = 0,
			len = this.length;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			proceed = arguments.length === 0 || typeof value === "string" && value,
			i = 0,
			len = this.length;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = value ? jQuery.trim( cur ) : "";
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					data_priv.set( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	}
});




var rreturn = /\r/g;

jQuery.fn.extend({
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					jQuery.trim( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// IE6-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ? !option.disabled : option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];
					if ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {
						optionSet = true;
					}
				}

				// force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
});

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			// Support: Webkit
			// "" is returned instead of "on" if a value isn't specified
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});




// Return jQuery for attributes-only inclusion


jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});


var nonce = jQuery.now();

var rquery = (/\?/);



// Support: Android 2.3
// Workaround failure to string-cast null input
jQuery.parseJSON = function( data ) {
	return JSON.parse( data + "" );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE9
	try {
		tmp = new DOMParser();
		xml = tmp.parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	// Document location
	ajaxLocParts,
	ajaxLocation,

	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat("*");

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType[0] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

		// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,
			// URL without anti-cache param
			cacheURL,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
});


jQuery._evalUrl = function( url ) {
	return jQuery.ajax({
		url: url,
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	});
};


jQuery.fn.extend({
	wrapAll: function( html ) {
		var wrap;

		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapAll( html.call(this, i) );
			});
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});


jQuery.expr.filters.hidden = function( elem ) {
	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
};
jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function() {
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		})
		.map(function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});


jQuery.ajaxSettings.xhr = function() {
	try {
		return new XMLHttpRequest();
	} catch( e ) {}
};

var xhrId = 0,
	xhrCallbacks = {},
	xhrSuccessStatus = {
		// file protocol always yields status code 0, assume 200
		0: 200,
		// Support: IE9
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE9
// Open requests must be manually aborted on unload (#5280)
if ( window.ActiveXObject ) {
	jQuery( window ).on( "unload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]();
		}
	});
}

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport(function( options ) {
	var callback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr(),
					id = ++xhrId;

				xhr.open( options.type, options.url, options.async, options.username, options.password );

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers["X-Requested-With"] ) {
					headers["X-Requested-With"] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							delete xhrCallbacks[ id ];
							callback = xhr.onload = xhr.onerror = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {
								complete(
									// file: protocol always yields status 0; see #8605, #14207
									xhr.status,
									xhr.statusText
								);
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,
									// Support: IE9
									// Accessing binary-data responseText throws an exception
									// (#11426)
									typeof xhr.responseText === "string" ? {
										text: xhr.responseText
									} : undefined,
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				xhr.onerror = callback("error");

				// Create the abort callback
				callback = xhrCallbacks[ id ] = callback("abort");

				try {
					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {
					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {
	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery("<script>").prop({
					async: true,
					charset: s.scriptCharset,
					src: s.url
				}).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});




// data: string of html
// context (optional): If specified, the fragment will be created in this context, defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[1] ) ];
	}

	parsed = jQuery.buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = jQuery.trim( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep(jQuery.timers, function( fn ) {
		return elem === fn.elem;
	}).length;
};




var docElem = window.document.documentElement;

/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf("auto") > -1;

		// Need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend({
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each(function( i ) {
					jQuery.offset.setOffset( this, options, i );
				});
		}

		var docElem, win,
			elem = this[ 0 ],
			box = { top: 0, left: 0 },
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== strundefined ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top + win.pageYOffset - docElem.clientTop,
			left: box.left + win.pageXOffset - docElem.clientLeft
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// We assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || docElem;
		});
	}
});

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : window.pageXOffset,
					top ? val : window.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// getComputedStyle returns percent when specified for top/left/bottom/right
// rather than make the css module depend on the offset module, we just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );
				// if curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
});


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});


// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	});
}




var
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in
// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === strundefined ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;

}));

},{}],67:[function(require,module,exports){
(function (global){
/**
 * @license
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modern -o ./dist/lodash.js`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre ES5 environments */
  var undefined;

  /** Used to pool arrays and objects used internally */
  var arrayPool = [],
      objectPool = [];

  /** Used to generate unique IDs */
  var idCounter = 0;

  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */
  var keyPrefix = +new Date + '';

  /** Used as the size when optimizations are enabled for large arrays */
  var largeArraySize = 75;

  /** Used as the max size of the `arrayPool` and `objectPool` */
  var maxPoolSize = 40;

  /** Used to detect and test whitespace */
  var whitespace = (
    // whitespace
    ' \t\x0B\f\xA0\ufeff' +

    // line terminators
    '\n\r\u2028\u2029' +

    // unicode category "Zs" space separators
    '\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000'
  );

  /** Used to match empty string literals in compiled template source */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /**
   * Used to match ES6 template delimiters
   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match regexp flags from their coerced string values */
  var reFlags = /\w*$/;

  /** Used to detected named functions */
  var reFuncName = /^\s*function[ \n\r\t]+\w/;

  /** Used to match "interpolate" template delimiters */
  var reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match leading whitespace and zeros to be removed */
  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');

  /** Used to ensure capturing order of template delimiters */
  var reNoMatch = /($^)/;

  /** Used to detect functions containing a `this` reference */
  var reThis = /\bthis\b/;

  /** Used to match unescaped characters in compiled string literals */
  var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;

  /** Used to assign default `context` object properties */
  var contextProps = [
    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',
    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',
    'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify */
  var templateCounter = 0;

  /** `Object#toString` result shortcuts */
  var argsClass = '[object Arguments]',
      arrayClass = '[object Array]',
      boolClass = '[object Boolean]',
      dateClass = '[object Date]',
      funcClass = '[object Function]',
      numberClass = '[object Number]',
      objectClass = '[object Object]',
      regexpClass = '[object RegExp]',
      stringClass = '[object String]';

  /** Used to identify object classifications that `_.clone` supports */
  var cloneableClasses = {};
  cloneableClasses[funcClass] = false;
  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
  cloneableClasses[boolClass] = cloneableClasses[dateClass] =
  cloneableClasses[numberClass] = cloneableClasses[objectClass] =
  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

  /** Used as an internal `_.debounce` options object */
  var debounceOptions = {
    'leading': false,
    'maxWait': 0,
    'trailing': false
  };

  /** Used as the property descriptor for `__bindData__` */
  var descriptor = {
    'configurable': false,
    'enumerable': false,
    'value': null,
    'writable': false
  };

  /** Used to determine if values are of the language type Object */
  var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
  };

  /** Used to escape characters for inclusion in compiled string literals */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\t': 't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Used as a reference to the global object */
  var root = (objectTypes[typeof window] && window) || this;

  /** Detect free variable `exports` */
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  /** Detect free variable `module` */
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports` */
  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */
  var freeGlobal = objectTypes[typeof global] && global;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
    root = freeGlobal;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * The base implementation of `_.indexOf` without support for binary searches
   * or `fromIndex` constraints.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @returns {number} Returns the index of the matched value or `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    var index = (fromIndex || 0) - 1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * An implementation of `_.contains` for cache objects that mimics the return
   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.
   *
   * @private
   * @param {Object} cache The cache object to inspect.
   * @param {*} value The value to search for.
   * @returns {number} Returns `0` if `value` is found, else `-1`.
   */
  function cacheIndexOf(cache, value) {
    var type = typeof value;
    cache = cache.cache;

    if (type == 'boolean' || value == null) {
      return cache[value] ? 0 : -1;
    }
    if (type != 'number' && type != 'string') {
      type = 'object';
    }
    var key = type == 'number' ? value : keyPrefix + value;
    cache = (cache = cache[type]) && cache[key];

    return type == 'object'
      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)
      : (cache ? 0 : -1);
  }

  /**
   * Adds a given value to the corresponding cache object.
   *
   * @private
   * @param {*} value The value to add to the cache.
   */
  function cachePush(value) {
    var cache = this.cache,
        type = typeof value;

    if (type == 'boolean' || value == null) {
      cache[value] = true;
    } else {
      if (type != 'number' && type != 'string') {
        type = 'object';
      }
      var key = type == 'number' ? value : keyPrefix + value,
          typeCache = cache[type] || (cache[type] = {});

      if (type == 'object') {
        (typeCache[key] || (typeCache[key] = [])).push(value);
      } else {
        typeCache[key] = true;
      }
    }
  }

  /**
   * Used by `_.max` and `_.min` as the default callback when a given
   * collection is a string value.
   *
   * @private
   * @param {string} value The character to inspect.
   * @returns {number} Returns the code unit of given character.
   */
  function charAtCallback(value) {
    return value.charCodeAt(0);
  }

  /**
   * Used by `sortBy` to compare transformed `collection` elements, stable sorting
   * them in ascending order.
   *
   * @private
   * @param {Object} a The object to compare to `b`.
   * @param {Object} b The object to compare to `a`.
   * @returns {number} Returns the sort order indicator of `1` or `-1`.
   */
  function compareAscending(a, b) {
    var ac = a.criteria,
        bc = b.criteria,
        index = -1,
        length = ac.length;

    while (++index < length) {
      var value = ac[index],
          other = bc[index];

      if (value !== other) {
        if (value > other || typeof value == 'undefined') {
          return 1;
        }
        if (value < other || typeof other == 'undefined') {
          return -1;
        }
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to return the same value for
    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247
    //
    // This also ensures a stable sort in V8 and other engines.
    // See http://code.google.com/p/v8/issues/detail?id=90
    return a.index - b.index;
  }

  /**
   * Creates a cache object to optimize linear searches of large arrays.
   *
   * @private
   * @param {Array} [array=[]] The array to search.
   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.
   */
  function createCache(array) {
    var index = -1,
        length = array.length,
        first = array[0],
        mid = array[(length / 2) | 0],
        last = array[length - 1];

    if (first && typeof first == 'object' &&
        mid && typeof mid == 'object' && last && typeof last == 'object') {
      return false;
    }
    var cache = getObject();
    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

    var result = getObject();
    result.array = array;
    result.cache = cache;
    result.push = cachePush;

    while (++index < length) {
      result.push(array[index]);
    }
    return result;
  }

  /**
   * Used by `template` to escape characters for inclusion in compiled
   * string literals.
   *
   * @private
   * @param {string} match The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(match) {
    return '\\' + stringEscapes[match];
  }

  /**
   * Gets an array from the array pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Array} The array from the pool.
   */
  function getArray() {
    return arrayPool.pop() || [];
  }

  /**
   * Gets an object from the object pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Object} The object from the pool.
   */
  function getObject() {
    return objectPool.pop() || {
      'array': null,
      'cache': null,
      'criteria': null,
      'false': false,
      'index': 0,
      'null': false,
      'number': null,
      'object': null,
      'push': null,
      'string': null,
      'true': false,
      'undefined': false,
      'value': null
    };
  }

  /**
   * Releases the given array back to the array pool.
   *
   * @private
   * @param {Array} [array] The array to release.
   */
  function releaseArray(array) {
    array.length = 0;
    if (arrayPool.length < maxPoolSize) {
      arrayPool.push(array);
    }
  }

  /**
   * Releases the given object back to the object pool.
   *
   * @private
   * @param {Object} [object] The object to release.
   */
  function releaseObject(object) {
    var cache = object.cache;
    if (cache) {
      releaseObject(cache);
    }
    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
    if (objectPool.length < maxPoolSize) {
      objectPool.push(object);
    }
  }

  /**
   * Slices the `collection` from the `start` index up to, but not including,
   * the `end` index.
   *
   * Note: This function is used instead of `Array#slice` to support node lists
   * in IE < 9 and to ensure dense arrays are returned.
   *
   * @private
   * @param {Array|Object|string} collection The collection to slice.
   * @param {number} start The start index.
   * @param {number} end The end index.
   * @returns {Array} Returns the new array.
   */
  function slice(array, start, end) {
    start || (start = 0);
    if (typeof end == 'undefined') {
      end = array ? array.length : 0;
    }
    var index = -1,
        length = end - start || 0,
        result = Array(length < 0 ? 0 : length);

    while (++index < length) {
      result[index] = array[start + index];
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new `lodash` function using the given context object.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns the `lodash` function.
   */
  function runInContext(context) {
    // Avoid issues with some ES3 environments that attempt to use values, named
    // after built-in constructors like `Object`, for the creation of literals.
    // ES5 clears this up by stating that literals must use built-in constructors.
    // See http://es5.github.io/#x11.1.5.
    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

    /** Native constructor references */
    var Array = context.Array,
        Boolean = context.Boolean,
        Date = context.Date,
        Function = context.Function,
        Math = context.Math,
        Number = context.Number,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /**
     * Used for `Array` method references.
     *
     * Normally `Array.prototype` would suffice, however, using an array literal
     * avoids issues in Narwhal.
     */
    var arrayRef = [];

    /** Used for native method references */
    var objectProto = Object.prototype;

    /** Used to restore the original `_` reference in `noConflict` */
    var oldDash = context._;

    /** Used to resolve the internal [[Class]] of values */
    var toString = objectProto.toString;

    /** Used to detect if a method is native */
    var reNative = RegExp('^' +
      String(toString)
        .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
        .replace(/toString| for [^\]]+/g, '.*?') + '$'
    );

    /** Native method shortcuts */
    var ceil = Math.ceil,
        clearTimeout = context.clearTimeout,
        floor = Math.floor,
        fnToString = Function.prototype.toString,
        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
        hasOwnProperty = objectProto.hasOwnProperty,
        push = arrayRef.push,
        setTimeout = context.setTimeout,
        splice = arrayRef.splice,
        unshift = arrayRef.unshift;

    /** Used to set meta data on functions */
    var defineProperty = (function() {
      // IE 8 only accepts DOM elements
      try {
        var o = {},
            func = isNative(func = Object.defineProperty) && func,
            result = func(o, o, o) && func;
      } catch(e) { }
      return result;
    }());

    /* Native method shortcuts for methods with the same name as other `lodash` methods */
    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,
        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,
        nativeIsFinite = context.isFinite,
        nativeIsNaN = context.isNaN,
        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random;

    /** Used to lookup a built-in constructor by [[Class]] */
    var ctorByClass = {};
    ctorByClass[arrayClass] = Array;
    ctorByClass[boolClass] = Boolean;
    ctorByClass[dateClass] = Date;
    ctorByClass[funcClass] = Function;
    ctorByClass[objectClass] = Object;
    ctorByClass[numberClass] = Number;
    ctorByClass[regexpClass] = RegExp;
    ctorByClass[stringClass] = String;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps the given value to enable intuitive
     * method chaining.
     *
     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:
     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,
     * and `unshift`
     *
     * Chaining is supported in custom builds as long as the `value` method is
     * implicitly or explicitly included in the build.
     *
     * The chainable wrapper functions are:
     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,
     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,
     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,
     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,
     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,
     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,
     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,
     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,
     * and `zip`
     *
     * The non-chainable wrapper functions are:
     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,
     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,
     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,
     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,
     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,
     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,
     * `template`, `unescape`, `uniqueId`, and `value`
     *
     * The wrapper functions `first` and `last` return wrapped values when `n` is
     * provided, otherwise they return unwrapped values.
     *
     * Explicit chaining can be enabled by using the `_.chain` method.
     *
     * @name _
     * @constructor
     * @category Chaining
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns a `lodash` instance.
     * @example
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // returns an unwrapped value
     * wrapped.reduce(function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * // returns a wrapped value
     * var squares = wrapped.map(function(num) {
     *   return num * num;
     * });
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor
      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))
       ? value
       : new lodashWrapper(value);
    }

    /**
     * A fast path for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap in a `lodash` instance.
     * @param {boolean} chainAll A flag to enable chaining for all methods
     * @returns {Object} Returns a `lodash` instance.
     */
    function lodashWrapper(value, chainAll) {
      this.__chain__ = !!chainAll;
      this.__wrapped__ = value;
    }
    // ensure `new lodashWrapper` is an instance of `lodash`
    lodashWrapper.prototype = lodash.prototype;

    /**
     * An object used to flag environments features.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    var support = lodash.support = {};

    /**
     * Detect if functions can be decompiled by `Function#toString`
     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);

    /**
     * Detect if `Function#name` is supported (all but IE).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcNames = typeof Function.name == 'string';

    /**
     * By default, the template delimiters used by Lo-Dash are similar to those in
     * embedded Ruby (ERB). Change the following template settings to use alternative
     * delimiters.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'escape': /<%-([\s\S]+?)%>/g,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'evaluate': /<%([\s\S]+?)%>/g,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type string
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type Object
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type Function
         */
        '_': lodash
      }
    };

    /*--------------------------------------------------------------------------*/

    /**
     * The base implementation of `_.bind` that creates the bound function and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new bound function.
     */
    function baseBind(bindData) {
      var func = bindData[0],
          partialArgs = bindData[2],
          thisArg = bindData[4];

      function bound() {
        // `Function#bind` spec
        // http://es5.github.io/#x15.3.4.5
        if (partialArgs) {
          // avoid `arguments` object deoptimizations by using `slice` instead
          // of `Array.prototype.slice.call` and not assigning `arguments` to a
          // variable as a ternary expression
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        // mimic the constructor's `return` behavior
        // http://es5.github.io/#x13.2.2
        if (this instanceof bound) {
          // ensure `new bound` is an instance of `func`
          var thisBinding = baseCreate(func.prototype),
              result = func.apply(thisBinding, args || arguments);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisArg, args || arguments);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.clone` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates clones with source counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, callback, stackA, stackB) {
      if (callback) {
        var result = callback(value);
        if (typeof result != 'undefined') {
          return result;
        }
      }
      // inspect [[Class]]
      var isObj = isObject(value);
      if (isObj) {
        var className = toString.call(value);
        if (!cloneableClasses[className]) {
          return value;
        }
        var ctor = ctorByClass[className];
        switch (className) {
          case boolClass:
          case dateClass:
            return new ctor(+value);

          case numberClass:
          case stringClass:
            return new ctor(value);

          case regexpClass:
            result = ctor(value.source, reFlags.exec(value));
            result.lastIndex = value.lastIndex;
            return result;
        }
      } else {
        return value;
      }
      var isArr = isArray(value);
      if (isDeep) {
        // check for circular references and return corresponding clone
        var initedStack = !stackA;
        stackA || (stackA = getArray());
        stackB || (stackB = getArray());

        var length = stackA.length;
        while (length--) {
          if (stackA[length] == value) {
            return stackB[length];
          }
        }
        result = isArr ? ctor(value.length) : {};
      }
      else {
        result = isArr ? slice(value) : assign({}, value);
      }
      // add array properties assigned by `RegExp#exec`
      if (isArr) {
        if (hasOwnProperty.call(value, 'index')) {
          result.index = value.index;
        }
        if (hasOwnProperty.call(value, 'input')) {
          result.input = value.input;
        }
      }
      // exit for shallow clone
      if (!isDeep) {
        return result;
      }
      // add the source value to the stack of traversed objects
      // and associate it with its clone
      stackA.push(value);
      stackB.push(result);

      // recursively populate clone (susceptible to call stack limits)
      (isArr ? forEach : forOwn)(value, function(objValue, key) {
        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);
      });

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(prototype, properties) {
      return isObject(prototype) ? nativeCreate(prototype) : {};
    }
    // fallback for browsers without `Object.create`
    if (!nativeCreate) {
      baseCreate = (function() {
        function Object() {}
        return function(prototype) {
          if (isObject(prototype)) {
            Object.prototype = prototype;
            var result = new Object;
            Object.prototype = null;
          }
          return result || context.Object();
        };
      }());
    }

    /**
     * The base implementation of `_.createCallback` without support for creating
     * "_.pluck" or "_.where" style callbacks.
     *
     * @private
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     */
    function baseCreateCallback(func, thisArg, argCount) {
      if (typeof func != 'function') {
        return identity;
      }
      // exit early for no `thisArg` or already bound by `Function#bind`
      if (typeof thisArg == 'undefined' || !('prototype' in func)) {
        return func;
      }
      var bindData = func.__bindData__;
      if (typeof bindData == 'undefined') {
        if (support.funcNames) {
          bindData = !func.name;
        }
        bindData = bindData || !support.funcDecomp;
        if (!bindData) {
          var source = fnToString.call(func);
          if (!support.funcNames) {
            bindData = !reFuncName.test(source);
          }
          if (!bindData) {
            // checks if `func` references the `this` keyword and stores the result
            bindData = reThis.test(source);
            setBindData(func, bindData);
          }
        }
      }
      // exit early if there are no `this` references or `func` is bound
      if (bindData === false || (bindData !== true && bindData[1] & 1)) {
        return func;
      }
      switch (argCount) {
        case 1: return function(value) {
          return func.call(thisArg, value);
        };
        case 2: return function(a, b) {
          return func.call(thisArg, a, b);
        };
        case 3: return function(value, index, collection) {
          return func.call(thisArg, value, index, collection);
        };
        case 4: return function(accumulator, value, index, collection) {
          return func.call(thisArg, accumulator, value, index, collection);
        };
      }
      return bind(func, thisArg);
    }

    /**
     * The base implementation of `createWrapper` that creates the wrapper and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new function.
     */
    function baseCreateWrapper(bindData) {
      var func = bindData[0],
          bitmask = bindData[1],
          partialArgs = bindData[2],
          partialRightArgs = bindData[3],
          thisArg = bindData[4],
          arity = bindData[5];

      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          key = func;

      function bound() {
        var thisBinding = isBind ? thisArg : this;
        if (partialArgs) {
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        if (partialRightArgs || isCurry) {
          args || (args = slice(arguments));
          if (partialRightArgs) {
            push.apply(args, partialRightArgs);
          }
          if (isCurry && args.length < arity) {
            bitmask |= 16 & ~32;
            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
          }
        }
        args || (args = arguments);
        if (isBindKey) {
          func = thisBinding[key];
        }
        if (this instanceof bound) {
          thisBinding = baseCreate(func.prototype);
          var result = func.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisBinding, args);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.difference` that accepts a single array
     * of values to exclude.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {Array} [values] The array of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     */
    function baseDifference(array, values) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          isLarge = length >= largeArraySize && indexOf === baseIndexOf,
          result = [];

      if (isLarge) {
        var cache = createCache(values);
        if (cache) {
          indexOf = cacheIndexOf;
          values = cache;
        } else {
          isLarge = false;
        }
      }
      while (++index < length) {
        var value = array[index];
        if (indexOf(values, value) < 0) {
          result.push(value);
        }
      }
      if (isLarge) {
        releaseObject(values);
      }
      return result;
    }

    /**
     * The base implementation of `_.flatten` without support for callback
     * shorthands or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.
     * @param {number} [fromIndex=0] The index to start from.
     * @returns {Array} Returns a new flattened array.
     */
    function baseFlatten(array, isShallow, isStrict, fromIndex) {
      var index = (fromIndex || 0) - 1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value && typeof value == 'object' && typeof value.length == 'number'
            && (isArray(value) || isArguments(value))) {
          // recursively flatten arrays (susceptible to call stack limits)
          if (!isShallow) {
            value = baseFlatten(value, isShallow, isStrict);
          }
          var valIndex = -1,
              valLength = value.length,
              resIndex = result.length;

          result.length += valLength;
          while (++valIndex < valLength) {
            result[resIndex++] = value[valIndex];
          }
        } else if (!isStrict) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.isEqual`, without support for `thisArg` binding,
     * that allows partial "_.where" style comparisons.
     *
     * @private
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.
     * @param {Array} [stackA=[]] Tracks traversed `a` objects.
     * @param {Array} [stackB=[]] Tracks traversed `b` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {
      // used to indicate that when comparing objects, `a` has at least the properties of `b`
      if (callback) {
        var result = callback(a, b);
        if (typeof result != 'undefined') {
          return !!result;
        }
      }
      // exit early for identical values
      if (a === b) {
        // treat `+0` vs. `-0` as not equal
        return a !== 0 || (1 / a == 1 / b);
      }
      var type = typeof a,
          otherType = typeof b;

      // exit early for unlike primitive values
      if (a === a &&
          !(a && objectTypes[type]) &&
          !(b && objectTypes[otherType])) {
        return false;
      }
      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior
      // http://es5.github.io/#x15.3.4.4
      if (a == null || b == null) {
        return a === b;
      }
      // compare [[Class]] names
      var className = toString.call(a),
          otherClass = toString.call(b);

      if (className == argsClass) {
        className = objectClass;
      }
      if (otherClass == argsClass) {
        otherClass = objectClass;
      }
      if (className != otherClass) {
        return false;
      }
      switch (className) {
        case boolClass:
        case dateClass:
          // coerce dates and booleans to numbers, dates to milliseconds and booleans
          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal
          return +a == +b;

        case numberClass:
          // treat `NaN` vs. `NaN` as equal
          return (a != +a)
            ? b != +b
            // but treat `+0` vs. `-0` as not equal
            : (a == 0 ? (1 / a == 1 / b) : a == +b);

        case regexpClass:
        case stringClass:
          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)
          // treat string primitives and their corresponding object instances as equal
          return a == String(b);
      }
      var isArr = className == arrayClass;
      if (!isArr) {
        // unwrap any `lodash` wrapped values
        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),
            bWrapped = hasOwnProperty.call(b, '__wrapped__');

        if (aWrapped || bWrapped) {
          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);
        }
        // exit for functions and DOM nodes
        if (className != objectClass) {
          return false;
        }
        // in older versions of Opera, `arguments` objects have `Array` constructors
        var ctorA = a.constructor,
            ctorB = b.constructor;

        // non `Object` object instances with different constructors are not equal
        if (ctorA != ctorB &&
              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&
              ('constructor' in a && 'constructor' in b)
            ) {
          return false;
        }
      }
      // assume cyclic structures are equal
      // the algorithm for detecting cyclic structures is adapted from ES 5.1
      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)
      var initedStack = !stackA;
      stackA || (stackA = getArray());
      stackB || (stackB = getArray());

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == a) {
          return stackB[length] == b;
        }
      }
      var size = 0;
      result = true;

      // add `a` and `b` to the stack of traversed objects
      stackA.push(a);
      stackB.push(b);

      // recursively compare objects and arrays (susceptible to call stack limits)
      if (isArr) {
        // compare lengths to determine if a deep comparison is necessary
        length = a.length;
        size = b.length;
        result = size == length;

        if (result || isWhere) {
          // deep compare the contents, ignoring non-numeric properties
          while (size--) {
            var index = length,
                value = b[size];

            if (isWhere) {
              while (index--) {
                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {
                  break;
                }
              }
            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {
              break;
            }
          }
        }
      }
      else {
        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`
        // which, in this case, is more costly
        forIn(b, function(value, key, b) {
          if (hasOwnProperty.call(b, key)) {
            // count the number of properties.
            size++;
            // deep compare each property value.
            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));
          }
        });

        if (result && !isWhere) {
          // ensure both objects have the same number of properties
          forIn(a, function(value, key, a) {
            if (hasOwnProperty.call(a, key)) {
              // `size` will be `-1` if `a` has more properties than `b`
              return (result = --size > -1);
            }
          });
        }
      }
      stackA.pop();
      stackB.pop();

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.merge` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates values with source counterparts.
     */
    function baseMerge(object, source, callback, stackA, stackB) {
      (isArray(source) ? forEach : forOwn)(source, function(source, key) {
        var found,
            isArr,
            result = source,
            value = object[key];

        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
          // avoid merging previously merged cyclic sources
          var stackLength = stackA.length;
          while (stackLength--) {
            if ((found = stackA[stackLength] == source)) {
              value = stackB[stackLength];
              break;
            }
          }
          if (!found) {
            var isShallow;
            if (callback) {
              result = callback(value, source);
              if ((isShallow = typeof result != 'undefined')) {
                value = result;
              }
            }
            if (!isShallow) {
              value = isArr
                ? (isArray(value) ? value : [])
                : (isPlainObject(value) ? value : {});
            }
            // add `source` and associated `value` to the stack of traversed objects
            stackA.push(source);
            stackB.push(value);

            // recursively merge objects and arrays (susceptible to call stack limits)
            if (!isShallow) {
              baseMerge(value, source, callback, stackA, stackB);
            }
          }
        }
        else {
          if (callback) {
            result = callback(value, source);
            if (typeof result == 'undefined') {
              result = source;
            }
          }
          if (typeof result != 'undefined') {
            value = result;
          }
        }
        object[key] = value;
      });
    }

    /**
     * The base implementation of `_.random` without argument juggling or support
     * for returning floating-point numbers.
     *
     * @private
     * @param {number} min The minimum possible value.
     * @param {number} max The maximum possible value.
     * @returns {number} Returns a random number.
     */
    function baseRandom(min, max) {
      return min + floor(nativeRandom() * (max - min + 1));
    }

    /**
     * The base implementation of `_.uniq` without support for callback shorthands
     * or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function} [callback] The function called per iteration.
     * @returns {Array} Returns a duplicate-value-free array.
     */
    function baseUniq(array, isSorted, callback) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          result = [];

      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,
          seen = (callback || isLarge) ? getArray() : result;

      if (isLarge) {
        var cache = createCache(seen);
        indexOf = cacheIndexOf;
        seen = cache;
      }
      while (++index < length) {
        var value = array[index],
            computed = callback ? callback(value, index, array) : value;

        if (isSorted
              ? !index || seen[seen.length - 1] !== computed
              : indexOf(seen, computed) < 0
            ) {
          if (callback || isLarge) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      if (isLarge) {
        releaseArray(seen.array);
        releaseObject(seen);
      } else if (callback) {
        releaseArray(seen);
      }
      return result;
    }

    /**
     * Creates a function that aggregates a collection, creating an object composed
     * of keys generated from the results of running each element of the collection
     * through a callback. The given `setter` function sets the keys and values
     * of the composed object.
     *
     * @private
     * @param {Function} setter The setter function.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter) {
      return function(collection, callback, thisArg) {
        var result = {};
        callback = lodash.createCallback(callback, thisArg, 3);

        var index = -1,
            length = collection ? collection.length : 0;

        if (typeof length == 'number') {
          while (++index < length) {
            var value = collection[index];
            setter(result, value, callback(value, index, collection), collection);
          }
        } else {
          forOwn(collection, function(value, key, collection) {
            setter(result, value, callback(value, key, collection), collection);
          });
        }
        return result;
      };
    }

    /**
     * Creates a function that, when called, either curries or invokes `func`
     * with an optional `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to reference.
     * @param {number} bitmask The bitmask of method flags to compose.
     *  The bitmask may be composed of the following flags:
     *  1 - `_.bind`
     *  2 - `_.bindKey`
     *  4 - `_.curry`
     *  8 - `_.curry` (bound)
     *  16 - `_.partial`
     *  32 - `_.partialRight`
     * @param {Array} [partialArgs] An array of arguments to prepend to those
     *  provided to the new function.
     * @param {Array} [partialRightArgs] An array of arguments to append to those
     *  provided to the new function.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new function.
     */
    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          isPartial = bitmask & 16,
          isPartialRight = bitmask & 32;

      if (!isBindKey && !isFunction(func)) {
        throw new TypeError;
      }
      if (isPartial && !partialArgs.length) {
        bitmask &= ~16;
        isPartial = partialArgs = false;
      }
      if (isPartialRight && !partialRightArgs.length) {
        bitmask &= ~32;
        isPartialRight = partialRightArgs = false;
      }
      var bindData = func && func.__bindData__;
      if (bindData && bindData !== true) {
        // clone `bindData`
        bindData = slice(bindData);
        if (bindData[2]) {
          bindData[2] = slice(bindData[2]);
        }
        if (bindData[3]) {
          bindData[3] = slice(bindData[3]);
        }
        // set `thisBinding` is not previously bound
        if (isBind && !(bindData[1] & 1)) {
          bindData[4] = thisArg;
        }
        // set if previously bound but not currently (subsequent curried functions)
        if (!isBind && bindData[1] & 1) {
          bitmask |= 8;
        }
        // set curried arity if not yet set
        if (isCurry && !(bindData[1] & 4)) {
          bindData[5] = arity;
        }
        // append partial left arguments
        if (isPartial) {
          push.apply(bindData[2] || (bindData[2] = []), partialArgs);
        }
        // append partial right arguments
        if (isPartialRight) {
          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
        }
        // merge flags
        bindData[1] |= bitmask;
        return createWrapper.apply(null, bindData);
      }
      // fast path for `_.bind`
      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
    }

    /**
     * Used by `escape` to convert characters to HTML entities.
     *
     * @private
     * @param {string} match The matched character to escape.
     * @returns {string} Returns the escaped character.
     */
    function escapeHtmlChar(match) {
      return htmlEscapes[match];
    }

    /**
     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
     * customized, this method returns the custom method, otherwise it returns
     * the `baseIndexOf` function.
     *
     * @private
     * @returns {Function} Returns the "indexOf" function.
     */
    function getIndexOf() {
      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;
      return result;
    }

    /**
     * Checks if `value` is a native function.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.
     */
    function isNative(value) {
      return typeof value == 'function' && reNative.test(value);
    }

    /**
     * Sets `this` binding data on a given function.
     *
     * @private
     * @param {Function} func The function to set data on.
     * @param {Array} value The data array to set.
     */
    var setBindData = !defineProperty ? noop : function(func, value) {
      descriptor.value = value;
      defineProperty(func, '__bindData__', descriptor);
    };

    /**
     * A fallback implementation of `isPlainObject` which checks if a given value
     * is an object created by the `Object` constructor, assuming objects created
     * by the `Object` constructor have no inherited enumerable properties and that
     * there are no `Object.prototype` extensions.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     */
    function shimIsPlainObject(value) {
      var ctor,
          result;

      // avoid non Object objects, `arguments` objects, and DOM elements
      if (!(value && toString.call(value) == objectClass) ||
          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {
        return false;
      }
      // In most environments an object's own properties are iterated before
      // its inherited properties. If the last iterated property is an object's
      // own property then there are no inherited enumerable properties.
      forIn(value, function(value, key) {
        result = key;
      });
      return typeof result == 'undefined' || hasOwnProperty.call(value, result);
    }

    /**
     * Used by `unescape` to convert HTML entities to characters.
     *
     * @private
     * @param {string} match The matched character to unescape.
     * @returns {string} Returns the unescaped character.
     */
    function unescapeHtmlChar(match) {
      return htmlUnescapes[match];
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Checks if `value` is an `arguments` object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.
     * @example
     *
     * (function() { return _.isArguments(arguments); })(1, 2, 3);
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == argsClass || false;
    }

    /**
     * Checks if `value` is an array.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.
     * @example
     *
     * (function() { return _.isArray(arguments); })();
     * // => false
     *
     * _.isArray([1, 2, 3]);
     * // => true
     */
    var isArray = nativeIsArray || function(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == arrayClass || false;
    };

    /**
     * A fallback implementation of `Object.keys` which produces an array of the
     * given object's own enumerable property names.
     *
     * @private
     * @type Function
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     */
    var shimKeys = function(object) {
      var index, iterable = object, result = [];
      if (!iterable) return result;
      if (!(objectTypes[typeof object])) return result;
        for (index in iterable) {
          if (hasOwnProperty.call(iterable, index)) {
            result.push(index);
          }
        }
      return result
    };

    /**
     * Creates an array composed of the own enumerable property names of an object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     * @example
     *
     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)
     */
    var keys = !nativeKeys ? shimKeys : function(object) {
      if (!isObject(object)) {
        return [];
      }
      return nativeKeys(object);
    };

    /**
     * Used to convert characters to HTML entities:
     *
     * Though the `>` character is escaped for symmetry, characters like `>` and `/`
     * don't require escaping in HTML and have no special meaning unless they're part
     * of a tag or an unquoted attribute value.
     * http://mathiasbynens.be/notes/ambiguous-ampersands (under "semi-related fun fact")
     */
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };

    /** Used to convert HTML entities to characters */
    var htmlUnescapes = invert(htmlEscapes);

    /** Used to match HTML entities and HTML characters */
    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),
        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');

    /*--------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object. Subsequent sources will overwrite property assignments of previous
     * sources. If a callback is provided it will be executed to produce the
     * assigned values. The callback is bound to `thisArg` and invoked with two
     * arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @type Function
     * @alias extend
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize assigning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });
     * // => { 'name': 'fred', 'employer': 'slate' }
     *
     * var defaults = _.partialRight(_.assign, function(a, b) {
     *   return typeof a == 'undefined' ? b : a;
     * });
     *
     * var object = { 'name': 'barney' };
     * defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var assign = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {
        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);
      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {
        callback = args[--argsLength];
      }
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];
        }
        }
      }
      return result
    };

    /**
     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also
     * be cloned, otherwise they will be assigned by reference. If a callback
     * is provided it will be executed to produce the cloned values. If the
     * callback returns `undefined` cloning will be handled by the method instead.
     * The callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var shallow = _.clone(characters);
     * shallow[0] === characters[0];
     * // => true
     *
     * var deep = _.clone(characters, true);
     * deep[0] === characters[0];
     * // => false
     *
     * _.mixin({
     *   'clone': _.partialRight(_.clone, function(value) {
     *     return _.isElement(value) ? value.cloneNode(false) : undefined;
     *   })
     * });
     *
     * var clone = _.clone(document.body);
     * clone.childNodes.length;
     * // => 0
     */
    function clone(value, isDeep, callback, thisArg) {
      // allows working with "Collections" methods without using their `index`
      // and `collection` arguments for `isDeep` and `callback`
      if (typeof isDeep != 'boolean' && isDeep != null) {
        thisArg = callback;
        callback = isDeep;
        isDeep = false;
      }
      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates a deep clone of `value`. If a callback is provided it will be
     * executed to produce the cloned values. If the callback returns `undefined`
     * cloning will be handled by the method instead. The callback is bound to
     * `thisArg` and invoked with one argument; (value).
     *
     * Note: This method is loosely based on the structured clone algorithm. Functions
     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and
     * objects created by constructors other than `Object` are cloned to plain `Object` objects.
     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var deep = _.cloneDeep(characters);
     * deep[0] === characters[0];
     * // => false
     *
     * var view = {
     *   'label': 'docs',
     *   'node': element
     * };
     *
     * var clone = _.cloneDeep(view, function(value) {
     *   return _.isElement(value) ? value.cloneNode(true) : undefined;
     * });
     *
     * clone.node == view.node;
     * // => false
     */
    function cloneDeep(value, callback, thisArg) {
      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates an object that inherits from the given `prototype` object. If a
     * `properties` object is provided its own enumerable properties are assigned
     * to the created object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties ? assign(result, properties) : result;
    }

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object for all destination properties that resolve to `undefined`. Once a
     * property is set, additional defaults of the same property will be ignored.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param- {Object} [guard] Allows working with `_.reduce` without using its
     *  `key` and `object` arguments as sources.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var object = { 'name': 'barney' };
     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var defaults = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (typeof result[index] == 'undefined') result[index] = iterable[index];
        }
        }
      }
      return result
    };

    /**
     * This method is like `_.findIndex` except that it returns the key of the
     * first element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': false },
     *   'fred': {    'age': 40, 'blocked': true },
     *   'pebbles': { 'age': 1,  'blocked': false }
     * };
     *
     * _.findKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => 'barney' (property order is not guaranteed across environments)
     *
     * // using "_.where" callback shorthand
     * _.findKey(characters, { 'age': 1 });
     * // => 'pebbles'
     *
     * // using "_.pluck" callback shorthand
     * _.findKey(characters, 'blocked');
     * // => 'fred'
     */
    function findKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwn(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': true },
     *   'fred': {    'age': 40, 'blocked': false },
     *   'pebbles': { 'age': 1,  'blocked': true }
     * };
     *
     * _.findLastKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => returns `pebbles`, assuming `_.findKey` returns `barney`
     *
     * // using "_.where" callback shorthand
     * _.findLastKey(characters, { 'age': 40 });
     * // => 'fred'
     *
     * // using "_.pluck" callback shorthand
     * _.findLastKey(characters, 'blocked');
     * // => 'pebbles'
     */
    function findLastKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwnRight(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over own and inherited enumerable properties of an object,
     * executing the callback for each property. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, key, object). Callbacks may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forIn(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)
     */
    var forIn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        for (index in iterable) {
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forIn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forInRight(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'
     */
    function forInRight(object, callback, thisArg) {
      var pairs = [];

      forIn(object, function(value, key) {
        pairs.push(key, value);
      });

      var length = pairs.length;
      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(pairs[length--], pairs[length], object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Iterates over own enumerable properties of an object, executing the callback
     * for each property. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, key, object). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)
     */
    var forOwn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forOwn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'
     */
    function forOwnRight(object, callback, thisArg) {
      var props = keys(object),
          length = props.length;

      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        var key = props[length];
        if (callback(object[key], key, object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Creates a sorted array of property names of all enumerable properties,
     * own and inherited, of `object` that have function values.
     *
     * @static
     * @memberOf _
     * @alias methods
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names that have function values.
     * @example
     *
     * _.functions(_);
     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]
     */
    function functions(object) {
      var result = [];
      forIn(object, function(value, key) {
        if (isFunction(value)) {
          result.push(key);
        }
      });
      return result.sort();
    }

    /**
     * Checks if the specified property name exists as a direct property of `object`,
     * instead of an inherited property.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to check.
     * @returns {boolean} Returns `true` if key is a direct property, else `false`.
     * @example
     *
     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');
     * // => true
     */
    function has(object, key) {
      return object ? hasOwnProperty.call(object, key) : false;
    }

    /**
     * Creates an object composed of the inverted keys and values of the given object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the created inverted object.
     * @example
     *
     * _.invert({ 'first': 'fred', 'second': 'barney' });
     * // => { 'fred': 'first', 'barney': 'second' }
     */
    function invert(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index];
        result[object[key]] = key;
      }
      return result;
    }

    /**
     * Checks if `value` is a boolean value.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.
     * @example
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        value && typeof value == 'object' && toString.call(value) == boolClass || false;
    }

    /**
     * Checks if `value` is a date.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     */
    function isDate(value) {
      return value && typeof value == 'object' && toString.call(value) == dateClass || false;
    }

    /**
     * Checks if `value` is a DOM element.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     */
    function isElement(value) {
      return value && value.nodeType === 1 || false;
    }

    /**
     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a
     * length of `0` and objects with no own enumerable properties are considered
     * "empty".
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object|string} value The value to inspect.
     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({});
     * // => true
     *
     * _.isEmpty('');
     * // => true
     */
    function isEmpty(value) {
      var result = true;
      if (!value) {
        return result;
      }
      var className = toString.call(value),
          length = value.length;

      if ((className == arrayClass || className == stringClass || className == argsClass ) ||
          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
        return !length;
      }
      forOwn(value, function() {
        return (result = false);
      });
      return result;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent to each other. If a callback is provided it will be executed
     * to compare values. If the callback returns `undefined` comparisons will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (a, b).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var copy = { 'name': 'fred' };
     *
     * object == copy;
     * // => false
     *
     * _.isEqual(object, copy);
     * // => true
     *
     * var words = ['hello', 'goodbye'];
     * var otherWords = ['hi', 'goodbye'];
     *
     * _.isEqual(words, otherWords, function(a, b) {
     *   var reGreet = /^(?:hello|hi)$/i,
     *       aGreet = _.isString(a) && reGreet.test(a),
     *       bGreet = _.isString(b) && reGreet.test(b);
     *
     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;
     * });
     * // => true
     */
    function isEqual(a, b, callback, thisArg) {
      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));
    }

    /**
     * Checks if `value` is, or can be coerced to, a finite number.
     *
     * Note: This is not the same as native `isFinite` which will return true for
     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.
     * @example
     *
     * _.isFinite(-101);
     * // => true
     *
     * _.isFinite('10');
     * // => true
     *
     * _.isFinite(true);
     * // => false
     *
     * _.isFinite('');
     * // => false
     *
     * _.isFinite(Infinity);
     * // => false
     */
    function isFinite(value) {
      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
    }

    /**
     * Checks if `value` is a function.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     */
    function isFunction(value) {
      return typeof value == 'function';
    }

    /**
     * Checks if `value` is the language type of Object.
     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(1);
     * // => false
     */
    function isObject(value) {
      // check if the value is the ECMAScript language type of Object
      // http://es5.github.io/#x8
      // and avoid a V8 bug
      // http://code.google.com/p/v8/issues/detail?id=2291
      return !!(value && objectTypes[typeof value]);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * Note: This is not the same as native `isNaN` which will return `true` for
     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // `NaN` as a primitive is the only value that is not equal to itself
      // (perform the [[Class]] check first to avoid errors with some host objects in IE)
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(undefined);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is a number.
     *
     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(8.4 * 5);
     * // => true
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        value && typeof value == 'object' && toString.call(value) == numberClass || false;
    }

    /**
     * Checks if `value` is an object created by the `Object` constructor.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * _.isPlainObject(new Shape);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     */
    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
      if (!(value && toString.call(value) == objectClass)) {
        return false;
      }
      var valueOf = value.valueOf,
          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

      return objProto
        ? (value == objProto || getPrototypeOf(value) == objProto)
        : shimIsPlainObject(value);
    };

    /**
     * Checks if `value` is a regular expression.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.
     * @example
     *
     * _.isRegExp(/fred/);
     * // => true
     */
    function isRegExp(value) {
      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;
    }

    /**
     * Checks if `value` is a string.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.
     * @example
     *
     * _.isString('fred');
     * // => true
     */
    function isString(value) {
      return typeof value == 'string' ||
        value && typeof value == 'object' && toString.call(value) == stringClass || false;
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     */
    function isUndefined(value) {
      return typeof value == 'undefined';
    }

    /**
     * Creates an object with the same keys as `object` and values generated by
     * running each own enumerable property of `object` through the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new object with values of the results of each `callback` execution.
     * @example
     *
     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     *
     * var characters = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // using "_.pluck" callback shorthand
     * _.mapValues(characters, 'age');
     * // => { 'fred': 40, 'pebbles': 1 }
     */
    function mapValues(object, callback, thisArg) {
      var result = {};
      callback = lodash.createCallback(callback, thisArg, 3);

      forOwn(object, function(value, key, object) {
        result[key] = callback(value, key, object);
      });
      return result;
    }

    /**
     * Recursively merges own enumerable properties of the source object(s), that
     * don't resolve to `undefined` into the destination object. Subsequent sources
     * will overwrite property assignments of previous sources. If a callback is
     * provided it will be executed to produce the merged values of the destination
     * and source properties. If the callback returns `undefined` merging will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var names = {
     *   'characters': [
     *     { 'name': 'barney' },
     *     { 'name': 'fred' }
     *   ]
     * };
     *
     * var ages = {
     *   'characters': [
     *     { 'age': 36 },
     *     { 'age': 40 }
     *   ]
     * };
     *
     * _.merge(names, ages);
     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }
     *
     * var food = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var otherFood = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.merge(food, otherFood, function(a, b) {
     *   return _.isArray(a) ? a.concat(b) : undefined;
     * });
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }
     */
    function merge(object) {
      var args = arguments,
          length = 2;

      if (!isObject(object)) {
        return object;
      }
      // allows working with `_.reduce` and `_.reduceRight` without using
      // their `index` and `collection` arguments
      if (typeof args[2] != 'number') {
        length = args.length;
      }
      if (length > 3 && typeof args[length - 2] == 'function') {
        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);
      } else if (length > 2 && typeof args[length - 1] == 'function') {
        callback = args[--length];
      }
      var sources = slice(arguments, 1, length),
          index = -1,
          stackA = getArray(),
          stackB = getArray();

      while (++index < length) {
        baseMerge(object, sources[index], callback, stackA, stackB);
      }
      releaseArray(stackA);
      releaseArray(stackB);
      return object;
    }

    /**
     * Creates a shallow clone of `object` excluding the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` omitting the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The properties to omit or the
     *  function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object without the omitted properties.
     * @example
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');
     * // => { 'name': 'fred' }
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {
     *   return typeof value == 'number';
     * });
     * // => { 'name': 'fred' }
     */
    function omit(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var props = [];
        forIn(object, function(value, key) {
          props.push(key);
        });
        props = baseDifference(props, baseFlatten(arguments, true, false, 1));

        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          result[key] = object[key];
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (!callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * Creates a two dimensional array of an object's key-value pairs,
     * i.e. `[[key1, value1], [key2, value2]]`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns new array of key-value pairs.
     * @example
     *
     * _.pairs({ 'barney': 36, 'fred': 40 });
     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)
     */
    function pairs(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        var key = props[index];
        result[index] = [key, object[key]];
      }
      return result;
    }

    /**
     * Creates a shallow clone of `object` composed of the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` picking the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The function called per
     *  iteration or property names to pick, specified as individual property
     *  names or arrays of property names.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object composed of the picked properties.
     * @example
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');
     * // => { 'name': 'fred' }
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {
     *   return key.charAt(0) != '_';
     * });
     * // => { 'name': 'fred' }
     */
    function pick(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var index = -1,
            props = baseFlatten(arguments, true, false, 1),
            length = isObject(object) ? props.length : 0;

        while (++index < length) {
          var key = props[index];
          if (key in object) {
            result[key] = object[key];
          }
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * An alternative to `_.reduce` this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable properties through a callback, with each callback execution
     * potentially mutating the `accumulator` object. The callback is bound to
     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).
     * Callbacks may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {
     *   num *= num;
     *   if (num % 2) {
     *     return result.push(num) < 3;
     *   }
     * });
     * // => [1, 9, 25]
     *
     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     * });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function transform(object, callback, accumulator, thisArg) {
      var isArr = isArray(object);
      if (accumulator == null) {
        if (isArr) {
          accumulator = [];
        } else {
          var ctor = object && object.constructor,
              proto = ctor && ctor.prototype;

          accumulator = baseCreate(proto);
        }
      }
      if (callback) {
        callback = lodash.createCallback(callback, thisArg, 4);
        (isArr ? forEach : forOwn)(object, function(value, index, object) {
          return callback(accumulator, value, index, object);
        });
      }
      return accumulator;
    }

    /**
     * Creates an array composed of the own enumerable property values of `object`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property values.
     * @example
     *
     * _.values({ 'one': 1, 'two': 2, 'three': 3 });
     * // => [1, 2, 3] (property order is not guaranteed across environments)
     */
    function values(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        result[index] = object[props[index]];
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array of elements from the specified indexes, or keys, of the
     * `collection`. Indexes may be specified as individual arguments or as arrays
     * of indexes.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`
     *   to retrieve, specified as individual indexes or arrays of indexes.
     * @returns {Array} Returns a new array of elements corresponding to the
     *  provided indexes.
     * @example
     *
     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);
     * // => ['a', 'c', 'e']
     *
     * _.at(['fred', 'barney', 'pebbles'], 0, 2);
     * // => ['fred', 'pebbles']
     */
    function at(collection) {
      var args = arguments,
          index = -1,
          props = baseFlatten(args, true, false, 1),
          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,
          result = Array(length);

      while(++index < length) {
        result[index] = collection[props[index]];
      }
      return result;
    }

    /**
     * Checks if a given value is present in a collection using strict equality
     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the
     * offset from the end of the collection.
     *
     * @static
     * @memberOf _
     * @alias include
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {*} target The value to check for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.
     * @example
     *
     * _.contains([1, 2, 3], 1);
     * // => true
     *
     * _.contains([1, 2, 3], 1, 2);
     * // => false
     *
     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.contains('pebbles', 'eb');
     * // => true
     */
    function contains(collection, target, fromIndex) {
      var index = -1,
          indexOf = getIndexOf(),
          length = collection ? collection.length : 0,
          result = false;

      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
      if (isArray(collection)) {
        result = indexOf(collection, target, fromIndex) > -1;
      } else if (typeof length == 'number') {
        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;
      } else {
        forOwn(collection, function(value) {
          if (++index >= fromIndex) {
            return !(result = value === target);
          }
        });
      }
      return result;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through the callback. The corresponding value
     * of each key is the number of times the key was returned by the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
    });

    /**
     * Checks if the given callback returns truey value for **all** elements of
     * a collection. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias all
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if all elements passed the callback check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes']);
     * // => false
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.every(characters, 'age');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.every(characters, { 'age': 36 });
     * // => false
     */
    function every(collection, callback, thisArg) {
      var result = true;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if (!(result = !!callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return (result = !!callback(value, index, collection));
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning an array of all elements
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias select
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that passed the callback check.
     * @example
     *
     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [2, 4, 6]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.filter(characters, 'blocked');
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     *
     * // using "_.where" callback shorthand
     * _.filter(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     */
    function filter(collection, callback, thisArg) {
      var result = [];
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            result.push(value);
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result.push(value);
          }
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning the first element that
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias detect, findWhere
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.find(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => { 'name': 'barney', 'age': 36, 'blocked': false }
     *
     * // using "_.where" callback shorthand
     * _.find(characters, { 'age': 1 });
     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }
     *
     * // using "_.pluck" callback shorthand
     * _.find(characters, 'blocked');
     * // => { 'name': 'fred', 'age': 40, 'blocked': true }
     */
    function find(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            return value;
          }
        }
      } else {
        var result;
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result = value;
            return false;
          }
        });
        return result;
      }
    }

    /**
     * This method is like `_.find` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(num) {
     *   return num % 2 == 1;
     * });
     * // => 3
     */
    function findLast(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forEachRight(collection, function(value, index, collection) {
        if (callback(value, index, collection)) {
          result = value;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over elements of a collection, executing the callback for each
     * element. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * Note: As with other "Collections" methods, objects with a `length` property
     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
     * may be used for object iteration.
     *
     * @static
     * @memberOf _
     * @alias each
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');
     * // => logs each number and returns '1,2,3'
     *
     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });
     * // => logs each number and returns the object (property order is not guaranteed across environments)
     */
    function forEach(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (++index < length) {
          if (callback(collection[index], index, collection) === false) {
            break;
          }
        }
      } else {
        forOwn(collection, callback);
      }
      return collection;
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias eachRight
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');
     * // => logs each number from right to left and returns '3,2,1'
     */
    function forEachRight(collection, callback, thisArg) {
      var length = collection ? collection.length : 0;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (length--) {
          if (callback(collection[length], length, collection) === false) {
            break;
          }
        }
      } else {
        var props = keys(collection);
        length = props.length;
        forOwn(collection, function(value, key, collection) {
          key = props ? props[--length] : --length;
          return callback(collection[key], key, collection);
        });
      }
      return collection;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of a collection through the callback. The corresponding value
     * of each key is an array of the elements responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * // using "_.pluck" callback shorthand
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of the collection through the given callback. The corresponding
     * value of each key is the last element responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var keys = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.indexBy(keys, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     */
    var indexBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Invokes the method named by `methodName` on each element in the `collection`
     * returning an array of the results of each invoked method. Additional arguments
     * will be provided to each invoked method. If `methodName` is a function it
     * will be invoked for, and `this` bound to, each element in the `collection`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|string} methodName The name of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [arg] Arguments to invoke the method with.
     * @returns {Array} Returns a new array of the results of each invoked method.
     * @example
     *
     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invoke([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    function invoke(collection, methodName) {
      var args = slice(arguments, 2),
          index = -1,
          isFunc = typeof methodName == 'function',
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);
      });
      return result;
    }

    /**
     * Creates an array of values by running each element in the collection
     * through the callback. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias collect
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of the results of each `callback` execution.
     * @example
     *
     * _.map([1, 2, 3], function(num) { return num * 3; });
     * // => [3, 6, 9]
     *
     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });
     * // => [3, 6, 9] (property order is not guaranteed across environments)
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(characters, 'name');
     * // => ['barney', 'fred']
     */
    function map(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        var result = Array(length);
        while (++index < length) {
          result[index] = callback(collection[index], index, collection);
        }
      } else {
        result = [];
        forOwn(collection, function(value, key, collection) {
          result[++index] = callback(value, key, collection);
        });
      }
      return result;
    }

    /**
     * Retrieves the maximum value of a collection. If the collection is empty or
     * falsey `-Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.max(characters, function(chr) { return chr.age; });
     * // => { 'name': 'fred', 'age': 40 };
     *
     * // using "_.pluck" callback shorthand
     * _.max(characters, 'age');
     * // => { 'name': 'fred', 'age': 40 };
     */
    function max(collection, callback, thisArg) {
      var computed = -Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value > result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current > computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the minimum value of a collection. If the collection is empty or
     * falsey `Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.min(characters, function(chr) { return chr.age; });
     * // => { 'name': 'barney', 'age': 36 };
     *
     * // using "_.pluck" callback shorthand
     * _.min(characters, 'age');
     * // => { 'name': 'barney', 'age': 36 };
     */
    function min(collection, callback, thisArg) {
      var computed = Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value < result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current < computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the value of a specified property from all elements in the collection.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {string} property The name of the property to pluck.
     * @returns {Array} Returns a new array of property values.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.pluck(characters, 'name');
     * // => ['barney', 'fred']
     */
    var pluck = map;

    /**
     * Reduces a collection to a value which is the accumulated result of running
     * each element in the collection through the callback, where each successive
     * callback execution consumes the return value of the previous execution. If
     * `accumulator` is not provided the first element of the collection will be
     * used as the initial `accumulator` value. The callback is bound to `thisArg`
     * and invoked with four arguments; (accumulator, value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @alias foldl, inject
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var sum = _.reduce([1, 2, 3], function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     *   return result;
     * }, {});
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function reduce(collection, callback, accumulator, thisArg) {
      if (!collection) return accumulator;
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);

      var index = -1,
          length = collection.length;

      if (typeof length == 'number') {
        if (noaccum) {
          accumulator = collection[++index];
        }
        while (++index < length) {
          accumulator = callback(accumulator, collection[index], index, collection);
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          accumulator = noaccum
            ? (noaccum = false, value)
            : callback(accumulator, value, index, collection)
        });
      }
      return accumulator;
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias foldr
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var list = [[0, 1], [2, 3], [4, 5]];
     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, callback, accumulator, thisArg) {
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);
      forEachRight(collection, function(value, index, collection) {
        accumulator = noaccum
          ? (noaccum = false, value)
          : callback(accumulator, value, index, collection);
      });
      return accumulator;
    }

    /**
     * The opposite of `_.filter` this method returns the elements of a
     * collection that the callback does **not** return truey for.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that failed the callback check.
     * @example
     *
     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [1, 3, 5]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.reject(characters, 'blocked');
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     *
     * // using "_.where" callback shorthand
     * _.reject(characters, { 'age': 36 });
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     */
    function reject(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);
      return filter(collection, function(value, index, collection) {
        return !callback(value, index, collection);
      });
    }

    /**
     * Retrieves a random element or `n` random elements from a collection.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to sample.
     * @param {number} [n] The number of elements to sample.
     * @param- {Object} [guard] Allows working with functions like `_.map`
     *  without using their `index` arguments as `n`.
     * @returns {Array} Returns the random sample(s) of `collection`.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     *
     * _.sample([1, 2, 3, 4], 2);
     * // => [3, 1]
     */
    function sample(collection, n, guard) {
      if (collection && typeof collection.length != 'number') {
        collection = values(collection);
      }
      if (n == null || guard) {
        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;
      }
      var result = shuffle(collection);
      result.length = nativeMin(nativeMax(0, n), result.length);
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the Fisher-Yates
     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to shuffle.
     * @returns {Array} Returns a new shuffled collection.
     * @example
     *
     * _.shuffle([1, 2, 3, 4, 5, 6]);
     * // => [4, 1, 6, 3, 5, 2]
     */
    function shuffle(collection) {
      var index = -1,
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        var rand = baseRandom(0, ++index);
        result[index] = result[rand];
        result[rand] = value;
      });
      return result;
    }

    /**
     * Gets the size of the `collection` by returning `collection.length` for arrays
     * and array-like objects or the number of own enumerable properties for objects.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns `collection.length` or number of own enumerable properties.
     * @example
     *
     * _.size([1, 2]);
     * // => 2
     *
     * _.size({ 'one': 1, 'two': 2, 'three': 3 });
     * // => 3
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      var length = collection ? collection.length : 0;
      return typeof length == 'number' ? length : keys(collection).length;
    }

    /**
     * Checks if the callback returns a truey value for **any** element of a
     * collection. The function returns as soon as it finds a passing value and
     * does not iterate over the entire collection. The callback is bound to
     * `thisArg` and invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias any
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if any element passed the callback check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.some(characters, 'blocked');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.some(characters, { 'age': 1 });
     * // => false
     */
    function some(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if ((result = callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return !(result = callback(value, index, collection));
        });
      }
      return !!result;
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection through the callback. This method
     * performs a stable sort, that is, it will preserve the original sort order
     * of equal elements. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an array of property names is provided for `callback` the collection
     * will be sorted by each property value.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of sorted elements.
     * @example
     *
     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });
     * // => [3, 1, 2]
     *
     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);
     * // => [3, 1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'barney',  'age': 26 },
     *   { 'name': 'fred',    'age': 30 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(_.sortBy(characters, 'age'), _.values);
     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]
     *
     * // sorting by multiple properties
     * _.map(_.sortBy(characters, ['name', 'age']), _.values);
     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]
     */
    function sortBy(collection, callback, thisArg) {
      var index = -1,
          isArr = isArray(callback),
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      if (!isArr) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      forEach(collection, function(value, key, collection) {
        var object = result[++index] = getObject();
        if (isArr) {
          object.criteria = map(callback, function(key) { return value[key]; });
        } else {
          (object.criteria = getArray())[0] = callback(value, key, collection);
        }
        object.index = index;
        object.value = value;
      });

      length = result.length;
      result.sort(compareAscending);
      while (length--) {
        var object = result[length];
        result[length] = object.value;
        if (!isArr) {
          releaseArray(object.criteria);
        }
        releaseObject(object);
      }
      return result;
    }

    /**
     * Converts the `collection` to an array.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to convert.
     * @returns {Array} Returns the new converted array.
     * @example
     *
     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);
     * // => [2, 3, 4]
     */
    function toArray(collection) {
      if (collection && typeof collection.length == 'number') {
        return slice(collection);
      }
      return values(collection);
    }

    /**
     * Performs a deep comparison of each element in a `collection` to the given
     * `properties` object, returning an array of all elements that have equivalent
     * property values.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Object} props The object of property values to filter by.
     * @returns {Array} Returns a new array of elements that have the given properties.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * _.where(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]
     *
     * _.where(characters, { 'pets': ['dino'] });
     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]
     */
    var where = filter;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are all falsey.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to compact.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Creates an array excluding all values of the provided arrays using strict
     * equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {...Array} [values] The arrays of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);
     * // => [1, 3, 4]
     */
    function difference(array) {
      return baseDifference(array, baseFlatten(arguments, true, true, 1));
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.findIndex(characters, function(chr) {
     *   return chr.age < 20;
     * });
     * // => 2
     *
     * // using "_.where" callback shorthand
     * _.findIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findIndex(characters, 'blocked');
     * // => 1
     */
    function findIndex(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        if (callback(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': true },
     *   { 'name': 'fred',    'age': 40, 'blocked': false },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }
     * ];
     *
     * _.findLastIndex(characters, function(chr) {
     *   return chr.age > 30;
     * });
     * // => 1
     *
     * // using "_.where" callback shorthand
     * _.findLastIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findLastIndex(characters, 'blocked');
     * // => 2
     */
    function findLastIndex(array, callback, thisArg) {
      var length = array ? array.length : 0;
      callback = lodash.createCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(array[length], length, array)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Gets the first element or first `n` elements of an array. If a callback
     * is provided elements at the beginning of the array are returned as long
     * as the callback returns truey. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias head, take
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the first element(s) of `array`.
     * @example
     *
     * _.first([1, 2, 3]);
     * // => 1
     *
     * _.first([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.first([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.first(characters, 'blocked');
     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');
     * // => ['barney', 'fred']
     */
    function first(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = -1;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[0] : undefined;
        }
      }
      return slice(array, 0, nativeMin(nativeMax(0, n), length));
    }

    /**
     * Flattens a nested array (the nesting can be to any depth). If `isShallow`
     * is truey, the array will only be flattened a single level. If a callback
     * is provided each element of the array is passed through the callback before
     * flattening. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new flattened array.
     * @example
     *
     * _.flatten([1, [2], [3, [[4]]]]);
     * // => [1, 2, 3, 4];
     *
     * _.flatten([1, [2], [3, [[4]]]], true);
     * // => [1, 2, 3, [[4]]];
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.flatten(characters, 'pets');
     * // => ['hoppy', 'baby puss', 'dino']
     */
    function flatten(array, isShallow, callback, thisArg) {
      // juggle arguments
      if (typeof isShallow != 'boolean' && isShallow != null) {
        thisArg = callback;
        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;
        isShallow = false;
      }
      if (callback != null) {
        array = map(array, callback, thisArg);
      }
      return baseFlatten(array, isShallow);
    }

    /**
     * Gets the index at which the first occurrence of `value` is found using
     * strict equality for comparisons, i.e. `===`. If the array is already sorted
     * providing `true` for `fromIndex` will run a faster binary search.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
     *  to perform a binary search on a sorted array.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 1
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 4
     *
     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);
     * // => 2
     */
    function indexOf(array, value, fromIndex) {
      if (typeof fromIndex == 'number') {
        var length = array ? array.length : 0;
        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);
      } else if (fromIndex) {
        var index = sortedIndex(array, value);
        return array[index] === value ? index : -1;
      }
      return baseIndexOf(array, value, fromIndex);
    }

    /**
     * Gets all but the last element or last `n` elements of an array. If a
     * callback is provided elements at the end of the array are excluded from
     * the result as long as the callback returns truey. The callback is bound
     * to `thisArg` and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     *
     * _.initial([1, 2, 3], 2);
     * // => [1]
     *
     * _.initial([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [1]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.initial(characters, 'blocked');
     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');
     * // => ['barney', 'fred']
     */
    function initial(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : callback || n;
      }
      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
    }

    /**
     * Creates an array of unique values present in all provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of shared values.
     * @example
     *
     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2]
     */
    function intersection() {
      var args = [],
          argsIndex = -1,
          argsLength = arguments.length,
          caches = getArray(),
          indexOf = getIndexOf(),
          trustIndexOf = indexOf === baseIndexOf,
          seen = getArray();

      while (++argsIndex < argsLength) {
        var value = arguments[argsIndex];
        if (isArray(value) || isArguments(value)) {
          args.push(value);
          caches.push(trustIndexOf && value.length >= largeArraySize &&
            createCache(argsIndex ? args[argsIndex] : seen));
        }
      }
      var array = args[0],
          index = -1,
          length = array ? array.length : 0,
          result = [];

      outer:
      while (++index < length) {
        var cache = caches[0];
        value = array[index];

        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
          argsIndex = argsLength;
          (cache || seen).push(value);
          while (--argsIndex) {
            cache = caches[argsIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
              continue outer;
            }
          }
          result.push(value);
        }
      }
      while (argsLength--) {
        cache = caches[argsLength];
        if (cache) {
          releaseObject(cache);
        }
      }
      releaseArray(caches);
      releaseArray(seen);
      return result;
    }

    /**
     * Gets the last element or last `n` elements of an array. If a callback is
     * provided elements at the end of the array are returned as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the last element(s) of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     *
     * _.last([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.last([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [2, 3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.last(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.last(characters, { 'employer': 'na' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function last(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[length - 1] : undefined;
        }
      }
      return slice(array, nativeMax(0, length - n));
    }

    /**
     * Gets the index at which the last occurrence of `value` is found using strict
     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
     * as the offset from the end of the collection.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 4
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var index = array ? array.length : 0;
      if (typeof fromIndex == 'number') {
        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Removes all provided values from the given array using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {...*} [value] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     * _.pull(array, 2, 3);
     * console.log(array);
     * // => [1, 1]
     */
    function pull(array) {
      var args = arguments,
          argsIndex = 0,
          argsLength = args.length,
          length = array ? array.length : 0;

      while (++argsIndex < argsLength) {
        var index = -1,
            value = args[argsIndex];
        while (++index < length) {
          if (array[index] === value) {
            splice.call(array, index--, 1);
            length--;
          }
        }
      }
      return array;
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to but not including `end`. If `start` is less than `stop` a
     * zero-length range is created unless a negative `step` is specified.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns a new range array.
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    function range(start, end, step) {
      start = +start || 0;
      step = typeof step == 'number' ? step : (+step || 1);

      if (end == null) {
        end = start;
        start = 0;
      }
      // use `Array(length)` so engines like Chakra and V8 avoid slower modes
      // http://youtu.be/XAqIpGU8ZZk#t=17m25s
      var index = -1,
          length = nativeMax(0, ceil((end - start) / (step || 1))),
          result = Array(length);

      while (++index < length) {
        result[index] = start;
        start += step;
      }
      return result;
    }

    /**
     * Removes all elements from an array that the callback returns truey for
     * and returns an array of removed elements. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4, 5, 6];
     * var evens = _.remove(array, function(num) { return num % 2 == 0; });
     *
     * console.log(array);
     * // => [1, 3, 5]
     *
     * console.log(evens);
     * // => [2, 4, 6]
     */
    function remove(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        var value = array[index];
        if (callback(value, index, array)) {
          result.push(value);
          splice.call(array, index--, 1);
          length--;
        }
      }
      return result;
    }

    /**
     * The opposite of `_.initial` this method gets all but the first element or
     * first `n` elements of an array. If a callback function is provided elements
     * at the beginning of the array are excluded from the result as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias drop, tail
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.rest([1, 2, 3]);
     * // => [2, 3]
     *
     * _.rest([1, 2, 3], 2);
     * // => [3]
     *
     * _.rest([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.rest(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.rest(characters, { 'employer': 'slate' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function rest(array, callback, thisArg) {
      if (typeof callback != 'number' && callback != null) {
        var n = 0,
            index = -1,
            length = array ? array.length : 0;

        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);
      }
      return slice(array, n);
    }

    /**
     * Uses a binary search to determine the smallest index at which a value
     * should be inserted into a given sorted array in order to maintain the sort
     * order of the array. If a callback is provided it will be executed for
     * `value` and each element of `array` to compute their sort ranking. The
     * callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([20, 30, 50], 40);
     * // => 2
     *
     * // using "_.pluck" callback shorthand
     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
     * // => 2
     *
     * var dict = {
     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }
     * };
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return dict.wordToNumber[word];
     * });
     * // => 2
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return this.wordToNumber[word];
     * }, dict);
     * // => 2
     */
    function sortedIndex(array, value, callback, thisArg) {
      var low = 0,
          high = array ? array.length : low;

      // explicitly reference `identity` for better inlining in Firefox
      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;
      value = callback(value);

      while (low < high) {
        var mid = (low + high) >>> 1;
        (callback(array[mid]) < value)
          ? low = mid + 1
          : high = mid;
      }
      return low;
    }

    /**
     * Creates an array of unique values, in order, of the provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of combined values.
     * @example
     *
     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2, 3, 5, 4]
     */
    function union() {
      return baseUniq(baseFlatten(arguments, true, true));
    }

    /**
     * Creates a duplicate-value-free version of an array using strict equality
     * for comparisons, i.e. `===`. If the array is sorted, providing
     * `true` for `isSorted` will use a faster algorithm. If a callback is provided
     * each element of `array` is passed through the callback before uniqueness
     * is computed. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias unique
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a duplicate-value-free array.
     * @example
     *
     * _.uniq([1, 2, 1, 3, 1]);
     * // => [1, 2, 3]
     *
     * _.uniq([1, 1, 2, 2, 3], true);
     * // => [1, 2, 3]
     *
     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });
     * // => ['A', 'b', 'C']
     *
     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);
     * // => [1, 2.5, 3]
     *
     * // using "_.pluck" callback shorthand
     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniq(array, isSorted, callback, thisArg) {
      // juggle arguments
      if (typeof isSorted != 'boolean' && isSorted != null) {
        thisArg = callback;
        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;
        isSorted = false;
      }
      if (callback != null) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      return baseUniq(array, isSorted, callback);
    }

    /**
     * Creates an array excluding all provided values using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to filter.
     * @param {...*} [value] The values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);
     * // => [2, 3, 4]
     */
    function without(array) {
      return baseDifference(array, slice(arguments, 1));
    }

    /**
     * Creates an array that is the symmetric difference of the provided arrays.
     * See http://en.wikipedia.org/wiki/Symmetric_difference.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of values.
     * @example
     *
     * _.xor([1, 2, 3], [5, 2, 1, 4]);
     * // => [3, 5, 4]
     *
     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);
     * // => [1, 4, 5]
     */
    function xor() {
      var index = -1,
          length = arguments.length;

      while (++index < length) {
        var array = arguments[index];
        if (isArray(array) || isArguments(array)) {
          var result = result
            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))
            : array;
        }
      }
      return result || [];
    }

    /**
     * Creates an array of grouped elements, the first of which contains the first
     * elements of the given arrays, the second of which contains the second
     * elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @alias unzip
     * @category Arrays
     * @param {...Array} [array] Arrays to process.
     * @returns {Array} Returns a new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    function zip() {
      var array = arguments.length > 1 ? arguments : arguments[0],
          index = -1,
          length = array ? max(pluck(array, 'length')) : 0,
          result = Array(length < 0 ? 0 : length);

      while (++index < length) {
        result[index] = pluck(array, index);
      }
      return result;
    }

    /**
     * Creates an object composed from arrays of `keys` and `values`. Provide
     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`
     * or two arrays, one of `keys` and one of corresponding `values`.
     *
     * @static
     * @memberOf _
     * @alias object
     * @category Arrays
     * @param {Array} keys The array of keys.
     * @param {Array} [values=[]] The array of values.
     * @returns {Object} Returns an object composed of the given keys and
     *  corresponding values.
     * @example
     *
     * _.zipObject(['fred', 'barney'], [30, 40]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function zipObject(keys, values) {
      var index = -1,
          length = keys ? keys.length : 0,
          result = {};

      if (!values && length && !isArray(keys[0])) {
        values = [];
      }
      while (++index < length) {
        var key = keys[index];
        if (values) {
          result[key] = values[index];
        } else if (key) {
          result[key[0]] = key[1];
        }
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that executes `func`, with  the `this` binding and
     * arguments of the created function, only after being called `n` times.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {number} n The number of times the function must be called before
     *  `func` is executed.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('Done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => logs 'Done saving!', after all saves have completed
     */
    function after(n, func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with the `this`
     * binding of `thisArg` and prepends any additional `bind` arguments to those
     * provided to the bound function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to bind.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var func = function(greeting) {
     *   return greeting + ' ' + this.name;
     * };
     *
     * func = _.bind(func, { 'name': 'fred' }, 'hi');
     * func();
     * // => 'hi fred'
     */
    function bind(func, thisArg) {
      return arguments.length > 2
        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)
        : createWrapper(func, 1, null, null, thisArg);
    }

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method. Method names may be specified as individual arguments or as arrays
     * of method names. If no method names are provided all the function properties
     * of `object` will be bound.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...string} [methodName] The object method names to
     *  bind, specified as individual method names or arrays of method names.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() { console.log('clicked ' + this.label); }
     * };
     *
     * _.bindAll(view);
     * jQuery('#docs').on('click', view.onClick);
     * // => logs 'clicked docs', when the button is clicked
     */
    function bindAll(object) {
      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),
          index = -1,
          length = funcs.length;

      while (++index < length) {
        var key = funcs[index];
        object[key] = createWrapper(object[key], 1, null, null, object);
      }
      return object;
    }

    /**
     * Creates a function that, when called, invokes the method at `object[key]`
     * and prepends any additional `bindKey` arguments to those provided to the bound
     * function. This method differs from `_.bind` by allowing bound functions to
     * reference methods that will be redefined or don't yet exist.
     * See http://michaux.ca/articles/lazy-function-definition-pattern.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object the method belongs to.
     * @param {string} key The key of the method.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'name': 'fred',
     *   'greet': function(greeting) {
     *     return greeting + ' ' + this.name;
     *   }
     * };
     *
     * var func = _.bindKey(object, 'greet', 'hi');
     * func();
     * // => 'hi fred'
     *
     * object.greet = function(greeting) {
     *   return greeting + 'ya ' + this.name + '!';
     * };
     *
     * func();
     * // => 'hiya fred!'
     */
    function bindKey(object, key) {
      return arguments.length > 2
        ? createWrapper(key, 19, slice(arguments, 2), null, object)
        : createWrapper(key, 3, null, null, object);
    }

    /**
     * Creates a function that is the composition of the provided functions,
     * where each function consumes the return value of the function that follows.
     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.
     * Each function is executed with the `this` binding of the composed function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {...Function} [func] Functions to compose.
     * @returns {Function} Returns the new composed function.
     * @example
     *
     * var realNameMap = {
     *   'pebbles': 'penelope'
     * };
     *
     * var format = function(name) {
     *   name = realNameMap[name.toLowerCase()] || name;
     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
     * };
     *
     * var greet = function(formatted) {
     *   return 'Hiya ' + formatted + '!';
     * };
     *
     * var welcome = _.compose(greet, format);
     * welcome('pebbles');
     * // => 'Hiya Penelope!'
     */
    function compose() {
      var funcs = arguments,
          length = funcs.length;

      while (length--) {
        if (!isFunction(funcs[length])) {
          throw new TypeError;
        }
      }
      return function() {
        var args = arguments,
            length = funcs.length;

        while (length--) {
          args = [funcs[length].apply(this, args)];
        }
        return args[0];
      };
    }

    /**
     * Creates a function which accepts one or more arguments of `func` that when
     * invoked either executes `func` returning its result, if all `func` arguments
     * have been provided, or returns a function that accepts one or more of the
     * remaining `func` arguments, and so on. The arity of `func` can be specified
     * if `func.length` is not sufficient.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var curried = _.curry(function(a, b, c) {
     *   console.log(a + b + c);
     * });
     *
     * curried(1)(2)(3);
     * // => 6
     *
     * curried(1, 2)(3);
     * // => 6
     *
     * curried(1, 2, 3);
     * // => 6
     */
    function curry(func, arity) {
      arity = typeof arity == 'number' ? arity : (+arity || func.length);
      return createWrapper(func, 4, null, null, null, arity);
    }

    /**
     * Creates a function that will delay the execution of `func` until after
     * `wait` milliseconds have elapsed since the last time it was invoked.
     * Provide an options object to indicate that `func` should be invoked on
     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls
     * to the debounced function will return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to debounce.
     * @param {number} wait The number of milliseconds to delay.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.
     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // avoid costly calculations while the window size is in flux
     * var lazyLayout = _.debounce(calculateLayout, 150);
     * jQuery(window).on('resize', lazyLayout);
     *
     * // execute `sendMail` when the click event is fired, debouncing subsequent calls
     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * });
     *
     * // ensure `batchLog` is executed once after 1 second of debounced calls
     * var source = new EventSource('/stream');
     * source.addEventListener('message', _.debounce(batchLog, 250, {
     *   'maxWait': 1000
     * }, false);
     */
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          maxWait = false,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      wait = nativeMax(0, wait) || 0;
      if (options === true) {
        var leading = true;
        trailing = false;
      } else if (isObject(options)) {
        leading = options.leading;
        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      var delayed = function() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0) {
          if (maxTimeoutId) {
            clearTimeout(maxTimeoutId);
          }
          var isCalled = trailingCall;
          maxTimeoutId = timeoutId = trailingCall = undefined;
          if (isCalled) {
            lastCalled = now();
            result = func.apply(thisArg, args);
            if (!timeoutId && !maxTimeoutId) {
              args = thisArg = null;
            }
          }
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      };

      var maxDelayed = function() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (trailing || (maxWait !== wait)) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = null;
          }
        }
      };

      return function() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);

        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled),
              isCalled = remaining <= 0;

          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          }
          else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        }
        else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = null;
        }
        return result;
      };
    }

    /**
     * Defers executing the `func` function until the current call stack has cleared.
     * Additional arguments will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to defer.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) { console.log(text); }, 'deferred');
     * // logs 'deferred' after one or more milliseconds
     */
    function defer(func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 1);
      return setTimeout(function() { func.apply(undefined, args); }, 1);
    }

    /**
     * Executes the `func` function after `wait` milliseconds. Additional arguments
     * will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay execution.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) { console.log(text); }, 1000, 'later');
     * // => logs 'later' after one second
     */
    function delay(func, wait) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 2);
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided it will be used to determine the cache key for storing the result
     * based on the arguments provided to the memoized function. By default, the
     * first argument provided to the memoized function is used as the cache key.
     * The `func` is executed with the `this` binding of the memoized function.
     * The result cache is exposed as the `cache` property on the memoized function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] A function used to resolve the cache key.
     * @returns {Function} Returns the new memoizing function.
     * @example
     *
     * var fibonacci = _.memoize(function(n) {
     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
     * });
     *
     * fibonacci(9)
     * // => 34
     *
     * var data = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // modifying the result cache
     * var get = _.memoize(function(name) { return data[name]; }, _.identity);
     * get('pebbles');
     * // => { 'name': 'pebbles', 'age': 1 }
     *
     * get.cache.pebbles.name = 'penelope';
     * get('pebbles');
     * // => { 'name': 'penelope', 'age': 1 }
     */
    function memoize(func, resolver) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var memoized = function() {
        var cache = memoized.cache,
            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];

        return hasOwnProperty.call(cache, key)
          ? cache[key]
          : (cache[key] = func.apply(this, arguments));
      }
      memoized.cache = {};
      return memoized;
    }

    /**
     * Creates a function that is restricted to execute `func` once. Repeat calls to
     * the function will return the value of the first call. The `func` is executed
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` executes `createApplication` once
     */
    function once(func) {
      var ran,
          result;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (ran) {
          return result;
        }
        ran = true;
        result = func.apply(this, arguments);

        // clear the `func` variable so the function may be garbage collected
        func = null;
        return result;
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with any additional
     * `partial` arguments prepended to those provided to the new function. This
     * method is similar to `_.bind` except it does **not** alter the `this` binding.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) { return greeting + ' ' + name; };
     * var hi = _.partial(greet, 'hi');
     * hi('fred');
     * // => 'hi fred'
     */
    function partial(func) {
      return createWrapper(func, 16, slice(arguments, 1));
    }

    /**
     * This method is like `_.partial` except that `partial` arguments are
     * appended to those provided to the new function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var defaultsDeep = _.partialRight(_.merge, _.defaults);
     *
     * var options = {
     *   'variable': 'data',
     *   'imports': { 'jq': $ }
     * };
     *
     * defaultsDeep(options, _.templateSettings);
     *
     * options.variable
     * // => 'data'
     *
     * options.imports
     * // => { '_': _, 'jq': $ }
     */
    function partialRight(func) {
      return createWrapper(func, 32, null, slice(arguments, 1));
    }

    /**
     * Creates a function that, when executed, will only call the `func` function
     * at most once per every `wait` milliseconds. Provide an options object to
     * indicate that `func` should be invoked on the leading and/or trailing edge
     * of the `wait` timeout. Subsequent calls to the throttled function will
     * return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the throttled function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to throttle.
     * @param {number} wait The number of milliseconds to throttle executions to.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // avoid excessively updating the position while scrolling
     * var throttled = _.throttle(updatePosition, 100);
     * jQuery(window).on('scroll', throttled);
     *
     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes
     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
     *   'trailing': false
     * }));
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      if (options === false) {
        leading = false;
      } else if (isObject(options)) {
        leading = 'leading' in options ? options.leading : leading;
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      debounceOptions.leading = leading;
      debounceOptions.maxWait = wait;
      debounceOptions.trailing = trailing;

      return debounce(func, wait, debounceOptions);
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Additional arguments provided to the function are appended
     * to those provided to the wrapper function. The wrapper is executed with
     * the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {*} value The value to wrap.
     * @param {Function} wrapper The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('Fred, Wilma, & Pebbles');
     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'
     */
    function wrap(value, wrapper) {
      return createWrapper(wrapper, 16, [value]);
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var getter = _.constant(object);
     * getter() === object;
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Produces a callback bound to an optional `thisArg`. If `func` is a property
     * name the created callback will return the property value for a given element.
     * If `func` is an object the created callback will return `true` for elements
     * that contain the equivalent object properties, otherwise it will return `false`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // wrap to create custom callback shorthands
     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {
     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);
     *   return !match ? func(callback, thisArg) : function(object) {
     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];
     *   };
     * });
     *
     * _.filter(characters, 'age__gt38');
     * // => [{ 'name': 'fred', 'age': 40 }]
     */
    function createCallback(func, thisArg, argCount) {
      var type = typeof func;
      if (func == null || type == 'function') {
        return baseCreateCallback(func, thisArg, argCount);
      }
      // handle "_.pluck" style callback shorthands
      if (type != 'object') {
        return property(func);
      }
      var props = keys(func),
          key = props[0],
          a = func[key];

      // handle "_.where" style callback shorthands
      if (props.length == 1 && a === a && !isObject(a)) {
        // fast path the common case of providing an object with a single
        // property containing a primitive value
        return function(object) {
          var b = object[key];
          return a === b && (a !== 0 || (1 / a == 1 / b));
        };
      }
      return function(object) {
        var length = props.length,
            result = false;

        while (length--) {
          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {
            break;
          }
        }
        return result;
      };
    }

    /**
     * Converts the characters `&`, `<`, `>`, `"`, and `'` in `string` to their
     * corresponding HTML entities.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('Fred, Wilma, & Pebbles');
     * // => 'Fred, Wilma, &amp; Pebbles'
     */
    function escape(string) {
      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);
    }

    /**
     * This method returns the first argument provided to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.identity(object) === object;
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Adds function properties of a source object to the destination object.
     * If `object` is a function methods will be added to its prototype as well.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Function|Object} [object=lodash] object The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.
     * @example
     *
     * function capitalize(string) {
     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
     * }
     *
     * _.mixin({ 'capitalize': capitalize });
     * _.capitalize('fred');
     * // => 'Fred'
     *
     * _('fred').capitalize().value();
     * // => 'Fred'
     *
     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });
     * _('fred').capitalize();
     * // => 'Fred'
     */
    function mixin(object, source, options) {
      var chain = true,
          methodNames = source && functions(source);

      if (!source || (!options && !methodNames.length)) {
        if (options == null) {
          options = source;
        }
        ctor = lodashWrapper;
        source = object;
        object = lodash;
        methodNames = functions(source);
      }
      if (options === false) {
        chain = false;
      } else if (isObject(options) && 'chain' in options) {
        chain = options.chain;
      }
      var ctor = object,
          isFunc = isFunction(ctor);

      forEach(methodNames, function(methodName) {
        var func = object[methodName] = source[methodName];
        if (isFunc) {
          ctor.prototype[methodName] = function() {
            var chainAll = this.__chain__,
                value = this.__wrapped__,
                args = [value];

            push.apply(args, arguments);
            var result = func.apply(object, args);
            if (chain || chainAll) {
              if (value === result && isObject(result)) {
                return this;
              }
              result = new ctor(result);
              result.__chain__ = chainAll;
            }
            return result;
          };
        }
      });
    }

    /**
     * Reverts the '_' variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      context._ = oldDash;
      return this;
    }

    /**
     * A no-operation function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.noop(object) === undefined;
     * // => true
     */
    function noop() {
      // no operation performed
    }

    /**
     * Gets the number of milliseconds that have elapsed since the Unix epoch
     * (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var stamp = _.now();
     * _.defer(function() { console.log(_.now() - stamp); });
     * // => logs the number of milliseconds it took for the deferred function to be called
     */
    var now = isNative(now = Date.now) && now || function() {
      return new Date().getTime();
    };

    /**
     * Converts the given value into an integer of the specified radix.
     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the
     * `value` is a hexadecimal, in which case a `radix` of `16` is used.
     *
     * Note: This method avoids differences in native ES3 and ES5 `parseInt`
     * implementations. See http://es5.github.io/#E.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} value The value to parse.
     * @param {number} [radix] The radix used to interpret the value to parse.
     * @returns {number} Returns the new integer value.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     */
    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {
      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`
      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);
    };

    /**
     * Creates a "_.pluck" style function, which returns the `key` value of a
     * given object.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} key The name of the property to retrieve.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var characters = [
     *   { 'name': 'fred',   'age': 40 },
     *   { 'name': 'barney', 'age': 36 }
     * ];
     *
     * var getName = _.property('name');
     *
     * _.map(characters, getName);
     * // => ['barney', 'fred']
     *
     * _.sortBy(characters, getName);
     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]
     */
    function property(key) {
      return function(object) {
        return object[key];
      };
    }

    /**
     * Produces a random number between `min` and `max` (inclusive). If only one
     * argument is provided a number between `0` and the given number will be
     * returned. If `floating` is truey or either `min` or `max` are floats a
     * floating-point number will be returned instead of an integer.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} [min=0] The minimum possible value.
     * @param {number} [max=1] The maximum possible value.
     * @param {boolean} [floating=false] Specify returning a floating-point number.
     * @returns {number} Returns a random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(min, max, floating) {
      var noMin = min == null,
          noMax = max == null;

      if (floating == null) {
        if (typeof min == 'boolean' && noMax) {
          floating = min;
          min = 1;
        }
        else if (!noMax && typeof max == 'boolean') {
          floating = max;
          noMax = true;
        }
      }
      if (noMin && noMax) {
        max = 1;
      }
      min = +min || 0;
      if (noMax) {
        max = min;
        min = 0;
      } else {
        max = +max || 0;
      }
      if (floating || min % 1 || max % 1) {
        var rand = nativeRandom();
        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);
      }
      return baseRandom(min, max);
    }

    /**
     * Resolves the value of property `key` on `object`. If `key` is a function
     * it will be invoked with the `this` binding of `object` and its result returned,
     * else the property value is returned. If `object` is falsey then `undefined`
     * is returned.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to resolve.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = {
     *   'cheese': 'crumpets',
     *   'stuff': function() {
     *     return 'nonsense';
     *   }
     * };
     *
     * _.result(object, 'cheese');
     * // => 'crumpets'
     *
     * _.result(object, 'stuff');
     * // => 'nonsense'
     */
    function result(object, key) {
      if (object) {
        var value = object[key];
        return isFunction(value) ? object[key]() : value;
      }
    }

    /**
     * A micro-templating method that handles arbitrary delimiters, preserves
     * whitespace, and correctly escapes quotes within interpolated code.
     *
     * Note: In the development build, `_.template` utilizes sourceURLs for easier
     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
     *
     * For more information on precompiling templates see:
     * http://lodash.com/custom-builds
     *
     * For more information on Chrome extension sandboxes see:
     * http://developer.chrome.com/stable/extensions/sandboxingEval.html
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} text The template text.
     * @param {Object} data The data object used to populate the text.
     * @param {Object} [options] The options object.
     * @param {RegExp} [options.escape] The "escape" delimiter.
     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
     * @param {Object} [options.imports] An object to import into the template as local variables.
     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
     * @param {string} [sourceURL] The sourceURL of the template's compiled source.
     * @param {string} [variable] The data object variable name.
     * @returns {Function|string} Returns a compiled function when no `data` object
     *  is given, else it returns the interpolated text.
     * @example
     *
     * // using the "interpolate" delimiter to create a compiled template
     * var compiled = _.template('hello <%= name %>');
     * compiled({ 'name': 'fred' });
     * // => 'hello fred'
     *
     * // using the "escape" delimiter to escape HTML in data property values
     * _.template('<b><%- value %></b>', { 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // using the "evaluate" delimiter to generate HTML
     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the ES6 delimiter as an alternative to the default "interpolate" delimiter
     * _.template('hello ${ name }', { 'name': 'pebbles' });
     * // => 'hello pebbles'
     *
     * // using the internal `print` function in "evaluate" delimiters
     * _.template('<% print("hello " + name); %>!', { 'name': 'barney' });
     * // => 'hello barney!'
     *
     * // using a custom template delimiters
     * _.templateSettings = {
     *   'interpolate': /{{([\s\S]+?)}}/g
     * };
     *
     * _.template('hello {{ name }}!', { 'name': 'mustache' });
     * // => 'hello mustache!'
     *
     * // using the `imports` option to import jQuery
     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the `sourceURL` option to specify a custom sourceURL for the template
     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
     *
     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     *   var __t, __p = '', __e = _.escape;
     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';
     *   return __p;
     * }
     *
     * // using the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and a stack trace
     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(text, data, options) {
      // based on John Resig's `tmpl` implementation
      // http://ejohn.org/blog/javascript-micro-templating/
      // and Laura Doktorova's doT.js
      // https://github.com/olado/doT
      var settings = lodash.templateSettings;
      text = String(text || '');

      // avoid missing dependencies when `iteratorTemplate` is not defined
      options = defaults({}, options, settings);

      var imports = defaults({}, options.imports, settings.imports),
          importsKeys = keys(imports),
          importsValues = values(imports);

      var isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // compile the regexp to match each delimiter
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // escape characters that cannot be included in string literals
        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // replace delimiters with snippets
        if (escapeValue) {
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // the JS engine embedded in Adobe products requires returning the `match`
        // string in order to produce the correct `offset` value
        return match;
      });

      source += "';\n";

      // if `variable` is not specified, wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain
      var variable = options.variable,
          hasVariable = variable;

      if (!hasVariable) {
        variable = 'obj';
        source = 'with (' + variable + ') {\n' + source + '\n}\n';
      }
      // cleanup code by stripping empty strings
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // frame code as the function body
      source = 'function(' + variable + ') {\n' +
        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') +
        "var __t, __p = '', __e = _.escape" +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      // Use a sourceURL for easier debugging.
      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
      var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';

      try {
        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);
      } catch(e) {
        e.source = source;
        throw e;
      }
      if (data) {
        return result(data);
      }
      // provide the compiled function's source by its `toString` method, in
      // supported environments, or the `source` property as a convenience for
      // inlining compiled templates during the build process
      result.source = source;
      return result;
    }

    /**
     * Executes the callback `n` times, returning an array of the results
     * of each callback execution. The callback is bound to `thisArg` and invoked
     * with one argument; (index).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} n The number of times to execute the callback.
     * @param {Function} callback The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns an array of the results of each `callback` execution.
     * @example
     *
     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));
     * // => [3, 6, 4]
     *
     * _.times(3, function(n) { mage.castSpell(n); });
     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively
     *
     * _.times(3, function(n) { this.cast(n); }, mage);
     * // => also calls `mage.castSpell(n)` three times
     */
    function times(n, callback, thisArg) {
      n = (n = +n) > -1 ? n : 0;
      var index = -1,
          result = Array(n);

      callback = baseCreateCallback(callback, thisArg, 1);
      while (++index < n) {
        result[index] = callback(index);
      }
      return result;
    }

    /**
     * The inverse of `_.escape` this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their
     * corresponding characters.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('Fred, Barney &amp; Pebbles');
     * // => 'Fred, Barney & Pebbles'
     */
    function unescape(string) {
      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);
    }

    /**
     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} [prefix] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return String(prefix == null ? '' : prefix) + id;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object that wraps the given value with explicit
     * method chaining enabled.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _.chain(characters)
     *     .sortBy('age')
     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })
     *     .first()
     *     .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      value = new lodashWrapper(value);
      value.__chain__ = true;
      return value;
    }

    /**
     * Invokes `interceptor` with the `value` as the first argument and then
     * returns `value`. The purpose of this method is to "tap into" a method
     * chain in order to perform operations on intermediate results within
     * the chain.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3, 4])
     *  .tap(function(array) { array.pop(); })
     *  .reverse()
     *  .value();
     * // => [3, 2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * Enables explicit method chaining on the wrapper object.
     *
     * @name chain
     * @memberOf _
     * @category Chaining
     * @returns {*} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // without explicit chaining
     * _(characters).first();
     * // => { 'name': 'barney', 'age': 36 }
     *
     * // with explicit chaining
     * _(characters).chain()
     *   .first()
     *   .pick('age')
     *   .value();
     * // => { 'age': 36 }
     */
    function wrapperChain() {
      this.__chain__ = true;
      return this;
    }

    /**
     * Produces the `toString` result of the wrapped value.
     *
     * @name toString
     * @memberOf _
     * @category Chaining
     * @returns {string} Returns the string result.
     * @example
     *
     * _([1, 2, 3]).toString();
     * // => '1,2,3'
     */
    function wrapperToString() {
      return String(this.__wrapped__);
    }

    /**
     * Extracts the wrapped value.
     *
     * @name valueOf
     * @memberOf _
     * @alias value
     * @category Chaining
     * @returns {*} Returns the wrapped value.
     * @example
     *
     * _([1, 2, 3]).valueOf();
     * // => [1, 2, 3]
     */
    function wrapperValueOf() {
      return this.__wrapped__;
    }

    /*--------------------------------------------------------------------------*/

    // add functions that return wrapped values when chaining
    lodash.after = after;
    lodash.assign = assign;
    lodash.at = at;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.chain = chain;
    lodash.compact = compact;
    lodash.compose = compose;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.createCallback = createCallback;
    lodash.curry = curry;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.filter = filter;
    lodash.flatten = flatten;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.functions = functions;
    lodash.groupBy = groupBy;
    lodash.indexBy = indexBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.invert = invert;
    lodash.invoke = invoke;
    lodash.keys = keys;
    lodash.map = map;
    lodash.mapValues = mapValues;
    lodash.max = max;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.min = min;
    lodash.omit = omit;
    lodash.once = once;
    lodash.pairs = pairs;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.pick = pick;
    lodash.pluck = pluck;
    lodash.property = property;
    lodash.pull = pull;
    lodash.range = range;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.shuffle = shuffle;
    lodash.sortBy = sortBy;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.times = times;
    lodash.toArray = toArray;
    lodash.transform = transform;
    lodash.union = union;
    lodash.uniq = uniq;
    lodash.values = values;
    lodash.where = where;
    lodash.without = without;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.zip = zip;
    lodash.zipObject = zipObject;

    // add aliases
    lodash.collect = map;
    lodash.drop = rest;
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.extend = assign;
    lodash.methods = functions;
    lodash.object = zipObject;
    lodash.select = filter;
    lodash.tail = rest;
    lodash.unique = uniq;
    lodash.unzip = zip;

    // add functions to `lodash.prototype`
    mixin(lodash);

    /*--------------------------------------------------------------------------*/

    // add functions that return unwrapped values when chaining
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.contains = contains;
    lodash.escape = escape;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.has = has;
    lodash.identity = identity;
    lodash.indexOf = indexOf;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isBoolean = isBoolean;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isNaN = isNaN;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isString = isString;
    lodash.isUndefined = isUndefined;
    lodash.lastIndexOf = lastIndexOf;
    lodash.mixin = mixin;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.result = result;
    lodash.runInContext = runInContext;
    lodash.size = size;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.template = template;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;

    // add aliases
    lodash.all = every;
    lodash.any = some;
    lodash.detect = find;
    lodash.findWhere = find;
    lodash.foldl = reduce;
    lodash.foldr = reduceRight;
    lodash.include = contains;
    lodash.inject = reduce;

    mixin(function() {
      var source = {}
      forOwn(lodash, function(func, methodName) {
        if (!lodash.prototype[methodName]) {
          source[methodName] = func;
        }
      });
      return source;
    }(), false);

    /*--------------------------------------------------------------------------*/

    // add functions capable of returning wrapped and unwrapped values when chaining
    lodash.first = first;
    lodash.last = last;
    lodash.sample = sample;

    // add aliases
    lodash.take = first;
    lodash.head = first;

    forOwn(lodash, function(func, methodName) {
      var callbackable = methodName !== 'sample';
      if (!lodash.prototype[methodName]) {
        lodash.prototype[methodName]= function(n, guard) {
          var chainAll = this.__chain__,
              result = func(this.__wrapped__, n, guard);

          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))
            ? result
            : new lodashWrapper(result, chainAll);
        };
      }
    });

    /*--------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type string
     */
    lodash.VERSION = '2.4.1';

    // add "Chaining" functions to the wrapper
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.toString = wrapperToString;
    lodash.prototype.value = wrapperValueOf;
    lodash.prototype.valueOf = wrapperValueOf;

    // add `Array` functions that return unwrapped values
    forEach(['join', 'pop', 'shift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        var chainAll = this.__chain__,
            result = func.apply(this.__wrapped__, arguments);

        return chainAll
          ? new lodashWrapper(result, chainAll)
          : result;
      };
    });

    // add `Array` functions that return the existing wrapped value
    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        func.apply(this.__wrapped__, arguments);
        return this;
      };
    });

    // add `Array` functions that return new wrapped values
    forEach(['concat', 'slice', 'splice'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);
      };
    });

    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // expose Lo-Dash
  var _ = runInContext();

  // some AMD build optimizers like r.js check for condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lo-Dash to the global object even when an AMD loader is present in
    // case Lo-Dash is loaded with a RequireJS shim config.
    // See http://requirejs.org/docs/api.html#config-shim
    root._ = _;

    // define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module
    define(function() {
      return _;
    });
  }
  // check for `exports` after `define` in case a build optimizer adds an `exports` object
  else if (freeExports && freeModule) {
    // in Node.js or RingoJS
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    }
    // in Narwhal or Rhino -require
    else {
      freeExports._ = _;
    }
  }
  else {
    // in a browser or Rhino
    root._ = _;
  }
}.call(this));

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],68:[function(require,module,exports){
;(function(win){
	var store = {},
		doc = win.document,
		localStorageName = 'localStorage',
		scriptTag = 'script',
		storage

	store.disabled = false
	store.version = '1.3.17'
	store.set = function(key, value) {}
	store.get = function(key, defaultVal) {}
	store.has = function(key) { return store.get(key) !== undefined }
	store.remove = function(key) {}
	store.clear = function() {}
	store.transact = function(key, defaultVal, transactionFn) {
		if (transactionFn == null) {
			transactionFn = defaultVal
			defaultVal = null
		}
		if (defaultVal == null) {
			defaultVal = {}
		}
		var val = store.get(key, defaultVal)
		transactionFn(val)
		store.set(key, val)
	}
	store.getAll = function() {}
	store.forEach = function() {}

	store.serialize = function(value) {
		return JSON.stringify(value)
	}
	store.deserialize = function(value) {
		if (typeof value != 'string') { return undefined }
		try { return JSON.parse(value) }
		catch(e) { return value || undefined }
	}

	// Functions to encapsulate questionable FireFox 3.6.13 behavior
	// when about.config::dom.storage.enabled === false
	// See https://github.com/marcuswestin/store.js/issues#issue/13
	function isLocalStorageNameSupported() {
		try { return (localStorageName in win && win[localStorageName]) }
		catch(err) { return false }
	}

	if (isLocalStorageNameSupported()) {
		storage = win[localStorageName]
		store.set = function(key, val) {
			if (val === undefined) { return store.remove(key) }
			storage.setItem(key, store.serialize(val))
			return val
		}
		store.get = function(key, defaultVal) {
			var val = store.deserialize(storage.getItem(key))
			return (val === undefined ? defaultVal : val)
		}
		store.remove = function(key) { storage.removeItem(key) }
		store.clear = function() { storage.clear() }
		store.getAll = function() {
			var ret = {}
			store.forEach(function(key, val) {
				ret[key] = val
			})
			return ret
		}
		store.forEach = function(callback) {
			for (var i=0; i<storage.length; i++) {
				var key = storage.key(i)
				callback(key, store.get(key))
			}
		}
	} else if (doc.documentElement.addBehavior) {
		var storageOwner,
			storageContainer
		// Since #userData storage applies only to specific paths, we need to
		// somehow link our data to a specific path.  We choose /favicon.ico
		// as a pretty safe option, since all browsers already make a request to
		// this URL anyway and being a 404 will not hurt us here.  We wrap an
		// iframe pointing to the favicon in an ActiveXObject(htmlfile) object
		// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)
		// since the iframe access rules appear to allow direct access and
		// manipulation of the document element, even for a 404 page.  This
		// document can be used instead of the current document (which would
		// have been limited to the current path) to perform #userData storage.
		try {
			storageContainer = new ActiveXObject('htmlfile')
			storageContainer.open()
			storageContainer.write('<'+scriptTag+'>document.w=window</'+scriptTag+'><iframe src="/favicon.ico"></iframe>')
			storageContainer.close()
			storageOwner = storageContainer.w.frames[0].document
			storage = storageOwner.createElement('div')
		} catch(e) {
			// somehow ActiveXObject instantiation failed (perhaps some special
			// security settings or otherwse), fall back to per-path storage
			storage = doc.createElement('div')
			storageOwner = doc.body
		}
		var withIEStorage = function(storeFunction) {
			return function() {
				var args = Array.prototype.slice.call(arguments, 0)
				args.unshift(storage)
				// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx
				// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx
				storageOwner.appendChild(storage)
				storage.addBehavior('#default#userData')
				storage.load(localStorageName)
				var result = storeFunction.apply(store, args)
				storageOwner.removeChild(storage)
				return result
			}
		}

		// In IE7, keys cannot start with a digit or contain certain chars.
		// See https://github.com/marcuswestin/store.js/issues/40
		// See https://github.com/marcuswestin/store.js/issues/83
		var forbiddenCharsRegex = new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]", "g")
		function ieKeyFix(key) {
			return key.replace(/^d/, '___$&').replace(forbiddenCharsRegex, '___')
		}
		store.set = withIEStorage(function(storage, key, val) {
			key = ieKeyFix(key)
			if (val === undefined) { return store.remove(key) }
			storage.setAttribute(key, store.serialize(val))
			storage.save(localStorageName)
			return val
		})
		store.get = withIEStorage(function(storage, key, defaultVal) {
			key = ieKeyFix(key)
			var val = store.deserialize(storage.getAttribute(key))
			return (val === undefined ? defaultVal : val)
		})
		store.remove = withIEStorage(function(storage, key) {
			key = ieKeyFix(key)
			storage.removeAttribute(key)
			storage.save(localStorageName)
		})
		store.clear = withIEStorage(function(storage) {
			var attributes = storage.XMLDocument.documentElement.attributes
			storage.load(localStorageName)
			for (var i=0, attr; attr=attributes[i]; i++) {
				storage.removeAttribute(attr.name)
			}
			storage.save(localStorageName)
		})
		store.getAll = function(storage) {
			var ret = {}
			store.forEach(function(key, val) {
				ret[key] = val
			})
			return ret
		}
		store.forEach = withIEStorage(function(storage, callback) {
			var attributes = storage.XMLDocument.documentElement.attributes
			for (var i=0, attr; attr=attributes[i]; ++i) {
				callback(attr.name, store.deserialize(storage.getAttribute(attr.name)))
			}
		})
	}

	try {
		var testKey = '__storejs__'
		store.set(testKey, testKey)
		if (store.get(testKey) != testKey) { store.disabled = true }
		store.remove(testKey)
	} catch(e) {
		store.disabled = true
	}
	store.enabled = !store.disabled

	if (typeof module != 'undefined' && module.exports && this.module !== module) { module.exports = store }
	else if (typeof define === 'function' && define.amd) { define(store) }
	else { win.store = store }

})(Function('return this')());

},{}],69:[function(require,module,exports){

},{}],70:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('is-array')

exports.Buffer = Buffer
exports.SlowBuffer = Buffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var kMaxLength = 0x3fffffff

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Note:
 *
 * - Implementation must support adding new properties to `Uint8Array` instances.
 *   Firefox 4-29 lacked support, fixed in Firefox 30+.
 *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *    incorrect length in some situations.
 *
 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will
 * get the Object implementation, which is slower but will work correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = (function () {
  try {
    var buf = new ArrayBuffer(0)
    var arr = new Uint8Array(buf)
    arr.foo = function () { return 42 }
    return 42 === arr.foo() && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
})()

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (subject, encoding, noZero) {
  if (!(this instanceof Buffer))
    return new Buffer(subject, encoding, noZero)

  var type = typeof subject

  // Find the length
  var length
  if (type === 'number')
    length = subject > 0 ? subject >>> 0 : 0
  else if (type === 'string') {
    if (encoding === 'base64')
      subject = base64clean(subject)
    length = Buffer.byteLength(subject, encoding)
  } else if (type === 'object' && subject !== null) { // assume object is array-like
    if (subject.type === 'Buffer' && isArray(subject.data))
      subject = subject.data
    length = +subject.length > 0 ? Math.floor(+subject.length) : 0
  } else
    throw new TypeError('must start with number, buffer, array or string')

  if (this.length > kMaxLength)
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
      'size: 0x' + kMaxLength.toString(16) + ' bytes')

  var buf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Preferred: Return an augmented `Uint8Array` instance for best performance
    buf = Buffer._augment(new Uint8Array(length))
  } else {
    // Fallback: Return THIS instance of Buffer (created by `new`)
    buf = this
    buf.length = length
    buf._isBuffer = true
  }

  var i
  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {
    // Speed optimization -- use set if we're copying from a typed array
    buf._set(subject)
  } else if (isArrayish(subject)) {
    // Treat array-ish objects as a byte array
    if (Buffer.isBuffer(subject)) {
      for (i = 0; i < length; i++)
        buf[i] = subject.readUInt8(i)
    } else {
      for (i = 0; i < length; i++)
        buf[i] = ((subject[i] % 256) + 256) % 256
    }
  } else if (type === 'string') {
    buf.write(subject, 0, encoding)
  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {
    for (i = 0; i < length; i++) {
      buf[i] = 0
    }
  }

  return buf
}

Buffer.isBuffer = function (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))
    throw new TypeError('Arguments must be Buffers')

  var x = a.length
  var y = b.length
  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}
  if (i !== len) {
    x = a[i]
    y = b[i]
  }
  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function (list, totalLength) {
  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (totalLength === undefined) {
    totalLength = 0
    for (i = 0; i < list.length; i++) {
      totalLength += list[i].length
    }
  }

  var buf = new Buffer(totalLength)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

Buffer.byteLength = function (str, encoding) {
  var ret
  str = str + ''
  switch (encoding || 'utf8') {
    case 'ascii':
    case 'binary':
    case 'raw':
      ret = str.length
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = str.length * 2
      break
    case 'hex':
      ret = str.length >>> 1
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8ToBytes(str).length
      break
    case 'base64':
      ret = base64ToBytes(str).length
      break
    default:
      ret = str.length
  }
  return ret
}

// pre-set for values that may exist in the future
Buffer.prototype.length = undefined
Buffer.prototype.parent = undefined

// toString(encoding, start=0, end=buffer.length)
Buffer.prototype.toString = function (encoding, start, end) {
  var loweredCase = false

  start = start >>> 0
  end = end === undefined || end === Infinity ? this.length : end >>> 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase)
          throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.equals = function (b) {
  if(!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max)
      str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  return Buffer.compare(this, b)
}

// `get` will be removed in Node 0.13+
Buffer.prototype.get = function (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` will be removed in Node 0.13+
Buffer.prototype.set = function (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var byte = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(byte)) throw new Error('Invalid hex string')
    buf[offset + i] = byte
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  var charsWritten = blitBuffer(utf8ToBytes(string), buf, offset, length)
  return charsWritten
}

function asciiWrite (buf, string, offset, length) {
  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)
  return charsWritten
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)
  return charsWritten
}

function utf16leWrite (buf, string, offset, length) {
  var charsWritten = blitBuffer(utf16leToBytes(string), buf, offset, length, 2)
  return charsWritten
}

Buffer.prototype.write = function (string, offset, length, encoding) {
  // Support both (string, offset, length, encoding)
  // and the legacy (string, encoding, offset, length)
  if (isFinite(offset)) {
    if (!isFinite(length)) {
      encoding = length
      length = undefined
    }
  } else {  // legacy
    var swap = encoding
    encoding = offset
    offset = length
    length = swap
  }

  offset = Number(offset) || 0
  var remaining = this.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }
  encoding = String(encoding || 'utf8').toLowerCase()

  var ret
  switch (encoding) {
    case 'hex':
      ret = hexWrite(this, string, offset, length)
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8Write(this, string, offset, length)
      break
    case 'ascii':
      ret = asciiWrite(this, string, offset, length)
      break
    case 'binary':
      ret = binaryWrite(this, string, offset, length)
      break
    case 'base64':
      ret = base64Write(this, string, offset, length)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = utf16leWrite(this, string, offset, length)
      break
    default:
      throw new TypeError('Unknown encoding: ' + encoding)
  }
  return ret
}

Buffer.prototype.toJSON = function () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function binarySlice (buf, start, end) {
  return asciiSlice(buf, start, end)
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len;
    if (start < 0)
      start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0)
      end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start)
    end = start

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    return Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    var newBuf = new Buffer(sliceLen, undefined, true)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
    return newBuf
  }
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0)
    throw new RangeError('offset is not uint')
  if (offset + ext > length)
    throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUInt8 = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
      ((this[offset + 1] << 16) |
      (this[offset + 2] << 8) |
      this[offset + 3])
}

Buffer.prototype.readInt8 = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80))
    return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16) |
      (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
      (this[offset + 1] << 16) |
      (this[offset + 2] << 8) |
      (this[offset + 3])
}

Buffer.prototype.readFloatLE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new TypeError('value is out of bounds')
  if (offset + ext > buf.length) throw new TypeError('index out of range')
}

Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = value
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else objectWriteUInt16(this, value, offset, true)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else objectWriteUInt16(this, value, offset, false)
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = value
  } else objectWriteUInt32(this, value, offset, true)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else objectWriteUInt32(this, value, offset, false)
  return offset + 4
}

Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = value
  return offset + 1
}

Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else objectWriteUInt16(this, value, offset, true)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else objectWriteUInt16(this, value, offset, false)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else objectWriteUInt32(this, value, offset, true)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else objectWriteUInt32(this, value, offset, false)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (value > max || value < min) throw new TypeError('value is out of bounds')
  if (offset + ext > buf.length) throw new TypeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert)
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert)
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function (target, target_start, start, end) {
  var source = this

  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (!target_start) target_start = 0

  // Copy 0 bytes; we're done
  if (end === start) return
  if (target.length === 0 || source.length === 0) return

  // Fatal error conditions
  if (end < start) throw new TypeError('sourceEnd < sourceStart')
  if (target_start < 0 || target_start >= target.length)
    throw new TypeError('targetStart out of bounds')
  if (start < 0 || start >= source.length) throw new TypeError('sourceStart out of bounds')
  if (end < 0 || end > source.length) throw new TypeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length)
    end = this.length
  if (target.length - target_start < end - start)
    end = target.length - target_start + start

  var len = end - start

  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < len; i++) {
      target[i + target_start] = this[i + start]
    }
  } else {
    target._set(this.subarray(start, start + len), target_start)
  }
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new TypeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new TypeError('start out of bounds')
  if (end < 0 || end > this.length) throw new TypeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1) {
        buf[i] = this[i]
      }
      return buf.buffer
    }
  } else {
    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function (arr) {
  arr.constructor = Buffer
  arr._isBuffer = true

  // save reference to original Uint8Array get/set methods before overwriting
  arr._get = arr.get
  arr._set = arr.set

  // deprecated, will be removed in node 0.13+
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.equals = BP.equals
  arr.compare = BP.compare
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

var INVALID_BASE64_RE = /[^+\/0-9A-z]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function isArrayish (subject) {
  return isArray(subject) || Buffer.isBuffer(subject) ||
      subject && typeof subject === 'object' &&
      typeof subject.length === 'number'
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    var b = str.charCodeAt(i)
    if (b <= 0x7F) {
      byteArray.push(b)
    } else {
      var start = i
      if (b >= 0xD800 && b <= 0xDFFF) i++
      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')
      for (var j = 0; j < h.length; j++) {
        byteArray.push(parseInt(h[j], 16))
      }
    }
  }
  return byteArray
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(str)
}

function blitBuffer (src, dst, offset, length, unitSize) {
  if (unitSize) length -= length % unitSize;
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length))
      break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}

},{"base64-js":71,"ieee754":72,"is-array":73}],71:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS)
			return 62 // '+'
		if (code === SLASH)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],72:[function(require,module,exports){
exports.read = function(buffer, offset, isLE, mLen, nBytes) {
  var e, m,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      nBits = -7,
      i = isLE ? (nBytes - 1) : 0,
      d = isLE ? -1 : 1,
      s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity);
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};

exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),
      i = isLE ? 0 : (nBytes - 1),
      d = isLE ? 1 : -1,
      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);

  buffer[offset + i - d] |= s * 128;
};

},{}],73:[function(require,module,exports){

/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given `val`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};

},{}],74:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      }
      throw TypeError('Uncaught, unspecified "error" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],75:[function(require,module,exports){
var http = module.exports;
var EventEmitter = require('events').EventEmitter;
var Request = require('./lib/request');
var url = require('url')

http.request = function (params, cb) {
    if (typeof params === 'string') {
        params = url.parse(params)
    }
    if (!params) params = {};
    if (!params.host && !params.port) {
        params.port = parseInt(window.location.port, 10);
    }
    if (!params.host && params.hostname) {
        params.host = params.hostname;
    }

    if (!params.protocol) {
        if (params.scheme) {
            params.protocol = params.scheme + ':';
        } else {
            params.protocol = window.location.protocol;
        }
    }

    if (!params.host) {
        params.host = window.location.hostname || window.location.host;
    }
    if (/:/.test(params.host)) {
        if (!params.port) {
            params.port = params.host.split(':')[1];
        }
        params.host = params.host.split(':')[0];
    }
    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;
    
    var req = new Request(new xhrHttp, params);
    if (cb) req.on('response', cb);
    return req;
};

http.get = function (params, cb) {
    params.method = 'GET';
    var req = http.request(params, cb);
    req.end();
    return req;
};

http.Agent = function () {};
http.Agent.defaultMaxSockets = 4;

var xhrHttp = (function () {
    if (typeof window === 'undefined') {
        throw new Error('no window object present');
    }
    else if (window.XMLHttpRequest) {
        return window.XMLHttpRequest;
    }
    else if (window.ActiveXObject) {
        var axs = [
            'Msxml2.XMLHTTP.6.0',
            'Msxml2.XMLHTTP.3.0',
            'Microsoft.XMLHTTP'
        ];
        for (var i = 0; i < axs.length; i++) {
            try {
                var ax = new(window.ActiveXObject)(axs[i]);
                return function () {
                    if (ax) {
                        var ax_ = ax;
                        ax = null;
                        return ax_;
                    }
                    else {
                        return new(window.ActiveXObject)(axs[i]);
                    }
                };
            }
            catch (e) {}
        }
        throw new Error('ajax not supported in this browser')
    }
    else {
        throw new Error('ajax not supported in this browser');
    }
})();

http.STATUS_CODES = {
    100 : 'Continue',
    101 : 'Switching Protocols',
    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918
    200 : 'OK',
    201 : 'Created',
    202 : 'Accepted',
    203 : 'Non-Authoritative Information',
    204 : 'No Content',
    205 : 'Reset Content',
    206 : 'Partial Content',
    207 : 'Multi-Status',               // RFC 4918
    300 : 'Multiple Choices',
    301 : 'Moved Permanently',
    302 : 'Moved Temporarily',
    303 : 'See Other',
    304 : 'Not Modified',
    305 : 'Use Proxy',
    307 : 'Temporary Redirect',
    400 : 'Bad Request',
    401 : 'Unauthorized',
    402 : 'Payment Required',
    403 : 'Forbidden',
    404 : 'Not Found',
    405 : 'Method Not Allowed',
    406 : 'Not Acceptable',
    407 : 'Proxy Authentication Required',
    408 : 'Request Time-out',
    409 : 'Conflict',
    410 : 'Gone',
    411 : 'Length Required',
    412 : 'Precondition Failed',
    413 : 'Request Entity Too Large',
    414 : 'Request-URI Too Large',
    415 : 'Unsupported Media Type',
    416 : 'Requested Range Not Satisfiable',
    417 : 'Expectation Failed',
    418 : 'I\'m a teapot',              // RFC 2324
    422 : 'Unprocessable Entity',       // RFC 4918
    423 : 'Locked',                     // RFC 4918
    424 : 'Failed Dependency',          // RFC 4918
    425 : 'Unordered Collection',       // RFC 4918
    426 : 'Upgrade Required',           // RFC 2817
    428 : 'Precondition Required',      // RFC 6585
    429 : 'Too Many Requests',          // RFC 6585
    431 : 'Request Header Fields Too Large',// RFC 6585
    500 : 'Internal Server Error',
    501 : 'Not Implemented',
    502 : 'Bad Gateway',
    503 : 'Service Unavailable',
    504 : 'Gateway Time-out',
    505 : 'HTTP Version Not Supported',
    506 : 'Variant Also Negotiates',    // RFC 2295
    507 : 'Insufficient Storage',       // RFC 4918
    509 : 'Bandwidth Limit Exceeded',
    510 : 'Not Extended',               // RFC 2774
    511 : 'Network Authentication Required' // RFC 6585
};
},{"./lib/request":76,"events":74,"url":100}],76:[function(require,module,exports){
var Stream = require('stream');
var Response = require('./response');
var Base64 = require('Base64');
var inherits = require('inherits');

var Request = module.exports = function (xhr, params) {
    var self = this;
    self.writable = true;
    self.xhr = xhr;
    self.body = [];
    
    self.uri = (params.protocol || 'http:') + '//'
        + params.host
        + (params.port ? ':' + params.port : '')
        + (params.path || '/')
    ;
    
    if (typeof params.withCredentials === 'undefined') {
        params.withCredentials = true;
    }

    try { xhr.withCredentials = params.withCredentials }
    catch (e) {}
    
    if (params.responseType) try { xhr.responseType = params.responseType }
    catch (e) {}
    
    xhr.open(
        params.method || 'GET',
        self.uri,
        true
    );

    xhr.onerror = function(event) {
        self.emit('error', new Error('Network error'));
    };

    self._headers = {};
    
    if (params.headers) {
        var keys = objectKeys(params.headers);
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (!self.isSafeRequestHeader(key)) continue;
            var value = params.headers[key];
            self.setHeader(key, value);
        }
    }
    
    if (params.auth) {
        //basic auth
        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));
    }

    var res = new Response;
    res.on('close', function () {
        self.emit('close');
    });
    
    res.on('ready', function () {
        self.emit('response', res);
    });

    res.on('error', function (err) {
        self.emit('error', err);
    });
    
    xhr.onreadystatechange = function () {
        // Fix for IE9 bug
        // SCRIPT575: Could not complete the operation due to error c00c023f
        // It happens when a request is aborted, calling the success callback anyway with readyState === 4
        if (xhr.__aborted) return;
        res.handle(xhr);
    };
};

inherits(Request, Stream);

Request.prototype.setHeader = function (key, value) {
    this._headers[key.toLowerCase()] = value
};

Request.prototype.getHeader = function (key) {
    return this._headers[key.toLowerCase()]
};

Request.prototype.removeHeader = function (key) {
    delete this._headers[key.toLowerCase()]
};

Request.prototype.write = function (s) {
    this.body.push(s);
};

Request.prototype.destroy = function (s) {
    this.xhr.__aborted = true;
    this.xhr.abort();
    this.emit('close');
};

Request.prototype.end = function (s) {
    if (s !== undefined) this.body.push(s);

    var keys = objectKeys(this._headers);
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var value = this._headers[key];
        if (isArray(value)) {
            for (var j = 0; j < value.length; j++) {
                this.xhr.setRequestHeader(key, value[j]);
            }
        }
        else this.xhr.setRequestHeader(key, value)
    }

    if (this.body.length === 0) {
        this.xhr.send('');
    }
    else if (typeof this.body[0] === 'string') {
        this.xhr.send(this.body.join(''));
    }
    else if (isArray(this.body[0])) {
        var body = [];
        for (var i = 0; i < this.body.length; i++) {
            body.push.apply(body, this.body[i]);
        }
        this.xhr.send(body);
    }
    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {
        var len = 0;
        for (var i = 0; i < this.body.length; i++) {
            len += this.body[i].length;
        }
        var body = new(this.body[0].constructor)(len);
        var k = 0;
        
        for (var i = 0; i < this.body.length; i++) {
            var b = this.body[i];
            for (var j = 0; j < b.length; j++) {
                body[k++] = b[j];
            }
        }
        this.xhr.send(body);
    }
    else if (isXHR2Compatible(this.body[0])) {
        this.xhr.send(this.body[0]);
    }
    else {
        var body = '';
        for (var i = 0; i < this.body.length; i++) {
            body += this.body[i].toString();
        }
        this.xhr.send(body);
    }
};

// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html
Request.unsafeHeaders = [
    "accept-charset",
    "accept-encoding",
    "access-control-request-headers",
    "access-control-request-method",
    "connection",
    "content-length",
    "cookie",
    "cookie2",
    "content-transfer-encoding",
    "date",
    "expect",
    "host",
    "keep-alive",
    "origin",
    "referer",
    "te",
    "trailer",
    "transfer-encoding",
    "upgrade",
    "user-agent",
    "via"
];

Request.prototype.isSafeRequestHeader = function (headerName) {
    if (!headerName) return false;
    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;
};

var objectKeys = Object.keys || function (obj) {
    var keys = [];
    for (var key in obj) keys.push(key);
    return keys;
};

var isArray = Array.isArray || function (xs) {
    return Object.prototype.toString.call(xs) === '[object Array]';
};

var indexOf = function (xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for (var i = 0; i < xs.length; i++) {
        if (xs[i] === x) return i;
    }
    return -1;
};

var isXHR2Compatible = function (obj) {
    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;
    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;
    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;
};

},{"./response":77,"Base64":78,"inherits":80,"stream":99}],77:[function(require,module,exports){
var Stream = require('stream');
var util = require('util');

var Response = module.exports = function (res) {
    this.offset = 0;
    this.readable = true;
};

util.inherits(Response, Stream);

var capable = {
    streaming : true,
    status2 : true
};

function parseHeaders (res) {
    var lines = res.getAllResponseHeaders().split(/\r?\n/);
    var headers = {};
    for (var i = 0; i < lines.length; i++) {
        var line = lines[i];
        if (line === '') continue;
        
        var m = line.match(/^([^:]+):\s*(.*)/);
        if (m) {
            var key = m[1].toLowerCase(), value = m[2];
            
            if (headers[key] !== undefined) {
            
                if (isArray(headers[key])) {
                    headers[key].push(value);
                }
                else {
                    headers[key] = [ headers[key], value ];
                }
            }
            else {
                headers[key] = value;
            }
        }
        else {
            headers[line] = true;
        }
    }
    return headers;
}

Response.prototype.getResponse = function (xhr) {
    var respType = String(xhr.responseType).toLowerCase();
    if (respType === 'blob') return xhr.responseBlob || xhr.response;
    if (respType === 'arraybuffer') return xhr.response;
    return xhr.responseText;
}

Response.prototype.getHeader = function (key) {
    return this.headers[key.toLowerCase()];
};

Response.prototype.handle = function (res) {
    if (res.readyState === 2 && capable.status2) {
        try {
            this.statusCode = res.status;
            this.headers = parseHeaders(res);
        }
        catch (err) {
            capable.status2 = false;
        }
        
        if (capable.status2) {
            this.emit('ready');
        }
    }
    else if (capable.streaming && res.readyState === 3) {
        try {
            if (!this.statusCode) {
                this.statusCode = res.status;
                this.headers = parseHeaders(res);
                this.emit('ready');
            }
        }
        catch (err) {}
        
        try {
            this._emitData(res);
        }
        catch (err) {
            capable.streaming = false;
        }
    }
    else if (res.readyState === 4) {
        if (!this.statusCode) {
            this.statusCode = res.status;
            this.emit('ready');
        }
        this._emitData(res);
        
        if (res.error) {
            this.emit('error', this.getResponse(res));
        }
        else this.emit('end');
        
        this.emit('close');
    }
};

Response.prototype._emitData = function (res) {
    var respBody = this.getResponse(res);
    if (respBody.toString().match(/ArrayBuffer/)) {
        this.emit('data', new Uint8Array(respBody, this.offset));
        this.offset = respBody.byteLength;
        return;
    }
    if (respBody.length > this.offset) {
        this.emit('data', respBody.slice(this.offset));
        this.offset = respBody.length;
    }
};

var isArray = Array.isArray || function (xs) {
    return Object.prototype.toString.call(xs) === '[object Array]';
};

},{"stream":99,"util":102}],78:[function(require,module,exports){
;(function () {

  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers
  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  function InvalidCharacterError(message) {
    this.message = message;
  }
  InvalidCharacterError.prototype = new Error;
  InvalidCharacterError.prototype.name = 'InvalidCharacterError';

  // encoder
  // [https://gist.github.com/999166] by [https://github.com/nignag]
  object.btoa || (
  object.btoa = function (input) {
    for (
      // initialize result and counter
      var block, charCode, idx = 0, map = chars, output = '';
      // if the next input index does not exist:
      //   change the mapping table to "="
      //   check if d has no fractional digits
      input.charAt(idx | 0) || (map = '=', idx % 1);
      // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
      output += map.charAt(63 & block >> 8 - idx % 1 * 8)
    ) {
      charCode = input.charCodeAt(idx += 3/4);
      if (charCode > 0xFF) {
        throw new InvalidCharacterError("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
      }
      block = block << 8 | charCode;
    }
    return output;
  });

  // decoder
  // [https://gist.github.com/1020396] by [https://github.com/atk]
  object.atob || (
  object.atob = function (input) {
    input = input.replace(/=+$/, '');
    if (input.length % 4 == 1) {
      throw new InvalidCharacterError("'atob' failed: The string to be decoded is not correctly encoded.");
    }
    for (
      // initialize result and counters
      var bc = 0, bs, buffer, idx = 0, output = '';
      // get next character
      buffer = input.charAt(idx++);
      // character found in table? initialize bit storage and add its ascii value;
      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,
        // and if not first of each 4 characters,
        // convert the first 8 bits to one ascii character
        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0
    ) {
      // try to find character in table (0-63, not found => -1)
      buffer = chars.indexOf(buffer);
    }
    return output;
  });

}());

},{}],79:[function(require,module,exports){
var http = require('http');

var https = module.exports;

for (var key in http) {
    if (http.hasOwnProperty(key)) https[key] = http[key];
};

https.request = function (params, cb) {
    if (!params) params = {};
    params.scheme = 'https';
    return http.request.call(this, params, cb);
}

},{"http":75}],80:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],81:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],82:[function(require,module,exports){
(function (global){
/*! http://mths.be/punycode v1.2.4 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports;
	var freeModule = typeof module == 'object' && module &&
		module.exports == freeExports && module;
	var freeGlobal = typeof global == 'object' && global;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^ -~]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /\x2E|\u3002|\uFF0E|\uFF61/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		while (length--) {
			array[length] = fn(array[length]);
		}
		return array;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings.
	 * @private
	 * @param {String} domain The domain name.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		return map(string.split(regexSeparators), fn).join('.');
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <http://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * http://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols to a Punycode string of ASCII-only
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name to Unicode. Only the
	 * Punycoded parts of the domain name will be converted, i.e. it doesn't
	 * matter if you call it on a string that has already been converted to
	 * Unicode.
	 * @memberOf punycode
	 * @param {String} domain The Punycode domain name to convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(domain) {
		return mapDomain(domain, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name to Punycode. Only the
	 * non-ASCII parts of the domain name will be converted, i.e. it doesn't
	 * matter if you call it with a domain that's already in ASCII.
	 * @memberOf punycode
	 * @param {String} domain The domain name to convert, as a Unicode string.
	 * @returns {String} The Punycode representation of the given domain name.
	 */
	function toASCII(domain) {
		return mapDomain(domain, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.2.4',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <http://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && !freeExports.nodeType) {
		if (freeModule) { // in Node.js or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else { // in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else { // in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],83:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],84:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],85:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":83,"./encode":84}],86:[function(require,module,exports){
module.exports = require("./lib/_stream_duplex.js")

},{"./lib/_stream_duplex.js":87}],87:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

module.exports = Duplex;

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}
/*</replacement>*/


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

forEach(objectKeys(Writable.prototype), function(method) {
  if (!Duplex.prototype[method])
    Duplex.prototype[method] = Writable.prototype[method];
});

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(this.end.bind(this));
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

}).call(this,require("uiHBzj"))
},{"./_stream_readable":89,"./_stream_writable":91,"core-util-is":92,"inherits":80,"uiHBzj":81}],88:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{"./_stream_transform":90,"core-util-is":92,"inherits":80}],89:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/


/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;

/*<replacement>*/
if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

var Stream = require('stream');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var StringDecoder;

util.inherits(Readable, Stream);

function ReadableState(options, stream) {
  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = false;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // In streams that never have any data, and do push(null) right away,
  // the consumer can miss the 'end' event if they do some I/O before
  // consuming the stream.  So, we don't emit('end') until some reading
  // happens.
  this.calledRead = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (typeof chunk === 'string' && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null || chunk === undefined) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      // update the buffer info.
      state.length += state.objectMode ? 1 : chunk.length;
      if (addToFront) {
        state.buffer.unshift(chunk);
      } else {
        state.reading = false;
        state.buffer.push(chunk);
      }

      if (state.needReadable)
        emitReadable(stream);

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (n === null || isNaN(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  var state = this._readableState;
  state.calledRead = true;
  var nOrig = n;
  var ret;

  if (typeof n !== 'number' || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    ret = null;

    // In cases where the decoder did not receive enough data
    // to produce a full chunk, then immediately received an
    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].
    // howMuchToRead will see this and coerce the amount to
    // read to zero (because it's looking at the length of the
    // first <Buffer > in state.buffer), and we'll end up here.
    //
    // This can only happen via state.decoder -- no other venue
    // exists for pushing a zero-length chunk into state.buffer
    // and triggering this behavior. In this case, we return our
    // remaining data and end the stream, if appropriate.
    if (state.length > 0 && state.decoder) {
      ret = fromList(n, state);
      state.length -= ret.length;
    }

    if (state.length === 0)
      endReadable(this);

    return ret;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;

  // if we currently have less than the highWaterMark, then also read some
  if (state.length - n <= state.highWaterMark)
    doRead = true;

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading)
    doRead = false;

  if (doRead) {
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read called its callback synchronously, then `reading`
  // will be false, and we need to re-evaluate how much data we
  // can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we happened to read() exactly the remaining amount in the
  // buffer, and the EOF has been seen at this point, then make sure
  // that we emit 'end' on the very next tick.
  if (state.ended && !state.endEmitted && state.length === 0)
    endReadable(this);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // if we've ended and we have some data left, then emit
  // 'readable' now to make sure it gets picked up.
  if (state.length > 0)
    emitReadable(stream);
  else
    endReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (state.emittedReadable)
    return;

  state.emittedReadable = true;
  if (state.sync)
    process.nextTick(function() {
      emitReadable_(stream);
    });
  else
    emitReadable_(stream);
}

function emitReadable_(stream) {
  stream.emit('readable');
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    process.nextTick(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    if (readable !== src) return;
    cleanup();
  }

  function onend() {
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (!dest._writableState || dest._writableState.needDrain)
      ondrain();
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    unpipe();
    dest.removeListener('error', onerror);
    if (EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error)
    dest.on('error', onerror);
  else if (isArray(dest._events.error))
    dest._events.error.unshift(onerror);
  else
    dest._events.error = [onerror, dest._events.error];



  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    // the handler that waits for readable events after all
    // the data gets sucked out in flow.
    // This would be easier to follow with a .once() handler
    // in flow(), but that is too slow.
    this.on('readable', pipeOnReadable);

    state.flowing = true;
    process.nextTick(function() {
      flow(src);
    });
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var dest = this;
    var state = src._readableState;
    state.awaitDrain--;
    if (state.awaitDrain === 0)
      flow(src);
  };
}

function flow(src) {
  var state = src._readableState;
  var chunk;
  state.awaitDrain = 0;

  function write(dest, i, list) {
    var written = dest.write(chunk);
    if (false === written) {
      state.awaitDrain++;
    }
  }

  while (state.pipesCount && null !== (chunk = src.read())) {

    if (state.pipesCount === 1)
      write(state.pipes, 0, null);
    else
      forEach(state.pipes, write);

    src.emit('data', chunk);

    // if anyone needs a drain, then we have to wait for that.
    if (state.awaitDrain > 0)
      return;
  }

  // if every destination was unpiped, either before entering this
  // function, or in the while loop, then stop flowing.
  //
  // NB: This is a pretty rare edge case.
  if (state.pipesCount === 0) {
    state.flowing = false;

    // if there were data event listeners added, then switch to old mode.
    if (EE.listenerCount(src, 'data') > 0)
      emitDataEvents(src);
    return;
  }

  // at this point, no one needed a drain, so we just ran out of data
  // on the next readable event, start it over again.
  state.ranOut = true;
}

function pipeOnReadable() {
  if (this._readableState.ranOut) {
    this._readableState.ranOut = false;
    flow(this);
  }
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data' && !this._readableState.flowing)
    emitDataEvents(this);

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        this.read(0);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  emitDataEvents(this);
  this.read(0);
  this.emit('resume');
};

Readable.prototype.pause = function() {
  emitDataEvents(this, true);
  this.emit('pause');
};

function emitDataEvents(stream, startPaused) {
  var state = stream._readableState;

  if (state.flowing) {
    // https://github.com/isaacs/readable-stream/issues/16
    throw new Error('Cannot switch to old mode now.');
  }

  var paused = startPaused || false;
  var readable = false;

  // convert to an old-style stream.
  stream.readable = true;
  stream.pipe = Stream.prototype.pipe;
  stream.on = stream.addListener = Stream.prototype.on;

  stream.on('readable', function() {
    readable = true;

    var c;
    while (!paused && (null !== (c = stream.read())))
      stream.emit('data', c);

    if (c === null) {
      readable = false;
      stream._readableState.needReadable = true;
    }
  });

  stream.pause = function() {
    paused = true;
    this.emit('pause');
  };

  stream.resume = function() {
    paused = false;
    if (readable)
      process.nextTick(function() {
        stream.emit('readable');
      });
    else
      this.read(0);
    this.emit('resume');
  };

  // now make it start, just in case it hadn't already.
  stream.emit('readable');
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    if (state.decoder)
      chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    //if (state.objectMode && util.isNullOrUndefined(chunk))
    if (state.objectMode && (chunk === null || chunk === undefined))
      return;
    else if (!state.objectMode && (!chunk || !chunk.length))
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (typeof stream[i] === 'function' &&
        typeof this[i] === 'undefined') {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted && state.calledRead) {
    state.ended = true;
    process.nextTick(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require("uiHBzj"))
},{"buffer":70,"core-util-is":92,"events":74,"inherits":80,"isarray":93,"stream":99,"string_decoder/":94,"uiHBzj":81}],90:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined)
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  var ts = this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('finish', function() {
    if ('function' === typeof this._flush)
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var rs = stream._readableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./_stream_duplex":87,"core-util-is":92,"inherits":80}],91:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Stream = require('stream');

util.inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;
}

function Writable(options) {
  var Duplex = require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  process.nextTick(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    process.nextTick(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (typeof cb !== 'function')
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb))
    ret = writeOrBuffer(this, state, chunk, encoding, cb);

  return ret;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret)
    state.needDrain = true;

  if (state.writing)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    process.nextTick(function() {
      cb(er);
    });
  else
    cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished && !state.bufferProcessing && state.buffer.length)
      clearBuffer(stream, state);

    if (sync) {
      process.nextTick(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  cb();
  if (finished)
    finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  for (var c = 0; c < state.buffer.length; c++) {
    var entry = state.buffer[c];
    var chunk = entry.chunk;
    var encoding = entry.encoding;
    var cb = entry.callback;
    var len = state.objectMode ? 1 : chunk.length;

    doWrite(stream, state, len, chunk, encoding, cb);

    // if we didn't call the onwrite immediately, then
    // it means that we need to wait until it does.
    // also, that means that the chunk and cb are currently
    // being processed, so move the buffer counter past them.
    if (state.writing) {
      c++;
      break;
    }
  }

  state.bufferProcessing = false;
  if (c < state.buffer.length)
    state.buffer = state.buffer.slice(c);
  else
    state.buffer.length = 0;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (typeof chunk !== 'undefined' && chunk !== null)
    this.write(chunk, encoding);

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    state.finished = true;
    stream.emit('finish');
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      process.nextTick(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

}).call(this,require("uiHBzj"))
},{"./_stream_duplex":87,"buffer":70,"core-util-is":92,"inherits":80,"stream":99,"uiHBzj":81}],92:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

function isBuffer(arg) {
  return Buffer.isBuffer(arg);
}
exports.isBuffer = isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}
}).call(this,require("buffer").Buffer)
},{"buffer":70}],93:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],94:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}

},{"buffer":70}],95:[function(require,module,exports){
module.exports = require("./lib/_stream_passthrough.js")

},{"./lib/_stream_passthrough.js":88}],96:[function(require,module,exports){
var Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = Stream;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":87,"./lib/_stream_passthrough.js":88,"./lib/_stream_readable.js":89,"./lib/_stream_transform.js":90,"./lib/_stream_writable.js":91,"stream":99}],97:[function(require,module,exports){
module.exports = require("./lib/_stream_transform.js")

},{"./lib/_stream_transform.js":90}],98:[function(require,module,exports){
module.exports = require("./lib/_stream_writable.js")

},{"./lib/_stream_writable.js":91}],99:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":74,"inherits":80,"readable-stream/duplex.js":86,"readable-stream/passthrough.js":95,"readable-stream/readable.js":96,"readable-stream/transform.js":97,"readable-stream/writable.js":98}],100:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var punycode = require('punycode');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a puny coded representation of "domain".
      // It only converts the part of the domain name that
      // has non ASCII characters. I.e. it dosent matter if
      // you call it with a domain that already is in ASCII.
      var domainArray = this.hostname.split('.');
      var newOut = [];
      for (var i = 0; i < domainArray.length; ++i) {
        var s = domainArray[i];
        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?
            'xn--' + punycode.encode(s) : s);
      }
      this.hostname = newOut.join('.');
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  Object.keys(this).forEach(function(k) {
    result[k] = this[k];
  }, this);

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    Object.keys(relative).forEach(function(k) {
      if (k !== 'protocol')
        result[k] = relative[k];
    });

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      Object.keys(relative).forEach(function(k) {
        result[k] = relative[k];
      });
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especialy happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!isNull(result.pathname) || !isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host) && (last === '.' || last === '..') ||
      last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last == '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especialy happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!isNull(result.pathname) || !isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

function isString(arg) {
  return typeof arg === "string";
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isNull(arg) {
  return arg === null;
}
function isNullOrUndefined(arg) {
  return  arg == null;
}

},{"punycode":82,"querystring":85}],101:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],102:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require("uiHBzj"),typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":101,"inherits":80,"uiHBzj":81}],103:[function(require,module,exports){
'use strict';
var AppView, Conf, FastClick, copyFS, dest, fail, failConfig, failCopy, failsaveConfig, gFileSystem, gotCopyFileEntry, gotFS, gotFile, gotFileEntry, gotFileEntrySaveConfig, gotFileSaveConfig, init, initWithPhonegap, macId, readAsText, resOnSuccess, saveConfig, str, successCopy;

window.Setting = '';

dest = '';

gFileSystem = {};

str = '';

macId = "TEST";

require("./..\\..\\bower_components\\famous-polyfills\\index.js");

window.Conf = Conf = require('./config.coffee');

window._ = require('lodash');

window.Dispatcher = require('./dispatcher.coffee');

window.Utils = require('./utils.coffee');

window.Store = require('store');

window.$ = require('jquery');

window.fabric = require("./..\\..\\bower_components\\fabric\\dist\\fabric.min.js");

window.fabric = fabric.fabric;

require('nailthumb');

require('zoom');

require('panzoom');

window.Stores = require('./stores');

window.Models = require('./models');


/*
  load order is important
 */

window.Fa = require('./famous.coffee');

Fa.Mixins = require('./views/mixins');

Fa.Behaviors = require('./views/behaviors');

Fa.Elements = require('./views/elements');

Fa.Components = require('./views/components');

window.Session = new Models.Session();

Session.initFromStores(Stores);

window.Checklist = new Stores.Checklist;


/*
  If you're using Browserify or another CommonJS-style module system, the FastClick.attach function will be returned when you call require('fastclick'). As a result, the easiest way to use FastClick with these loaders is as follows:
 */

FastClick = require('fastclick');

FastClick(document.body);

window.imageCache = {};

window.myImage = new Fa.ImageSurf({
  classes: ['size-350-450'],
  size: [199.5, 256.5],
  content: 'images/profile.png',
  properties: {
    border: '5px solid #555'
  }
});

AppView = require('./views/app_view.coffee');

window.appCtx = Fa.MainContext;

appCtx.setPerspective(1000);

init = function() {
  var deviceAuthenticated;
  deviceAuthenticated = Stores.Consultant.GetDeviceConfig(macId);
  deviceAuthenticated.done(function(data) {
    if (data.message.Status === "OK") {
      str = Stores.Consultant.config(data);
      window.imageServerURL = Conf.imageServerURL = data.config.PrimaryNasIp;
      window.firstPage = Conf.firstPage = "Login";
      window.backend = Conf.backend = data.config.DataIp;
      window.OutletId = Conf.outletId = data.config.OutletId;
      window.branchId = Conf.branchId = data.config.BranchId;
      window.brand = Conf.brand = data.config.Brand;
      window.deviceType = Conf.deviceType = data.config.DeviceType;
      window.authIp = Conf.authIp = data.config.AuthIp;
      window.secondaryHost = Conf.secondaryHost = data.config.SecondaryHost;
      window.secondaryNasIp = Conf.secondaryNasIp = data.config.SecondaryNasIp;
      if (Conf.isProduction) {
        window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, saveConfig, failsaveConfig);
      }
      Store.clear();
      window.appView = new AppView({
        size: [Conf.screenWidth, Conf.screenHeight]
      });
      return appCtx.add(appView);
    } else {
      alert("Error:" + data.message.Message);
    }
  });
  return deviceAuthenticated.fail(function(jqXHR, textStatus, errorThrown) {
    alert("Error:Cannot connect to Configuration Server :" + errorThrown);
    if (Conf.isProduction) {
      return window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, fail);
    } else {
      alert("Connectin failed to get config");
    }
  });
};

initWithPhonegap = function() {
  Store.clear();
  if (navigator === void 0) {
    return alert("Phonegap is not loaded. Fatal error.");
  } else {
    window.Camera = navigator.camera;
    return init.call(this);
  }
};

gotFS = function(fileSystem) {
  var spath;
  spath = fileSystem.root.toURL() + "/setting.txt";
  window.resolveLocalFileSystemURI(spath, gotFileEntry, fail);
};

gotFileEntry = function(fileEntry) {
  fileEntry.file(gotFile, fail);
};

gotFile = function(file) {
  readAsText(file);
};

readAsText = function(file) {
  var reader;
  reader = new FileReader();
  reader.onloadend = function(evt) {
    var appView, json, jsonString;
    str = evt.target.result;
    jsonString = str.replace(/'/g, '"');
    json = JSON.parse(jsonString);
    window.imageServerURL = Conf.imageServerURL = json.PrimaryNasIp;
    window.firstPage = Conf.firstPage = json.FirstPage;
    window.backend = Conf.backend = json.DataIp;
    window.OutletId = Conf.outletId = json.OutletId;
    window.branchId = Conf.branchId = json.BranchId;
    window.brand = Conf.brand = json.Brand;
    window.deviceType = Conf.deviceType = json.DeviceType;
    window.authIp = Conf.authIp = json.AuthIp;
    window.secondaryHost = Conf.secondaryHost = json.SecondaryHost;
    window.secondaryNasIp = Conf.secondaryNasIp = json.SecondaryNasIp;
    Store.clear();
    appView = new AppView({
      size: [Conf.screenWidth, Conf.screenHeight]
    });
    return appCtx.add(appView);
  };
  return reader.readAsText(file);
};

fail = function(error) {
  alert("error getting setting file");
};

copyFS = function(fileSystem) {
  var spath;
  spath = cordova.file.applicationDirectory + "/www" + "/" + "setting.txt";
  dest = fileSystem.root.toURL();
  window.resolveLocalFileSystemURI(spath, resOnSuccess, failCopy);
};

resOnSuccess = function(entry) {
  return window.requestFileSystem(LocalFileSystem.PERSISTENT, 0,
    function(fileSys) {
    fileSys.root.getDirectory("Data", {create:
    true, exclusive: false},
    function(directory) {
    entry.copyTo(directory, "setting.txt",
      successCopy, failCopy);
  }, failCopy);
  }, failCopy); ;
};

gotCopyFileEntry = function(fileEntry) {
  var parent, parentEntry, parentName;
  parent = dest.substring(0, dest.lastIndexOf('/') - 1);
  parentName = parent.substring(parent.lastIndexOf('/') + 1);
  parentEntry = new DirectoryEntry(parentName, parent);
  fileEntry.copyTo(parent, "setting.txt", successCopy, failCopy);
};

successCopy = function() {
  window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, fail);
};

failCopy = function(error) {
  alert("error copy file from www -> document directory");
};

saveConfig = function(fileSystem) {
  var spath;
  spath = fileSystem.root.toURL() + "/" + "setting.txt";
  fileSystem.root.getFile("setting.txt", {
    create: true,
    exclusive: false
  }, gotFileEntrySaveConfig, failConfig);
};

failsaveConfig = function(error) {
  alert("Fail save config to the device");
};

gotFileEntrySaveConfig = function(fileEntry) {
  fileEntry.createWriter(gotFileSaveConfig, failConfig);
};

gotFileSaveConfig = function(writer) {
  writer.onwriteend = function(evt) {
    writer.onwriteend = function(evt) {};
    return writer.write(str);
  };
  return writer.truncate(0);
};

failConfig = function(error) {
  alert("error occured");
  if (error.code === FileError.NOT_FOUND_ERR) {
    alert(error.code.toString() + ":Copy config to local file failed");
  } else if (error.code === FileError.SECURITY_ERR) {
    alert("Copy config to local file failed");
  } else {
    alert("Copy config to local file failed:" + error.code);
  }
};

if (Conf.isProduction) {
  document.addEventListener('deviceready', initWithPhonegap.bind(this), false);
} else {
  init();
}


},{"./..\\..\\bower_components\\fabric\\dist\\fabric.min.js":1,"./..\\..\\bower_components\\famous-polyfills\\index.js":5,"./config.coffee":104,"./dispatcher.coffee":105,"./famous.coffee":106,"./models":107,"./stores":123,"./utils.coffee":133,"./views/app_view.coffee":137,"./views/behaviors":140,"./views/components":167,"./views/elements":187,"./views/mixins":198,"fastclick":57,"jquery":66,"lodash":67,"nailthumb":134,"panzoom":135,"store":68,"zoom":136}],104:[function(require,module,exports){
module.exports = {
  isProduction: false,
  firstPage: 'Login',
  backend: 'http://172.0.6.168:1337',
  screenWidth: 1024,
  screenHeight: 768,
  settingUrl: 'http://testsvr.eurogrp.com:8016'
};


},{}],105:[function(require,module,exports){
var Dispatcher, EventHandler;

EventHandler = require("./..\\..\\bower_components\\famous\\core\\EventHandler");

Dispatcher = (function() {
  Dispatcher.EVENTS = {
    PAGE_CHANGE: 'page_change',
    SHOW_MENU: 'show_menu'
  };

  function Dispatcher() {
    this.event = new EventHandler();
  }

  Dispatcher.prototype.emit = function() {
    return this.event.emit.apply(this.event, arguments);
  };

  Dispatcher.prototype.pipe = function() {
    return this.event.pipe.apply(this.event, arguments);
  };

  Dispatcher.prototype.on = function(key, target, cb) {
    return this.event.on(key, cb.bind(target));
  };

  return Dispatcher;

})();

module.exports = new Dispatcher();


},{"./..\\..\\bower_components\\famous\\core\\EventHandler":12}],106:[function(require,module,exports){
var CustomContainerSurf, CustomView, EasyScrollview, Engine, Famous, MainContext, WrappedContainer, WrappedSurface, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Engine = require("./..\\..\\bower_components\\famous\\core\\Engine");

MainContext = Engine.createContext();

_ = require('lodash');

Famous = {
  Engine: Engine,
  Pos: {},
  MainContext: MainContext,
  Elements: {},
  Components: {},
  Behaviors: {},
  Mixins: {},
  View: require("./..\\..\\bower_components\\famous\\core\\View"),
  Context: require("./..\\..\\bower_components\\famous\\core\\Context"),
  CView: void 0,
  Entity: require("./..\\..\\bower_components\\famous\\core\\Entity"),
  StateModifier: require("./..\\..\\bower_components\\famous\\modifiers\\StateModifier"),
  Modifier: require("./..\\..\\bower_components\\famous\\core\\Modifier"),
  RenderNode: require("./..\\..\\bower_components\\famous\\core\\RenderNode"),
  Timer: require("./..\\..\\bower_components\\famous\\utilities\\Timer"),
  EventHandler: require("./..\\..\\bower_components\\famous\\core\\EventHandler"),
  Surface: require("./..\\..\\bower_components\\famous\\core\\Surface"),
  ImageSurf: require("./..\\..\\bower_components\\famous\\surfaces\\ImageSurface"),
  CContainer: void 0,
  ContainerSurf: require("./..\\..\\bower_components\\famous\\surfaces\\ContainerSurface"),
  InputSurf: require("./..\\..\\bower_components\\famous\\surfaces\\InputSurface"),
  RenderCtrl: require("./..\\..\\bower_components\\famous\\views\\RenderController"),
  Lightbox: require("./..\\..\\bower_components\\famous\\views\\Lightbox"),
  Scrollview: require("./..\\..\\bower_components\\famous\\views\\Scrollview"),
  EasyScrollview: void 0,
  Transform: require("./..\\..\\bower_components\\famous\\core\\Transform"),
  Easing: require("./..\\..\\bower_components\\famous\\transitions\\Easing"),
  Transitionable: require("./..\\..\\bower_components\\famous\\transitions\\Transitionable"),
  SnapTransition: require("./..\\..\\bower_components\\famous\\transitions\\SnapTransition"),
  Draggable: require("./..\\..\\bower_components\\famous\\modifiers\\Draggable"),
  MouseSync: require("./..\\..\\bower_components\\famous\\inputs\\MouseSync"),
  TouchSync: require("./..\\..\\bower_components\\famous\\inputs\\TouchSync"),
  ScrollSync: require("./..\\..\\bower_components\\famous\\inputs\\ScrollSync"),
  GenericSync: require("./..\\..\\bower_components\\famous\\inputs\\GenericSync"),
  FlexibleLayout: require("./..\\..\\bower_components\\famous\\views\\FlexibleLayout"),
  GridLayout: require("./..\\..\\bower_components\\famous\\views\\GridLayout"),
  SequentialLayout: require("./..\\..\\bower_components\\famous\\views\\SequentialLayout"),
  BoxLayout: require("./..\\..\\bower_components\\famous-boxlayout\\BoxLayout")
};

Famous.GenericSync.register({
  "mouse": Famous.MouseSync,
  "touch": Famous.TouchSync,
  "scroll": Famous.ScrollSync
});

Famous.Transitionable.registerMethod("spring", Famous.SnapTransition);

Famous.destroy = function(obj) {
  if (obj.i_am_here) {
    console.log(obj.i_am_here);
    console.log(obj);
  }
  if (obj.content) {
    Famous.destroy(obj.content);
  }
  if (obj.properties) {
    Famous.destroy(obj.properties);
  }
  if (obj._matrix) {
    Famous.destroy(obj._matrix);
  }
  if (obj.container) {
    Famous.destroy(obj.container);
  }
  if (obj._container) {
    Famous.destroy(obj._container);
  }
  if (obj._node) {
    Famous.destroy(obj._node);
  }
  if (obj.context) {
    Famous.destroy(obj.context);
  }
  if (obj._child) {
    Famous.destroy(obj._child);
  }
  if (obj._child && obj._child.length && obj._child.length > 0) {
    _.each(obj._child, function(node) {
      return Famous.destroy(node);
    });
  }
  if (obj._items) {
    Famous.destroy(obj._items);
  }
  if (obj._) {
    Famous.destroy(obj._);
  }
  if (obj.array && obj.array.length && obj.array.length > 0) {
    _.each(obj.array, function(node) {
      return Famous.destroy(node);
    });
  }
  if (obj.surface) {
    Famous.destroy(obj.surface);
  }
  if (obj._allocator) {
    Famous.destroy(obj._allocator);
  }
  if (obj.detachedNodes) {
    Famous.destroy(obj.detachedNodes);
  }
  if (obj._nodeContext) {
    Famous.destroy(obj._nodeContext);
  }
  if (obj._object) {
    Famous.destroy(obj._object);
  }
  if (obj._nodes) {
    _.each(obj._nodes, function(node) {
      return Famous.destroy(node);
    });
  }
  if (obj._prevResults && obj._prevResults.length > 0) {
    _.keys(obj._prevResults).each(function(v, k) {
      return Famous.Entity.unregister(k);
    });
  }
  if (obj._resultCache && obj._resultCache.length > 0) {
    _.keys(obj._resultCache).each(function(v, k) {
      return Famous.Entity.unregister(k);
    });
  }
  if (obj.id) {
    Famous.Entity.unregister(obj.id);
  }
  if (obj._container && obj._container.innerHTML) {
    obj._container = null;
  }
  if (obj.content && obj.content.innerHTML) {
    return obj.content = null;
  }
};

Famous.CView = CustomView = (function(_super) {
  __extends(CustomView, _super);

  function CustomView() {
    return CustomView.__super__.constructor.apply(this, arguments);
  }

  CustomView.prototype.addToCenter = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [0.5, 0.5],
      align: [0.5, 0.5]
    });
    return this.add(mod).add(node);
  };

  CustomView.prototype.addToTop = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [0.5, 0],
      align: [0.5, 0]
    });
    return this.add(mod).add(node);
  };

  CustomView.prototype.addToBottom = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [0.5, 1],
      align: [0.5, 1]
    });
    return this.add(mod).add(node);
  };

  CustomView.prototype.addToLeft = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [0, 0.5],
      align: [0, 0.5]
    });
    return this.add(mod).add(node);
  };

  CustomView.prototype.addToRight = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [1, 0.5],
      align: [1, 0.5]
    });
    return this.add(mod).add(node);
  };

  return CustomView;

})(Famous.View);

Famous.CContainer = CustomContainerSurf = (function(_super) {
  __extends(CustomContainerSurf, _super);

  function CustomContainerSurf() {
    return CustomContainerSurf.__super__.constructor.apply(this, arguments);
  }

  CustomContainerSurf.prototype.destroy = function() {
    return Famous.destroy(this);
  };

  CustomContainerSurf.prototype.addToCenter = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [0.5, 0.5],
      align: [0.5, 0.5]
    });
    return this.add(mod).add(node);
  };

  CustomContainerSurf.prototype.addToTop = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [0.5, 0],
      align: [0.5, 0]
    });
    return this.add(mod).add(node);
  };

  CustomContainerSurf.prototype.addToBottom = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [0.5, 1],
      align: [0.5, 1]
    });
    return this.add(mod).add(node);
  };

  CustomContainerSurf.prototype.addToLeft = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [0, 0.5],
      align: [0, 0.5]
    });
    return this.add(mod).add(node);
  };

  CustomContainerSurf.prototype.addToRight = function(node) {
    var mod;
    mod = new Famous.Modifier({
      origin: [1, 0.5],
      align: [1, 0.5]
    });
    return this.add(mod).add(node);
  };

  return CustomContainerSurf;

})(Famous.ContainerSurf);

Famous.WrappedContainer = WrappedContainer = (function() {
  function WrappedContainer(options) {
    var wrapper;
    if (options == null) {
      options = {};
    }
    wrapper = new Famous.CContainer();
    wrapper.container = new Famous.CContainer(options);
    if (options.alignment != null) {
      switch (options.alignment) {
        case 'center':
          wrapper.addToCenter(wrapper.container);
          break;
        case 'top':
          wrapper.addToTop(wrapper.container);
          break;
        case 'bottom':
          wrapper.addToBottom(wrapper.container);
          break;
        case 'left':
          wrapper.addToLeft(wrapper.container);
          break;
        case 'right':
          wrapper.addToRight(wrapper.container);
          break;
        case 'none':
          wrapper.add(wrapper.container);
          break;
        default:
          alert('unsupported WrapContainer option');
          wrapper.add(wrapper.container);
      }
    } else {
      wrapper.addToCenter(wrapper.container);
    }
    return wrapper;
  }

  return WrappedContainer;

})();

Famous.WrappedSurface = WrappedSurface = (function() {
  function WrappedSurface(options) {
    var wrapper;
    wrapper = new Famous.CContainer();
    wrapper.surface = new Famous.Surface(options);
    if (options.alignment != null) {
      switch (options.alignment) {
        case 'center':
          wrapper.addToCenter(wrapper.surface);
          break;
        case 'top':
          wrapper.addToTop(wrapper.surface);
          break;
        case 'bottom':
          wrapper.addToBottom(wrapper.surface);
          break;
        case 'left':
          wrapper.addToLeft(wrapper.surface);
          break;
        case 'right':
          wrapper.addToRight(wrapper.surface);
          break;
        case 'none':
          wrapper.add(wrapper.surface);
          break;
        default:
          alert('unsupported WrapContainer option');
          wrapper.add(wrapper.surface);
      }
    } else {
      wrapper.addToCenter(wrapper.surface);
    }
    return wrapper;
  }

  return WrappedSurface;

})();

Famous.BorderedView = function() {
  return new Famous.Surface({
    properties: {
      border: '3px solid black'
    }
  });
};

Famous.EmptyView = function(color) {
  var view;
  if (color == null) {
    color = 'none';
  }
  if (color === 'none') {
    view = new Famous.View();
  } else {
    view = new Famous.CContainer({
      properties: {
        backgroundColor: color
      }
    });
  }
  return view;
};

Famous.translateBy = function(translateX, translateY, translateZ) {
  return new Famous.Modifier({
    transform: Famous.Transform.translate(translateX, translateY, translateZ)
  });
};

Famous.translateXBy = function(translateX) {
  return new Famous.Modifier({
    transform: Famous.Transform.translate(translateX, 0, 0)
  });
};

Famous.translateYBy = function(translateY) {
  return new Famous.Modifier({
    transform: Famous.Transform.translate(0, translateY, 0)
  });
};

Famous.translateZBy = function(translateZ) {
  return new Famous.Modifier({
    transform: Famous.Transform.translate(0, 0, translateZ)
  });
};

Famous.scaleBy = function(ratio) {
  return new Famous.Modifier({
    transform: Famous.Transform.scale(ratio, ratio, ratio)
  });
};

Famous.opaqueBy = function(opacity) {
  if (opacity == null) {
    opacity = 0.5;
  }
  return new Famous.Modifier({
    opacity: opacity
  });
};

Famous.Pos.center = new Famous.Modifier({
  origin: [0.5, 0.5],
  align: [0.5, 0.5]
});

Famous.Pos.top = new Famous.Modifier({
  origin: [0.5, 0],
  align: [0.5, 0]
});

Famous.Pos.bottom = new Famous.Modifier({
  origin: [0.5, 1],
  align: [0.5, 1]
});

Famous.Pos.left = new Famous.Modifier({
  origin: [0, 0.5],
  align: [0, 0.5]
});

Famous.Pos.right = new Famous.Modifier({
  origin: [1, 0.5],
  align: [1, 0.5]
});

Famous.Pos.topLeft = new Famous.Modifier({
  origin: [0, 0],
  align: [0, 0]
});

Famous.Pos.topRight = new Famous.Modifier({
  origin: [1, 0],
  align: [1, 0]
});

Famous.Pos.bottomLeft = new Famous.Modifier({
  origin: [0, 1],
  align: [0, 1]
});

Famous.Pos.bottomRight = new Famous.Modifier({
  origin: [1, 1],
  align: [1, 1]
});

Famous.EasyScrollview = EasyScrollview = (function(_super) {
  var createScrollbar, init, registerSyncs;

  __extends(EasyScrollview, _super);

  EasyScrollview.DEFAULT_OPTIONS = {
    containerSize: [300, 300],
    itemSize: [300, 300],
    direction: 0,
    paginate: true,
    scrollBarThickness: 26,
    scrollBarOpacity: 0.1,
    scrollContainerOpacity: 0.1,
    scrollBarColor: '#000',
    scrollContainerColor: '#000',
    noScrollBar: false,
    clickOffset: 0
  };

  EasyScrollview.DIRECTION_X = 0;

  EasyScrollview.DIRECTION_Y = 1;

  function EasyScrollview(options) {
    EasyScrollview.__super__.constructor.call(this, options);
    if (this.options.clickOffset) {
      this.clickOffset = this.options.clickOffset;
    }
    this.container = new Famous.CContainer({
      classes: ['easy-scrollview-container'],
      size: [this.options.containerSize[0], this.options.containerSize[1]],
      properties: {
        overflow: 'hidden',
        pointerEvents: 'none'
      }
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    this.halfX = this.options.itemSize[0] / 2;
    this.halfY = this.options.itemSize[1] / 2;
    this.posX = 0;
    this.posY = 0;
    this.doubleTapRegister = Date.now();
    this.prevTapX = 0;
    this.prevTapY = 0;
    registerSyncs.call(this);
    this.itemContainer = new Famous.SequentialLayout({
      direction: this.options.direction
    });
    this.content.add(this.itemContainer);
    return this.container.add(this.positionModifier).add(this.content);
  };

  registerSyncs = function() {
    this.position = new Famous.Transitionable([0, 0]);
    this.sync = new Famous.GenericSync({
      mouse: {},
      touch: {
        rails: true
      },
      scroll: {
        scale: .3,
        rails: true,
        stallTime: 20
      }
    });
    this.positionModifier = new Famous.Modifier({
      transform: (function(_this) {
        return function() {
          var currentPosition;
          currentPosition = _this.position.get();
          return Famous.Transform.translate(currentPosition[0], currentPosition[1], 0);
        };
      })(this)
    });
    if (!this.options.noScrollBar) {
      this.scrollbarPositionModifier = new Famous.Modifier({
        transform: (function(_this) {
          return function() {
            var barPosition, currentPosition, scrollPos;
            currentPosition = _this.position.get();
            if (_this.options.direction === 0) {
              scrollPos = currentPosition[0] / _this.maxScroll;
              barPosition = -scrollPos * (_this.windowSize - _this.scrollbarSize);
              return Famous.Transform.translate(barPosition, 0, 0);
            } else {
              scrollPos = currentPosition[1] / _this.maxScroll;
              barPosition = -scrollPos * (_this.windowSize - _this.scrollbarSize);
              return Famous.Transform.translate(0, barPosition, 0);
            }
          };
        })(this)
      });
    }
    this.content = new Famous.CContainer({
      pointerEvents: 'none'
    });
    this.container.pipe(this._eventInput);
    this._eventInput.pipe(this.sync);
    this._eventInput.pipe(this._eventOutput);
    this.sync.on('update', (function(_this) {
      return function(data) {
        _this.posX = _this.posX + data.delta[0];
        _this.posX = Math.max(_this.minPosX, _this.posX);
        _this.posX = Math.min(_this.maxPosX, _this.posX);
        _this.posY = _this.posY + data.delta[1];
        _this.posY = Math.max(_this.minPosY, _this.posY);
        _this.posY = Math.min(_this.maxPosY, _this.posY);
        return _this.position.set([_this.posX, _this.posY]);
      };
    })(this));
    if (this.options.paginate) {
      return this.sync.on('end', (function(_this) {
        return function(data) {
          var currentPosition, diffTapX, diffTapY, diffX, diffY, newPosX, newPosY;
          currentPosition = _this.position.get();
          newPosX = currentPosition[0] + data.delta[0];
          newPosY = currentPosition[1] + data.delta[1];
          if (_this.options.paginate) {
            diffX = newPosX % _this.options.itemSize[0];
            diffY = newPosY % _this.options.itemSize[1];
            if (diffX < -_this.halfX) {
              newPosX += -_this.options.itemSize[0] - diffX;
            } else {
              newPosX -= diffX;
            }
            if (diffY < -_this.halfY) {
              newPosY += -_this.options.itemSize[1] - diffY;
            } else {
              newPosY -= diffY;
            }
          }
          _this.posX = newPosX;
          _this.posY = newPosY;
          Dispatcher.emit("" + _this.options.id + "_scrollview_pos_changed", {
            index: _this.getIndex(),
            item: _this.getItem()
          });
          diffTapX = Math.abs(_this.prevTapX - data.clientX) > 10;
          diffTapY = Math.abs(_this.prevTapY - data.clientY) > 10;
          if (diffTapX && diffTapY && Date.now() - _this.doubleTapRegister > 300) {
            _this.doubleTapRegister = Date.now();
            diffTapX = data.clientX;
            diffTapY = data.clientY;
          } else {
            Dispatcher.emit("" + _this.options.id + "_double_tapped");
          }
          return _this.position.set([newPosX, newPosY], {
            method: 'spring',
            period: 150
          });
        };
      })(this));
    } else {
      return this.sync.on('end', (function(_this) {
        return function(data) {
          var currentPosition, diffTapX, diffTapY;
          if (data.velocity && data.velocity.length === 2) {
            currentPosition = _this.position.get();
            _this.posX = currentPosition[0] + data.velocity[0] * 500;
            _this.posY = currentPosition[1] + data.velocity[1] * 500;
            _this.posX = Math.max(_this.minPosX, _this.posX);
            _this.posX = Math.min(_this.maxPosX, _this.posX);
            _this.posY = Math.max(_this.minPosY, _this.posY);
            _this.posY = Math.min(_this.maxPosY, _this.posY);
            _this.position.set([_this.posX, _this.posY], {
              curve: Famous.Easing.outCubic,
              period: 300
            });
            if (data.delta[0] === 0 && data.delta[1] === 0) {
              if (_this.getItemByClientXY(data.clientX, data.clientY)) {
                Dispatcher.emit("" + _this.options.id + "_last_tapped_item", {
                  index: _this.getIndexByClientXY(data.clientX, data.clientY),
                  item: _this.getItemByClientXY(data.clientX, data.clientY)
                });
              }
            }
          }
          diffTapX = Math.abs(_this.prevTapX - data.clientX) > 10;
          diffTapY = Math.abs(_this.prevTapY - data.clientY) > 10;
          if (diffTapX && diffTapY && Date.now() - _this.doubleTapRegister > 300) {
            _this.doubleTapRegister = Date.now();
            diffTapX = data.clientX;
            return diffTapY = data.clientY;
          } else {
            return Dispatcher.emit("" + _this.options.id + "_double_tapped", {
              index: _this.getIndexByClientXY(data.clientX, data.clientY),
              item: _this.getItemByClientXY(data.clientX, data.clientY)
            });
          }
        };
      })(this));
    }
  };

  EasyScrollview.prototype.getIndexByClientXY = function(x, y) {
    var clickPos, frameOffset, pos, size;
    if (this.clickOffset) {
      x -= this.clickOffset;
      y -= this.clickOffset;
    }
    frameOffset = -this.position.get()[this.options.direction];
    clickPos = [x, y][this.options.direction];
    pos = frameOffset + clickPos;
    size = this.options.itemSize[this.options.direction];
    return Math.floor(pos / size);
  };

  EasyScrollview.prototype.getIndex = function() {
    var pos, size;
    pos = [this.posX, this.posY][this.options.direction];
    size = this.options.itemSize[this.options.direction];
    return -(pos / size);
  };

  EasyScrollview.prototype.getItem = function() {
    return this.items[this.getIndex()];
  };

  EasyScrollview.prototype.getItemByClientXY = function(x, y) {
    return this.items[this.getIndexByClientXY(x, y)];
  };

  EasyScrollview.prototype.addItems = function(items) {
    this.items = items;
    _.each(this.items, (function(_this) {
      return function(item) {
        return item.pipe(_this._eventInput);
      };
    })(this));
    this.itemContainer.sequenceFrom(this.items);
    this.maxPosX = 0;
    this.maxPosY = 0;
    if (this.options.direction === 0) {
      this.minPosX = this.options.containerSize[0] - (this.items.length * this.options.itemSize[0]);
      this.minPosY = 0;
    } else {
      this.minPosX = 0;
      this.minPosY = this.options.containerSize[1] - (this.items.length * this.options.itemSize[1]);
    }
    if (!this.options.noScrollBar) {
      return createScrollbar.call(this);
    }
  };

  createScrollbar = function() {
    var radius, scrollBarContainerBackground, windowToContentRatio;
    this.windowSize = this.options.containerSize[this.options.direction];
    this.contentSize = this.items.length * this.options.itemSize[this.options.direction];
    windowToContentRatio = this.windowSize / this.contentSize;
    if (windowToContentRatio > 1) {
      windowToContentRatio = 1;
    }
    this.scrollbarSize = this.windowSize * windowToContentRatio;
    this.maxScroll = this.contentSize - this.windowSize;
    radius = this.options.scrollBarThickness * 0.5;
    radius = "" + radius + "px";
    if (this.options.direction === 0) {
      this.scrollbar = new Famous.Surface({
        size: [this.scrollbarSize, this.options.scrollBarThickness],
        properties: {
          backgroundColor: this.options.scrollBarColor,
          borderTopLeftRadius: radius,
          borderTopRightRadius: radius,
          borderBottomLeftRadius: radius,
          borderBottomRightRadius: radius,
          pointerEvents: 'auto'
        }
      });
      this.scrollBarContainer = new Famous.CContainer({
        size: [this.windowSize, this.options.scrollBarThickness]
      });
    } else {
      this.scrollbar = new Famous.Surface({
        size: [this.options.scrollBarThickness, this.scrollbarSize],
        properties: {
          backgroundColor: this.options.scrollBarColor,
          borderTopLeftRadius: radius,
          borderTopRightRadius: radius,
          borderBottomLeftRadius: radius,
          borderBottomRightRadius: radius,
          pointerEvents: 'auto'
        }
      });
      this.scrollBarContainer = new Famous.CContainer({
        size: [this.options.scrollBarThickness, this.windowSize]
      });
    }
    scrollBarContainerBackground = new Famous.Surface({
      properties: {
        backgroundColor: this.options.scrollContainerColor,
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius,
        pointerEvents: 'none'
      }
    });
    this.scrollBarContainer.add(Famous.opaqueBy(this.options.scrollContainerOpacity)).add(scrollBarContainerBackground);
    return this.scrollBarContainer.add(Famous.opaqueBy(this.options.scrollBarOpacity)).add(this.scrollbarPositionModifier).add(this.scrollbar);
  };

  EasyScrollview.prototype.moveToIndex = function(index, emitPosChanged) {
    var size;
    if (index == null) {
      index = 0;
    }
    if (emitPosChanged == null) {
      emitPosChanged = false;
    }
    size = this.options.itemSize[this.options.direction];
    if (this.options.direction === 0) {
      this.posY = 0;
      this.posX = -(index * size);
    } else {
      this.posX = 0;
      this.posY = -(index * size);
    }
    this.position.set([this.posX, this.posY], {
      method: 'spring',
      period: 150
    });
    if (emitPosChanged) {
      return Dispatcher.emit("" + this.options.id + "_scrollview_pos_changed", {
        index: this.getIndex(),
        item: this.getItem()
      });
    }
  };

  EasyScrollview.prototype.getScrollbar = function() {
    return this.scrollbar;
  };

  EasyScrollview.prototype.getScrollbarContainer = function() {
    return this.scrollBarContainer;
  };

  return EasyScrollview;

})(Famous.CView);

module.exports = Famous;


},{"./..\\..\\bower_components\\famous-boxlayout\\BoxLayout":2,"./..\\..\\bower_components\\famous\\core\\Context":7,"./..\\..\\bower_components\\famous\\core\\Engine":9,"./..\\..\\bower_components\\famous\\core\\Entity":10,"./..\\..\\bower_components\\famous\\core\\EventHandler":12,"./..\\..\\bower_components\\famous\\core\\Modifier":14,"./..\\..\\bower_components\\famous\\core\\RenderNode":16,"./..\\..\\bower_components\\famous\\core\\Surface":18,"./..\\..\\bower_components\\famous\\core\\Transform":19,"./..\\..\\bower_components\\famous\\core\\View":20,"./..\\..\\bower_components\\famous\\inputs\\GenericSync":22,"./..\\..\\bower_components\\famous\\inputs\\MouseSync":23,"./..\\..\\bower_components\\famous\\inputs\\ScrollSync":24,"./..\\..\\bower_components\\famous\\inputs\\TouchSync":25,"./..\\..\\bower_components\\famous\\modifiers\\Draggable":29,"./..\\..\\bower_components\\famous\\modifiers\\StateModifier":30,"./..\\..\\bower_components\\famous\\surfaces\\ContainerSurface":39,"./..\\..\\bower_components\\famous\\surfaces\\ImageSurface":40,"./..\\..\\bower_components\\famous\\surfaces\\InputSurface":41,"./..\\..\\bower_components\\famous\\transitions\\Easing":42,"./..\\..\\bower_components\\famous\\transitions\\SnapTransition":44,"./..\\..\\bower_components\\famous\\transitions\\Transitionable":45,"./..\\..\\bower_components\\famous\\utilities\\Timer":48,"./..\\..\\bower_components\\famous\\views\\FlexibleLayout":50,"./..\\..\\bower_components\\famous\\views\\GridLayout":51,"./..\\..\\bower_components\\famous\\views\\Lightbox":52,"./..\\..\\bower_components\\famous\\views\\RenderController":53,"./..\\..\\bower_components\\famous\\views\\Scrollview":55,"./..\\..\\bower_components\\famous\\views\\SequentialLayout":56,"lodash":67}],107:[function(require,module,exports){
var Models;

Models = {
  Client: require('./model.client.coffee'),
  Session: require('./model.session.coffee')
};

module.exports = Models;


},{"./model.client.coffee":108,"./model.session.coffee":109}],108:[function(require,module,exports){
var Client;

module.exports = Client = (function() {
  function Client(clientId, clientAge, clientRegisterDate, clientdb) {
    var client, default_profile_pic;
    clientId = clientId.toUpperCase().trim();
    this.clientFetchPromise = $.Deferred();
    if (clientdb.length !== 0) {
      client = clientdb[0];
      this.Id = client.Id;
      this.name = client.name;
      this.age = 0;
      if (client.age === null || (client.age = '' || (client.age = 'undefined'))) {
        if (clientAge !== 0) {
          this.age = clientAge;
        }
      }
      this.photos = client.photos;
      this.sessions = client.sessions;
      this.matches = client.matches || {};
      _.each(this.matches, function(match) {
        return match.favourite = match.favourite === 'true';
      });
      default_profile_pic = {
        temp: 'images/profile.png',
        original: null,
        sized: null,
        square: null,
        large: null,
        date_taken: null,
        timestamp: null
      };
      this.profile_pic = client.profile_pic || default_profile_pic;
      this.first_joined = client.first_joined;
      this.rating_pigmentation = client.rating_pigmentation;
      this.rating_sensitive = client.rating_sensitive;
      this.rating_aging = client.rating_aging;
      this.rating_acne = client.rating_acne;
      this.desire_skin_brightening = client.desire_skin_brightening === 'true';
      this.desire_skin_hydrates = client.desire_skin_hydrates === 'true';
      this.desire_eye_bags = client.desire_eye_bags === 'true';
      this.desire_dark_spots = client.desire_dark_spots === 'true';
      this.desire_pigmentation = client.desire_pigmentation === 'true';
      this.desire_acne = client.desire_acne === 'true';
      this.desire_sensitive = client.desire_sensitive === 'true';
      this.desire_aging = client.desire_aging === 'true';
      this.desire_wrinkles = client.desire_wrinkles === 'true';
      this.desire_pimples = client.desire_pimples === 'true';
      this.desire_blackheads = client.desire_blackheads === 'true';
      this.desire_coloration = client.desire_coloration === 'true';
      this.checklist = client.checklist || [];
      if (Utils.getDate() !== client.sessions[client.sessions.length - 1].date) {
        this.sessions.push({
          date: Utils.getDate(),
          treatment_improvement: null,
          service: null
        });
      }
    } else {
      alert("First Visit ");
      this.Id = clientId;
      this.name = clientId;
      this.age = clientAge;
      this.photos = [];
      this.sessions = [];
      this.matches = {};
      this.sessions.push({
        date: Utils.getDate(),
        treatment_improvement: null,
        service: null
      });
      this.first_joined = clientRegisterDate;
      this.profile_pic = {
        temp: 'images/profile.png',
        original: null,
        sized: null,
        square: null,
        large: null,
        date_taken: null,
        timestamp: null
      };
      this.rating_pigmentation = null;
      this.rating_sensitive = null;
      this.rating_aging = null;
      this.rating_acne = null;
      this.desire_skin_brightening = false;
      this.desire_skin_hydrates = false;
      this.desire_eye_bags = false;
      this.desire_dark_spots = false;
      this.desire_pigmentation = false;
      this.desire_acne = false;
      this.desire_sensitive = false;
      this.desire_aging = false;
      this.desire_wrinkles = false;
      this.desire_pimples = false;
      this.desire_blackheads = false;
      this.desire_coloration = false;
      this.checklist = [];
    }
    this.session = this.sessions.length;
    this.reindex();
    this.save();
    this.clientFetchPromise.resolve();
  }

  Client.prototype.savenew = function() {
    alert("save new client");
  };

  Client.prototype.reindex = function() {
    var del, getUniqId, index, largePic, originalPic, persisted, save, sizedPic, squarePic;
    this.photos = _(this.photos).sortBy('timestamp').reverse().value();
    index = 0;
    save = function() {
      var client;
      client = arguments[0];
      client.photos[this.index] = this;
      return client.save();
    };
    del = function() {
      var client;
      client = arguments[0];
      return client.removePhoto(this.index);
    };
    persisted = function() {
      var matched;
      matched = this.original_picture.match(/http:/);
      return matched && matched.length > 0;
    };
    getUniqId = function() {
      return "S" + this.session + "_" + this.taken_for + "_" + this.timestamp;
    };
    sizedPic = function() {
      return this.sized_picture || this.temp_path;
    };
    squarePic = function() {
      return this.square_picture || this.temp_path;
    };
    largePic = function() {
      return this.large_picture || this.temp_path;
    };
    originalPic = function() {
      return this.original_picture || this.temp_path;
    };
    while (index < this.photos.length) {
      this.photos[index].index = index;
      this.photos[index].save = save.bind(this.photos[index], this);
      this.photos[index].del = del.bind(this.photos[index], this);
      this.photos[index].getUniqId = getUniqId.bind(this.photos[index]);
      this.photos[index].persisted = persisted.bind(this.photos[index]);
      this.photos[index].sizedPic = sizedPic.bind(this.photos[index]);
      this.photos[index].squarePic = squarePic.bind(this.photos[index]);
      this.photos[index].largePic = largePic.bind(this.photos[index]);
      this.photos[index].originalPic = originalPic.bind(this.photos[index]);
      if (this.photos[index].picture_type && this.photos[index].picture_type === 'micro') {
        this.photos[index].picture_type = 'micro';
      } else {
        this.photos[index].picture_type = 'snap';
      }
      index++;
    }
    Dispatcher.emit('photo_reindexed');
    return this.photos;
  };

  Client.prototype.firstVisit = function() {
    return this.sessions[0].date;
  };

  Client.prototype.profilePic = function() {
    return this.profile_pic.square || this.profile_pic.temp;
  };

  Client.prototype.lastVisit = function() {
    return this.latestSession().date;
  };

  Client.prototype.noOfSessions = function() {
    return this.sessions.length;
  };

  Client.prototype.latestSession = function() {
    return this.sessions[this.sessions.length - 1];
  };

  Client.prototype.latestPicture = function(sess) {
    if (sess == null) {
      sess = void 0;
    }
    if (sess === void 0) {
      sess = this.latestSession();
    }
    return this.photosInSession(sess)[0];
  };

  Client.prototype.photosInSession = function(sess) {
    if (sess == null) {
      sess = void 0;
    }
    if (sess === void 0) {
      sess = this.session;
    }
    sess = sess.toString();
    return _(this.photos).where({
      session: sess
    }).sortBy('timestamp').reverse().value();
  };

  Client.prototype.snapPhotosInSession = function(sess) {
    if (sess == null) {
      sess = void 0;
    }
    if (sess === void 0) {
      sess = this.session;
    }
    sess = sess.toString();
    return _(this.photos).where({
      session: sess,
      picture_type: 'snap'
    }).sortBy('timestamp').reverse().value();
  };

  Client.prototype.microPhotosInSession = function(sess) {
    if (sess == null) {
      sess = void 0;
    }
    if (sess === void 0) {
      sess = this.session;
    }
    sess = sess.toString();
    return _(this.photos).where({
      session: sess,
      picture_type: 'micro'
    }).sortBy('timestamp').reverse().value();
  };

  Client.prototype.removePhoto = function(index) {
    this.photos.splice(index, 1);
    this.reindex();
    this.save();
    return this.photos;
  };

  Client.prototype.addPhoto = function(original_picture, taken_for, timestamp, session) {
    var err, newPhoto, photo;
    if (session === void 0) {
      session = this.session;
    }
    session = session.toString();
    photo = {
      taken_for: taken_for,
      session: session,
      angle: null,
      date_taken: Utils.getDate(),
      timestamp: timestamp,
      temp_path: original_picture,
      original_picture: null,
      sized_picture: null,
      square_picture: null,
      large_picture: null,
      index: null
    };
    this.photos.push(photo);
    if (Session) {
      Session.setCurrentSession(this.noOfSessions(), false);
    }
    this.reindex();
    this.save();
    newPhoto = _(this.photos).where({
      timestamp: timestamp
    }).value()[0];
    try {
      if (Session) {
        Session.setCurrentPhoto(newPhoto);
        Session.setCurrentSession(this.noOfSessions());
      }
    } catch (_error) {
      err = _error;
      console.log(err);
    }
    return newPhoto;
  };

  Client.prototype.setProfilePicUploaded = function(original, sized, square, large) {
    this.profile_pic = {
      original: original,
      sized: sized,
      square: square,
      large: large
    };
    this.save();
    Dispatcher.emit('session_changed:current_client');
    return this.profile_pic;
  };

  Client.prototype.setProfilePicTemp = function(temp) {
    this.profile_pic = {
      temp: temp,
      original: null,
      sized: null,
      square: null,
      large: null,
      date_taken: Utils.getDate(),
      timestamp: Date.now()
    };
    this.save();
    return this.profile_pic;
  };

  Client.prototype.hasMatches = function() {
    return this.getMatches().length > 0;
  };

  Client.prototype.getMatches = function() {
    return _(this.matches).toArray().sortBy('session').value();
  };

  Client.prototype.getMatchesBySession = function(sess) {
    var a, b;
    a = _(this.matches).toArray().where({
      session: sess
    }).value();
    sess = sess.toString();
    b = _(this.matches).toArray().where({
      session: sess
    }).value();
    return _.uniq(a.concat(b));
  };

  Client.prototype.isMatched = function(photoA, photoB) {
    var after, before, firstID, matchID, saved_session, secondID;
    saved_session = photoA.session;
    before = photoB;
    after = photoA;
    if (photoB.session > photoA.session) {
      saved_session = photoB.session;
      before = photoA;
      after = photoB;
    }
    if (photoA.session === photoB.session) {
      if (photoB.timestamp > photoA.timestamp) {
        saved_session = photoB.session;
        before = photoA;
        after = photoB;
      } else {
        saved_session = photoA.session;
        before = photoB;
        after = photoA;
      }
    }
    firstID = "S" + before.session + "_" + before.taken_for + "_" + before.timestamp;
    secondID = "S" + after.session + "_" + after.taken_for + "_" + after.timestamp;
    matchID = "" + firstID + "__" + secondID;
    if (this.matches[matchID]) {
      return true;
    } else {
      return false;
    }
  };

  Client.prototype.createMatch = function(photoA, photoB) {
    var after, before, firstID, matchID, saved_session, secondID;
    saved_session = photoA.session;
    before = photoB;
    after = photoA;
    if (photoB.session > photoA.session) {
      saved_session = photoB.session;
      before = photoA;
      after = photoB;
    }
    if (photoA.session === photoB.session) {
      if (photoB.timestamp > photoA.timestamp) {
        saved_session = photoB.session;
        before = photoA;
        after = photoB;
      } else {
        saved_session = photoA.session;
        before = photoB;
        after = photoA;
      }
    }
    firstID = "S" + before.session + "_" + before.taken_for + "_" + before.timestamp;
    secondID = "S" + after.session + "_" + after.taken_for + "_" + after.timestamp;
    matchID = "" + firstID + "__" + secondID;
    if (this.matches[matchID]) {
      return this.matches[matchID];
    } else {
      this.matches[matchID] = {
        session: saved_session,
        before: before,
        after: after,
        favourite: false,
        matched_at: Utils.getDate(),
        session_date: this.sessions[saved_session - 1].date
      };
      this.save();
      Dispatcher.emit('client:matches_updated');
      return this.matches[matchID];
    }
  };

  Client.prototype.removeMatch = function(photoA, photoB) {
    var after, before, firstID, matchID, saved_session, secondID;
    saved_session = photoA.session;
    before = photoB;
    after = photoA;
    if (photoB.session > photoA.session) {
      saved_session = photoB.session;
      before = photoA;
      after = photoB;
    }
    if (photoA.session === photoB.session) {
      if (photoB.timestamp > photoA.timestamp) {
        saved_session = photoB.session;
        before = photoA;
        after = photoB;
      } else {
        saved_session = photoA.session;
        before = photoB;
        after = photoA;
      }
    }
    firstID = "S" + before.session + "_" + before.taken_for + "_" + before.timestamp;
    secondID = "S" + after.session + "_" + after.taken_for + "_" + after.timestamp;
    matchID = "" + firstID + "__" + secondID;
    if (this.matches[matchID]) {
      delete this.matches[matchID];
      this.save();
      Dispatcher.emit('client:matches_updated');
      return true;
    } else {
      return false;
    }
  };

  Client.prototype.favouriteMatch = function(photoA, photoB) {
    var after, before, firstID, matchID, saved_session, secondID;
    saved_session = photoA.session;
    before = photoB;
    after = photoA;
    if (photoB.session > photoA.session) {
      saved_session = photoB.session;
      before = photoA;
      after = photoB;
    }
    if (photoA.session === photoB.session) {
      if (photoB.timestamp > photoA.timestamp) {
        saved_session = photoB.session;
        before = photoA;
        after = photoB;
      } else {
        saved_session = photoA.session;
        before = photoB;
        after = photoA;
      }
    }
    firstID = "S" + before.session + "_" + before.taken_for + "_" + before.timestamp;
    secondID = "S" + after.session + "_" + after.taken_for + "_" + after.timestamp;
    matchID = "" + firstID + "__" + secondID;
    if (this.matches[matchID]) {
      this.matches[matchID].favourite = true;
      return this.save();
    } else {
      return false;
    }
  };

  Client.prototype.unfavouriteMatch = function(photoA, photoB) {
    var after, before, firstID, matchID, saved_session, secondID;
    saved_session = photoA.session;
    before = photoB;
    after = photoA;
    if (photoB.session > photoA.session) {
      saved_session = photoB.session;
      before = photoA;
      after = photoB;
    }
    if (photoA.session === photoB.session) {
      if (photoB.timestamp > photoA.timestamp) {
        saved_session = photoB.session;
        before = photoA;
        after = photoB;
      } else {
        saved_session = photoA.session;
        before = photoB;
        after = photoA;
      }
    }
    firstID = "S" + before.session + "_" + before.taken_for + "_" + before.timestamp;
    secondID = "S" + after.session + "_" + after.taken_for + "_" + after.timestamp;
    matchID = "" + firstID + "__" + secondID;
    if (this.matches[matchID]) {
      this.matches[matchID].favourite = false;
      return this.save();
    } else {
      return false;
    }
  };

  Client.prototype.save = function() {
    var dates, empty_sessions, no_photo_with_associated_date, not_this_session;
    dates = _.map(this.photos, 'date_taken');
    not_this_session = function(sess) {
      return sess.date !== Utils.getDate();
    };
    no_photo_with_associated_date = function(sess) {
      var cond;
      cond = _.contains(dates, sess.date);
      return !cond;
    };
    empty_sessions = [];
    _.each(this.sessions, function(sess) {
      if (not_this_session(sess) && no_photo_with_associated_date(sess)) {
        return empty_sessions.push(sess);
      }
    });
    this.sessions = _.difference(this.sessions, empty_sessions);
    this.session = this.sessions.length;
    this.persistToBackend();
    return this;
  };

  Client.prototype.persistToBackend = function() {
    return $.post("" + Conf.backend + "/clients/" + this.Id, this.toCleanObj(), function(res) {
      return console.log('PERSISTED CLIENT:');
    });
  };

  Client.prototype.fetchFromBackend = function(clientId) {
    var fetchPromise;
    fetchPromise = $.ajax({
      url: "" + Conf.backend + "/clients",
      dataType: "json",
      data: {
        client_name: clientId
      },
      type: 'GET'
    });
    return fetchPromise;
  };

  Client.prototype.toCleanObj = function() {
    return JSON.parse(JSON.stringify(this.toObj()));
  };

  Client.prototype.toObj = function() {
    this.name = this.name.toUpperCase();
    return {
      Id: this.Id,
      name: this.name,
      age: this.age,
      first_joined: this.first_joined,
      profile_pic: this.profile_pic,
      checklist: this.checklist,
      rating_pigmentation: this.rating_pigmentation,
      rating_sensitive: this.rating_sensitive,
      rating_aging: this.rating_aging,
      rating_acne: this.rating_acne,
      desire_skin_brightening: this.desire_skin_brightening,
      desire_skin_hydrates: this.desire_skin_hydrates,
      desire_eye_bags: this.desire_eye_bags,
      desire_dark_spots: this.desire_dark_spots,
      desire_pigmentation: this.desire_pigmentation,
      desire_acne: this.desire_acne,
      desire_sensitive: this.desire_sensitive,
      desire_aging: this.desire_aging,
      desire_wrinkles: this.desire_wrinkles,
      desire_pimples: this.desire_pimples,
      desire_blackheads: this.desire_blackheads,
      desire_coloration: this.desire_coloration,
      photos: this.photos,
      sessions: this.sessions,
      matches: this.matches
    };
  };

  return Client;

})();


},{}],109:[function(require,module,exports){
var Session;

module.exports = Session = (function() {
  var setupListener;

  function Session() {
    this.currentClient = null;
    this.currentPhoto = null;
    this.currentSession = null;
    this.currentConsultant = null;
    this.clientFilterFav = false;
    this.clientFilterPigmentation = false;
    this.clientFilterAcne = false;
    this.clientFilterSensitive = false;
    this.clientFilterAging = false;
    this.clientFilterNoOfResult = 10;
  }

  Session.prototype.initFromStores = function(stores) {
    this.stores = stores;
    return setupListener.call(this);
  };

  setupListener = function() {
    this.event = new Fa.EventHandler;
    Dispatcher.pipe(this.event);
    this.event.on('face_rating_updated', (function(_this) {
      return function(res) {
        switch (res.id) {
          case 'cl_result_rating':
            return _this.currentClient.cl_result_rating = res.rating;
        }
      };
    })(this));
    return this.event.on('tristar_updated', (function(_this) {
      return function(res) {
        switch (res.id) {
          case 'Pigmentation':
            return _this.currentClient.rating_pigmentation = res.rating;
          case 'Sensitive':
            return _this.currentClient.rating_sensitive = res.rating;
          case 'Aging':
            return _this.currentClient.rating_aging = res.rating;
          case 'Acne':
            return _this.currentClient.rating_acne = res.rating;
          case 'Treatment Improvement':
            return _this.currentClient.latestSession().treatment_improvement = res.rating;
          case 'Service':
            return _this.currentClient.latestSession().service = res.rating;
        }
      };
    })(this));
  };

  Session.prototype.setCurrentClient = function(value, triggerEvent) {
    if (triggerEvent == null) {
      triggerEvent = true;
    }
    this.currentClient = value;
    this.setCurrentSession(value.session);
    if (this.currentClient.photos.length > 0) {
      this.setCurrentPhoto(this.currentClient.photosInSession(this.currentSession)[0]);
    } else {
      this.setCurrentPhoto(null);
    }
    if (triggerEvent) {
      return Dispatcher.emit('session_changed:current_client');
    }
  };

  Session.prototype.setCurrentPhoto = function(value, triggerEvent) {
    if (triggerEvent == null) {
      triggerEvent = true;
    }
    this.currentPhoto = value;
    if (triggerEvent) {
      return Dispatcher.emit('session_changed:current_photo');
    }
  };

  Session.prototype.setCurrentSession = function(value, triggerEvent) {
    if (triggerEvent == null) {
      triggerEvent = true;
    }
    this.currentSession = value;
    if (triggerEvent) {
      return Dispatcher.emit('session_changed:current_session');
    }
  };

  Session.prototype.setCurrentConsultant = function(value, triggerEvent) {
    if (triggerEvent == null) {
      triggerEvent = true;
    }
    this.currentConsultant = value;
    if (triggerEvent) {
      return Dispatcher.emit('session_changed:current_consultant');
    }
  };

  return Session;

})();


},{}],110:[function(require,module,exports){
var Pages;

Pages = {
  Splash: require('./page.splash.coffee'),
  Login: require('./page.login.coffee'),
  Client: require('./page.client.coffee'),
  Dashboard: require('./page.dashboard.coffee'),
  Snap: require('./page.snap.coffee'),
  Canvas: require('./page.canvas.coffee'),
  Experi: require('./page.experi.coffee'),
  Compare: require('./page.compare.coffee'),
  Result: require('./page.result.coffee'),
  Micro: require('./page.micro.coffee'),
  Checklist: require('./page.checklist.coffee'),
  Setting: require('./page.setting.coffee')
};

module.exports = Pages;


},{"./page.canvas.coffee":111,"./page.checklist.coffee":112,"./page.client.coffee":113,"./page.compare.coffee":114,"./page.dashboard.coffee":115,"./page.experi.coffee":116,"./page.login.coffee":117,"./page.micro.coffee":118,"./page.result.coffee":119,"./page.setting.coffee":120,"./page.snap.coffee":121,"./page.splash.coffee":122}],111:[function(require,module,exports){
var canvasPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = canvasPage = (function(_super) {
  __extends(canvasPage, _super);

  canvasPage.DEFAULT_OPTIONS = {};

  function canvasPage(options) {
    canvasPage.__super__.constructor.call(this, options);
    this.clickZone = new Fa.Surface({
      size: [100, 100],
      properties: {
        backgroundColor: 'blue',
        cursor: 'pointer'
      }
    });
    this.clearData = new Fa.Surface({
      content: 'CLEAR',
      size: [100, 100],
      properties: {
        backgroundColor: 'red',
        cursor: 'pointer'
      }
    });
    this.clickZone.on('click', function() {
      return Dispatcher.emit('page_change', {
        to: 'Snap'
      });
    });
    this.clearData.on('click', function() {
      Store.clear();
      return alert('cleared');
    });
    this.container = new Fa.CContainer({
      size: [void 0, void 0],
      properties: {
        backgroundColor: '#5ba4cc'
      }
    });
    this.output = new Fa.Surface({
      size: [800, 500],
      content: 'nothing here',
      properties: {
        color: 'black'
      }
    });
    this.container.addToLeft(this.clearData);
    this.container.addToTop(this.clickZone);
    this.container.addToCenter(this.output);
    this.add(this.container);
  }

  canvasPage.prototype.afterLoad = function() {};

  return canvasPage;

})(Fa.CView);


},{}],112:[function(require,module,exports){
var AsLink, Hamburger, Header, QuickLinks, ResultHeader, Tristar, checklistPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hamburger = Fa.Elements.Common.hamburger;

Header = Fa.Elements.Common.header;

QuickLinks = Fa.Components.Snap.quick_links;

ResultHeader = Fa.Components.Checklist.result_header;

Tristar = Fa.Components.Checklist.tristar;

AsLink = Fa.Behaviors.AsLink;

module.exports = checklistPage = (function(_super) {
  var createLeftPanel, createLeftPanelConsultantRatings, createLeftPanelCustomerRatings, createLeftPanelDesiredResultBox, createLeftPanelSaveResult, createRightPanel, handleFaceRating, init, initQuestionnaires, syncChecklistValues, updateResultBox;

  __extends(checklistPage, _super);

  checklistPage.DEFAULT_OPTIONS = {};

  function checklistPage(options) {
    checklistPage.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer();
    init.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('checklist_questionnaires_fetched', initQuestionnaires.bind(this));
    this._eventInput.on('update_desired_results_text', updateResultBox.bind(this));
    this._eventInput.on('session_changed:current_client', updateResultBox.bind(this));
    this._eventInput.on('face_rating_clicked', handleFaceRating.bind(this));
    this._eventInput.on('current_client_checklist_updated', syncChecklistValues.bind(this));
    if (Checklist.raw) {
      initQuestionnaires.call(this, Checklist.raw);
    }
    this.add(this.container);
  }

  init = function() {
    var leftCol, leftPanel, rightPanel, sections;
    sections = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [4, 6]
    });
    leftCol = new Fa.CContainer({
      properties: {
        background: '-webkit-linear-gradient(top,  #c89a58 0%,#aa2965 26%,#670c47 51%,#b23267 76%,#caad54 100%)'
      }
    });
    leftPanel = createLeftPanel.call(this);
    rightPanel = createRightPanel.call(this);
    leftCol.add(leftPanel);
    sections.sequenceFrom([leftCol, rightPanel]);
    this.rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 40]
    });
    this.rows.sequenceFrom([
      new Fa.Surface({
        properties: {
          background: 'rgba(5,5,5, 0.5)'
        }
      }), sections
    ]);
    return this.container.add(this.rows);
  };

  checklistPage.prototype.afterLoad = function() {
    return Fa.Timer.setTimeout(function() {
      return Dispatcher.emit('current_client_checklist_updated');
    }, 1200);
  };

  createLeftPanel = function() {
    var rows;
    this.hamContainer = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    this.hamburger = new Hamburger();
    this.hamContainer.add(this.hamburger);
    this.quickLinks = new QuickLinks();
    this.resultBox = createLeftPanelDesiredResultBox.call(this);
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [4, 3, 15, 3, 12, 3, 9, 5, 8]
    });
    rows.sequenceFrom([
      this.hamContainer, new Header({
        title: 'Consultant Ratings'
      }), createLeftPanelConsultantRatings.call(this), new ResultHeader(), this.resultBox, new Header({
        title: 'Customer Ratings'
      }), createLeftPanelCustomerRatings.call(this), createLeftPanelSaveResult.call(this), this.quickLinks
    ]);
    return rows;
  };

  createLeftPanelConsultantRatings = function() {
    var container, createRatingItem, rows;
    createRatingItem = function(text) {
      var cols, textItem;
      cols = new Fa.FlexibleLayout({
        direction: 0,
        ratios: [1, 6, 4, 1]
      });
      textItem = new Fa.Surface({
        content: text,
        properties: {
          align: 'left',
          color: '#000',
          fontSize: '20px',
          lineHeight: '1.8',
          fontWeight: 'bolder'
        }
      });
      cols.sequenceFrom([
        Fa.EmptyView(), textItem, new Tristar({
          id: text
        }), Fa.EmptyView()
      ]);
      return cols;
    };
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 3, 3, 3, 3, 1]
    });
    rows.sequenceFrom([Fa.EmptyView(), createRatingItem('Pigmentation'), createRatingItem('Sensitive'), createRatingItem('Aging'), createRatingItem('Acne'), Fa.EmptyView()]);
    container = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    container.add(rows);
    return container;
  };

  createLeftPanelDesiredResultBox = function() {
    var cols, container, rows;
    this.desiredResultText = new Fa.Surface({
      content: 'hell2o',
      properties: {
        border: '2px solid white',
        borderTopLeftRadius: '10px',
        borderTopRightRadius: '10px',
        borderBottomLeftRadius: '10px',
        borderBottomRightRadius: '10px',
        color: '#fff',
        fontSize: '17px',
        padding: '12px'
      }
    });
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 12, 1]
    });
    cols.sequenceFrom([Fa.EmptyView(), this.desiredResultText, Fa.EmptyView()]);
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 6, 1]
    });
    rows.sequenceFrom([Fa.EmptyView(), cols, Fa.EmptyView()]);
    container = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    container.add(rows);
    container.on('click', function() {
      return Dispatcher.emit('show_desired_opts');
    });
    return container;
  };

  createLeftPanelCustomerRatings = function() {
    var container, createRatingItem, rows;
    createRatingItem = function(text) {
      var cols, textItem;
      cols = new Fa.FlexibleLayout({
        direction: 0,
        ratios: [1, 13, 8, 2]
      });
      textItem = new Fa.Surface({
        content: text,
        properties: {
          align: 'left',
          color: 'white',
          fontSize: '18px',
          lineHeight: '2.3',
          fontWeight: 'bolder'
        }
      });
      cols.sequenceFrom([
        Fa.EmptyView(), textItem, new Tristar({
          id: text
        }), Fa.EmptyView()
      ]);
      return cols;
    };
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 3, 3, 1]
    });
    rows.sequenceFrom([Fa.EmptyView(), createRatingItem('Treatment Improvement'), createRatingItem('Service'), Fa.EmptyView()]);
    container = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    container.add(rows);
    return container;
  };

  createLeftPanelSaveResult = function() {
    var button, cols, container, icon, rows, text;
    container = new Fa.CContainer({
      properties: {
        borderTopLeftRadius: '10px',
        borderTopRightRadius: '10px',
        borderBottomLeftRadius: '10px',
        borderBottomRightRadius: '10px',
        color: 'white',
        align: 'center',
        backgroundColor: '#990569',
        padding: '12px',
        cursor: 'pointer'
      }
    });
    icon = new Fa.Surface({
      size: [true, true],
      content: '<span class="ion-document-text" style="vertical-align: middle"></span>',
      properties: {
        fontSize: '30px',
        lineHeight: '30px'
      }
    });
    text = new Fa.Surface({
      size: [true, true],
      content: 'Save Result',
      properties: {
        fontSize: '17px',
        lineHeight: '12px',
        fontWeight: 'bolder'
      }
    });
    container.add(Fa.translateBy(40, -12, 0)).add(icon);
    button = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 2, 4, 2]
    });
    button.sequenceFrom([Fa.EmptyView(), Fa.EmptyView(), text, Fa.EmptyView()]);
    container.addToCenter(button);
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 3, 1]
    });
    cols.sequenceFrom([Fa.EmptyView(), container, Fa.EmptyView()]);
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 3, 1]
    });
    rows.sequenceFrom([Fa.EmptyView(), cols, Fa.EmptyView()]);
    container = new Fa.CContainer({
      properties: {
        boxShadow: '0 40px 100px -20px #3B3B3B'
      }
    });
    container.add(rows);
    container.on('click', function() {
      Session.currentClient.save();
      if (Conf.isProduction) {
        return navigator.notification.alert('Saved successfully', void 0, 'Info');
      } else {
        return alert('Saved successfully');
      }
    });
    return container;
  };

  createRightPanel = function() {
    var wrapper;
    wrapper = new Fa.CContainer({
      properties: {
        borderLeft: '1px solid rgba(5,5,5,0.5)'
      }
    });
    this.renderer = new Fa.RenderCtrl({
      overlap: false
    });
    wrapper.add(this.renderer);
    return wrapper;
  };

  updateResultBox = function() {
    var text;
    text = '';
    if (Session.currentClient.desire_skin_brightening) {
      text += 'Skin Brightening. ';
    }
    if (Session.currentClient.desire_skin_hydrates) {
      text += 'Skin Hydrates. ';
    }
    if (Session.currentClient.desire_eye_bags) {
      text += 'Eye bags. ';
    }
    if (Session.currentClient.desire_dark_spots) {
      text += 'Dark spots. ';
    }
    if (Session.currentClient.desire_pigmentation) {
      text += 'Pigmentation. ';
    }
    if (Session.currentClient.desire_acne) {
      text += 'Acne. ';
    }
    if (Session.currentClient.desire_sensitive) {
      text += 'Sensitive. ';
    }
    if (Session.currentClient.desire_aging) {
      text += 'Aging. ';
    }
    if (Session.currentClient.desire_wrinkles) {
      text += 'Wrinkles. ';
    }
    if (Session.currentClient.desire_pimples) {
      text += 'Pimples. ';
    }
    if (Session.currentClient.desire_blackheads) {
      text += 'Blackheads. ';
    }
    if (Session.currentClient.desire_coloration) {
      text += 'Coloration. ';
    }
    return this.desiredResultText.setContent(text);
  };

  initQuestionnaires = function(questionnaires_data) {
    var hbs_runtime, html;
    hbs_runtime = require('hbsfy/runtime');
    hbs_runtime.registerHelper('ifChecklist', function(param, options) {
      if (param === 'checklist') {
        return options.fn(this);
      }
      if (param === 'rating') {
        return options.inverse(this);
      }
      return raise('incorrect param');
    });
    html = require('../templates/checklist.questionnaires.hbs')({
      questionnaires_data: questionnaires_data
    });
    this.questionnaires = new Fa.Surface({
      content: html,
      size: [void 0, void 0],
      properties: {
        overflow: 'auto'
      }
    });
    return this.renderer.show(this.questionnaires, void 0, (function(_this) {
      return function() {
        return syncChecklistValues.call(_this);
      };
    })(this));
  };

  syncChecklistValues = function() {
    return _.each(Checklist.raw, (function(_this) {
      return function(el) {
        var answers, q, rating;
        q = el.question;
        if (!Checklist.getSessByQuestion(q)) {
          if (el.type === 'checklist') {
            Session.currentClient.checklist.push({
              question: q,
              type: el.type,
              answers: []
            });
          }
          if (el.type === 'rating') {
            return Session.currentClient.checklist.push({
              question: q,
              type: el.type,
              answer: null
            });
          }
        } else {
          if (el.type === 'checklist') {
            answers = Checklist.getSessByQuestion(q).answers;
            if (answers == null) {
              Checklist.getSessByQuestion(q).answers = [];
              answers = [];
            }
            $('#clq-checklist-' + el.index).text(answers.join(', '));
          }
          if (el.type === 'rating') {
            $(".clq-rating-" + el.index).removeClass('active-face-rating').addClass('inactive-face-rating');
            rating = Checklist.getSessByQuestion(q).answer;
            console.log(rating);
            if (rating != null) {
              return $(".clq-rating-" + el.index + "[data-score=" + rating + "]").removeClass('inactive-face-rating').addClass('active-face-rating');
            } else {
              return $(".clq-rating-" + el.index).removeClass('active-face-rating').addClass('inactive-face-rating');
            }
          }
        }
      };
    })(this));
  };

  handleFaceRating = function(params) {
    var q;
    q = params.question;
    Checklist.getSessByQuestion(q).answer = params.score;
    Session.currentClient.save();
    return syncChecklistValues.call(this);
  };

  return checklistPage;

})(Fa.View);


},{"../templates/checklist.questionnaires.hbs":127,"hbsfy/runtime":65}],113:[function(require,module,exports){
var AsLink, clientPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

AsLink = Fa.Behaviors.AsLink;

module.exports = clientPage = (function(_super) {
  var _createLayouts;

  __extends(clientPage, _super);

  clientPage.DEFAULT_OPTIONS = {};

  function clientPage(options) {
    clientPage.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer();
    _createLayouts.call(this);
    this.add(this.container);
  }

  clientPage.prototype.afterLoad = function() {
    return this.clientId.setValue('');
  };

  _createLayouts = function() {
    var cancelText, login, loginText, modifier, radius;
    login = new Fa.ImageSurf({
      content: 'images/client_page.png'
    });
    this.container.add(login);
    this.clientId = new Fa.InputSurf({
      size: [240, 50],
      name: 'inputSurface',
      placeholder: 'Client ID',
      value: '',
      type: 'text',
      properties: {
        background: 'none',
        lineHeight: '30px',
        fontSize: '30px'
      }
    });
    modifier = new Fa.Modifier({
      opacity: 0.8
    });
    this.container.add(modifier).add(Fa.translateBy(680, 240, 0)).add(this.clientId);
    radius = '30px';
    loginText = new Fa.Surface({
      size: [330, 35],
      content: '<strong>Continue</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#fff',
        textAlign: 'center',
        fontSize: '23px'
      }
    });
    cancelText = new Fa.Surface({
      size: [330, 35],
      content: '<strong>Cancel</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#fff',
        textAlign: 'center',
        fontSize: '23px'
      }
    });
    this.clickZone = new Fa.Surface({
      size: [330, 33],
      properties: {
        cursor: 'pointer',
        backgroundColor: '#8A8A8A',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    this.clickZone.setActive = (function(_this) {
      return function() {
        return _this.clickZone.setProperties({
          backgroundColor: '#fff'
        });
      };
    })(this);
    this.clickZone.setInactive = (function(_this) {
      return function() {
        return _this.clickZone.setProperties({
          backgroundColor: '#8A8A8A'
        });
      };
    })(this);
    new AsLink(this.clickZone, void 0, (function() {
      var clientId, promise;
      clientId = this.clientId.getValue();
      if (clientId === void 0 || clientId === '') {
        if (Conf.isProduction) {
          return navigator.notification.alert('Please enter the client ID', void 0, 'Error');
        } else {
          return alert('Please enter the client ID');
        }
      } else {
        promise = Stores.Consultant.GetClientDetails(clientId);
        promise.done(function(clientdata) {
          var backpromise;
          if (clientdata.length !== 0) {
            if (clientdata.isExist === true) {
              window.clientdetails = Conf.clientdetails = clientdata;
              this.age = clientdata.client.Age;
              this.registerDate = clientdata.client.Registered_Date;
              backpromise = Stores.Consultant.fetchFromBackend(clientId);
              backpromise.done((function(_this) {
                return function(data) {
                  var client;
                  client = new Models.Client(clientId, _this.age, _this.registerDate, data);
                  return client.clientFetchPromise.done(function() {
                    Session.setCurrentClient(client);
                    return Dispatcher.emit('page_change', {
                      to: 'Dashboard'
                    });
                  });
                };
              })(this));
              return backpromise.fail(function(jqXHR, textStatus, errorThrown) {
                return alert("Error Connecting Mongo Server status:" + jqXHR.status + " " + errorThrown);
              });
            } else {
              return alert("client not registered in AES");
            }
          } else {
            return alert("No data exists for this client in AES");
          }
        });
        return promise.fail(function(jqXHR, textStatus, errorThrown) {
          return alert("Error Connecting AES Server" + errorThrown);
        });
      }
    }).bind(this));
    this.cancelZone = new Fa.Surface({
      size: [330, 33],
      properties: {
        cursor: 'pointer',
        backgroundColor: '#8A8A8A',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    this.cancelZone.setActive = (function(_this) {
      return function() {
        return _this.cancelZone.setProperties({
          backgroundColor: '#fff'
        });
      };
    })(this);
    this.cancelZone.setInactive = (function(_this) {
      return function() {
        return _this.cancelZone.setProperties({
          backgroundColor: '#8A8A8A'
        });
      };
    })(this);
    new AsLink(this.cancelZone, 'Login');
    this.container.add(Fa.translateBy(630, 305, 0)).add(loginText);
    this.container.add(Fa.translateBy(630, 344, 0)).add(cancelText);
    this.container.add(Fa.opaqueBy(0.5)).add(Fa.translateBy(630, 298, 0)).add(this.clickZone);
    return this.container.add(Fa.opaqueBy(0.5)).add(Fa.translateBy(630, 338, 0)).add(this.cancelZone);
  };

  return clientPage;

})(Fa.View);


},{}],114:[function(require,module,exports){
var Hamburger, Header, Numpad, PictureFrame, QuickLinks, SelSnapMicro, SelectorSection, VisitInfo, comparePage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hamburger = Fa.Elements.Common.hamburger;

Header = Fa.Elements.Common.header;

VisitInfo = Fa.Elements.Snap.visit_info;

PictureFrame = Fa.Elements.Snap.picture_frame;

Numpad = Fa.Components.Compare.frame_numpad;

SelSnapMicro = Fa.Components.Compare.sel_snap_micro;

SelectorSection = Fa.Components.Compare.selector_section;

QuickLinks = Fa.Components.Snap.quick_links;

module.exports = comparePage = (function(_super) {
  var createContent, createLeftFrameData, createPanel, createRightFrameData, createSubtitle, init;

  __extends(comparePage, _super);

  comparePage.DEFAULT_OPTIONS = {};

  function comparePage(options) {
    comparePage.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer();
    Dispatcher.pipe(this._eventInput);
    init.call(this);
    this.add(this.container);
    window.comparePage = this;
  }

  comparePage.prototype.afterLoad = function() {
    return Fa.Timer.setTimeout((function(_this) {
      return function() {
        _this.left_session = Session.currentSession;
        _this.right_session = Session.currentSession;
        _this.numPadRendererA.init();
        _this.numPadRendererB.init();
        _this.redrawPictureFrameA(Session.currentSession);
        return _this.redrawPictureFrameB(Session.currentSession);
      };
    })(this), 1000);
  };

  comparePage.prototype.pageExit = function() {
    if (this.leftFrame) {
      this.leftFrame.deregister();
    }
    if (this.rightFrame) {
      return this.rightFrame.deregister();
    }
  };

  init = function() {
    this.panel = createPanel.call(this);
    this.content = createContent.call(this);
    this.columns = new Fa.FlexibleLayout({
      ratios: [0.26, 0.74]
    });
    this.columns.sequenceFrom([this.panel, this.content]);
    this.rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 40]
    });
    this.rows.sequenceFrom([
      new Fa.Surface({
        properties: {
          background: 'rgba(5,5,5, 0.5)'
        }
      }), this.columns
    ]);
    return this.container.addToCenter(this.rows);
  };

  comparePage.prototype.showMatchCrude = function(timestampBef, timestampAft, sessBef, sessAft) {
    sessBef = sessBef.toString();
    sessAft = sessAft.toString();
    console.log([timestampBef, timestampAft, sessBef, sessAft]);
    this.numPadRendererA.changeToSess(sessBef);
    this.numPadRendererB.changeToSess(sessAft);
    this.redrawPictureFrameA(sessBef);
    this.redrawPictureFrameB(sessAft);
    this.leftFrame.updateFramePositionTo(timestampBef);
    return this.rightFrame.updateFramePositionTo(timestampAft);
  };

  comparePage.prototype.showMatch = function(before, after) {
    return this.showMatchCrude(before.timestamp, after.timestamp, before.session, after.session);
  };

  createPanel = function() {
    var panel, rows;
    this.hamContainer = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    this.hamburger = new Hamburger();
    this.hamContainer.add(this.hamburger);
    this.selSnapMicro = new SelSnapMicro();
    this.numPadRendererA = new Numpad({
      id: 'compare_frame_a'
    });
    this.numPadRendererB = new Numpad({
      id: 'compare_frame_b'
    });
    this.quickLinks = new QuickLinks();
    panel = new Fa.CContainer({
      properties: {
        background: '-webkit-linear-gradient(top,  #c89a58 0%,#aa2965 26%,#670c47 51%,#b23267 76%,#caad54 100%)'
      }
    });
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [10, 25, 10, 48, 10, 48, 20]
    });
    rows.sequenceFrom([
      this.hamContainer, this.selSnapMicro, new Header({
        title: 'Frame A'
      }), this.numPadRendererA, new Header({
        title: 'Frame B'
      }), this.numPadRendererB, this.quickLinks
    ]);
    panel.add(rows);
    return panel;
  };

  createSubtitle = function(angleData, takenData) {
    var angle, subtitle, subtitleContainer, taken;
    subtitle = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1]
    });
    angle = new Fa.WrappedSurface({
      content: "<strong>Angle:</strong>&nbsp;" + angleData,
      properties: {
        color: '#333',
        pointerEvents: 'none',
        textAlign: 'center'
      }
    });
    taken = new Fa.WrappedSurface({
      content: "<strong>Taken:</strong>&nbsp;" + takenData,
      properties: {
        color: '#333',
        pointerEvents: 'none',
        textAlign: 'center'
      }
    });
    subtitle.sequenceFrom([angle, taken]);
    subtitleContainer = new Fa.CContainer();
    subtitleContainer.angle = angle.surface;
    subtitleContainer.taken = taken.surface;
    subtitleContainer.addToCenter(subtitle);
    return subtitleContainer;
  };

  createLeftFrameData = function(photo) {
    return this.leftFrameData.push({
      photo: photo,
      subtitle: createSubtitle(photo.angle, photo.taken_for)
    });
  };

  createRightFrameData = function(photo) {
    return this.rightFrameData.push({
      photo: photo,
      subtitle: createSubtitle(photo.angle, photo.taken_for)
    });
  };

  createContent = function() {
    var content;
    this.leftFrameContainer = new Fa.CContainer();
    this.leftFrameRenderer = new Fa.RenderCtrl({
      overlap: false
    });
    this.leftFrameContainer.add(this.leftFrameRenderer);
    this.rightFrameContainer = new Fa.CContainer();
    this.rightFrameRenderer = new Fa.RenderCtrl({
      overlap: false
    });
    this.rightFrameContainer.add(this.rightFrameRenderer);
    this.frames = new Fa.FlexibleLayout({
      ratios: [1, 1]
    });
    this.frames.sequenceFrom([this.leftFrameContainer, this.rightFrameContainer]);
    this.selectorSection = new SelectorSection();
    content = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [72, 28]
    });
    content.sequenceFrom([this.frames, this.selectorSection]);
    this._eventInput.on('show_match_on_compare_page', (function(_this) {
      return function(obj) {
        _this.showMatchCrude(obj.timestampBef, obj.timestampAft, obj.sessionBef, obj.sessionAft);
        return Dispatcher.emit('page_change', {
          to: 'Compare'
        });
      };
    })(this));
    this._eventInput.on('compare_match_browser_content_last_tapped_item', (function(_this) {
      return function(obj) {
        _this.showMatch(obj.item.before, obj.item.after);
        Dispatcher.emit('hide_frontdrop', {
          "for": 'match_browse_snap'
        });
        return Dispatcher.emit('hide_backdrop');
      };
    })(this));
    this._eventInput.on('compare_frame_a_current_session_updated', (function(_this) {
      return function(ev) {
        _this.left_session = ev.sess;
        return _this.redrawPictureFrameA(ev.sess);
      };
    })(this));
    this._eventInput.on('compare_frame_b_current_session_updated', (function(_this) {
      return function(ev) {
        _this.right_session = ev.sess;
        return _this.redrawPictureFrameB(ev.sess);
      };
    })(this));
    this._eventInput.on('photo_reindexed', (function(_this) {
      return function() {
        _this.left_session = Session.currentSession;
        return _this.right_session = Session.currentSession;
      };
    })(this));
    this._eventInput.on('current_photo_fields_changed', (function(_this) {
      return function() {
        _.each(_this.leftFrameData, function(data) {
          if (data.photo.getUniqId() === Session.currentPhoto.getUniqId()) {
            data.subtitle.angle.setContent("<strong>Angle:</strong>&nbsp;" + Session.currentPhoto.angle);
            return data.subtitle.taken.setContent("<strong>Taken:</strong>&nbsp;" + Session.currentPhoto.taken_for);
          }
        });
        return _.each(_this.rightFrameData, function(data) {
          if (data.photo.getUniqId() === Session.currentPhoto.getUniqId()) {
            data.subtitle.angle.setContent("<strong>Angle:</strong>&nbsp;" + Session.currentPhoto.angle);
            return data.subtitle.taken.setContent("<strong>Taken:</strong>&nbsp;" + Session.currentPhoto.taken_for);
          }
        });
      };
    })(this));
    this._eventInput.on("compare_left_frame_scrollview_pos_changed", (function(_this) {
      return function(opts) {
        if (_this.leftFrameData[opts.index]) {
          _this.selectorSection.selectedLeftPhoto = _this.leftFrameData[opts.index].photo;
          return _this.selectorSection.updateMatchBtn();
        }
      };
    })(this));
    this._eventInput.on("compare_right_frame_scrollview_pos_changed", (function(_this) {
      return function(opts) {
        if (_this.rightFrameData[opts.index]) {
          _this.selectorSection.selectedRightPhoto = _this.rightFrameData[opts.index].photo;
          return _this.selectorSection.updateMatchBtn();
        }
      };
    })(this));
    return content;
  };

  comparePage.prototype.redrawPictureFrameA = function(sess) {
    if (sess) {
      this.leftFrameData = [];
      if (Session.currentClient) {
        _.each(Session.currentClient.photosInSession(sess), (function(_this) {
          return function(photo, key) {
            return createLeftFrameData.call(_this, photo);
          };
        })(this));
      }
      this.leftFrame = new PictureFrame({
        title: 'Frame A',
        data: this.leftFrameData,
        id: 'compare_left_frame'
      });
      this.leftFrameRenderer.show(this.leftFrame);
      this.selectorSection.selectedLeftPhoto = Session.currentClient.latestPicture(this.left_session);
      return this.selectorSection.updateMatchBtn();
    }
  };

  comparePage.prototype.redrawPictureFrameB = function(sess) {
    if (sess) {
      this.rightFrameData = [];
      if (Session.currentClient) {
        _.each(Session.currentClient.photosInSession(sess), (function(_this) {
          return function(photo, key) {
            return createRightFrameData.call(_this, photo);
          };
        })(this));
      }
      this.rightFrame = new PictureFrame({
        title: 'Frame B',
        data: this.rightFrameData,
        id: 'compare_right_frame'
      });
      this.rightFrameRenderer.show(this.rightFrame);
      this.selectorSection.selectedRightPhoto = Session.currentClient.latestPicture(this.right_session);
      return this.selectorSection.updateMatchBtn();
    }
  };

  return comparePage;

})(Fa.View);


},{}],115:[function(require,module,exports){
var ActionButtons, FirstVisit, LastVisit, ProfileSection, dashboardPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

LastVisit = Fa.Components.Dashboard.last_treatment;

FirstVisit = Fa.Components.Dashboard.first_visit;

ActionButtons = Fa.Components.Dashboard.action_buttons;

ProfileSection = Fa.Elements.Dashboard.profile_section;

module.exports = dashboardPage = (function(_super) {
  var _createLayouts, _createLogoCol;

  __extends(dashboardPage, _super);

  dashboardPage.DEFAULT_OPTIONS = {};

  function dashboardPage(options) {
    dashboardPage.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer();
    _createLayouts.call(this);
    this.add(this.container);
  }

  _createLayouts = function() {
    var profileSection;
    this.columns = new Fa.FlexibleLayout({
      ratios: [8, 8, 10]
    });
    this.profileCol = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [15, 4, 4]
    });
    this.thirdCol = new Fa.ContainerSurf({
      classes: ['grey-bg']
    });
    this.thirdCol = _createLogoCol.call(this);
    profileSection = new ProfileSection();
    profileSection.pipe(this._eventOutput);
    this.profileCol.sequenceFrom([profileSection, new LastVisit(), new FirstVisit()]);
    this.columns.sequenceFrom([this.profileCol, new ActionButtons(), this.thirdCol]);
    return this.container.add(this.columns);
  };

  _createLogoCol = function() {
    return new Fa.WrappedSurface({
      content: '<img src="images/side-logo-trimmed.png"/>',
      size: [true, true]
    });
  };

  return dashboardPage;

})(Fa.View);


},{}],116:[function(require,module,exports){
var Btn, ClientHeader, ResultHeader, experiPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Btn = Fa.Elements.Checklist.confirm_btn;

ClientHeader = Fa.Components.Result.client_header;

ResultHeader = Fa.Components.Checklist.result_header;

module.exports = experiPage = (function(_super) {
  __extends(experiPage, _super);

  experiPage.DEFAULT_OPTIONS = {};

  function experiPage(options) {
    experiPage.__super__.constructor.call(this, options);
    this.clickZone = new Fa.Surface({
      size: [100, 100],
      properties: {
        backgroundColor: 'red',
        cursor: 'pointer'
      }
    });
    this.clickZone.on('click', function() {
      return Dispatcher.emit('page_change', {
        to: 'Snap'
      });
    });
    this.container = new Fa.CContainer({
      size: [void 0, void 0],
      properties: {
        backgroundColor: 'white'
      }
    });
    this.container.addToBottom(this.clickZone);
    this.add(this.container);
  }

  experiPage.prototype.afterLoad = function() {
    return this.container.addToCenter(new ClientHeader);
  };

  return experiPage;

})(Fa.CView);


},{}],117:[function(require,module,exports){
var AsLink, loginPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

AsLink = Fa.Behaviors.AsLink;

module.exports = loginPage = (function(_super) {
  var _createLayouts;

  __extends(loginPage, _super);

  loginPage.DEFAULT_OPTIONS = {};

  function loginPage(options) {
    loginPage.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer();
    _createLayouts.call(this);
    this.add(this.container);
  }

  loginPage.prototype.afterLoad = function() {
    this.username.setValue('');
    return this.password.setValue('');
  };

  _createLayouts = function() {
    var login, loginText, modifier, radius;
    login = new Fa.ImageSurf({
      content: 'images/login_page.png'
    });
    this.container.add(login);
    this.username = new Fa.InputSurf({
      size: [240, 50],
      name: 'inputSurface',
      placeholder: 'Username',
      value: '',
      type: 'text',
      properties: {
        background: 'none',
        lineHeight: '30px',
        fontSize: '30px'
      }
    });
    modifier = new Fa.Modifier({
      opacity: 0.8
    });
    this.container.add(modifier).add(Fa.translateBy(650, 215, 0)).add(this.username);
    this.password = new Fa.InputSurf({
      size: [240, 50],
      name: 'inputSurface',
      placeholder: 'Password',
      value: '',
      type: 'password',
      properties: {
        background: 'none',
        lineHeight: '30px',
        fontSize: '30px'
      }
    });
    modifier = new Fa.Modifier({
      opacity: 0.8
    });
    this.container.add(modifier).add(Fa.translateBy(650, 265, 0)).add(this.password);
    radius = '30px';
    loginText = new Fa.Surface({
      size: [330, 35],
      content: '<strong>Login</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#fff',
        textAlign: 'center',
        fontSize: '23px'
      }
    });
    this.clickZone = new Fa.Surface({
      size: [330, 35],
      properties: {
        cursor: 'pointer',
        backgroundColor: '#8A8A8A',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    this.clickZone.setActive = (function(_this) {
      return function() {
        return _this.clickZone.setProperties({
          backgroundColor: '#fff'
        });
      };
    })(this);
    this.clickZone.setInactive = (function(_this) {
      return function() {
        return _this.clickZone.setProperties({
          backgroundColor: '#8A8A8A'
        });
      };
    })(this);
    new AsLink(this.clickZone, void 0, (function() {
      var authenticated, password, username;
      username = this.username.getValue();
      password = this.password.getValue();
      authenticated = Stores.Consultant.login(username, password);
      return authenticated.done(function(val) {
        if (val) {
          return Dispatcher.emit('page_change', {
            to: 'Client'
          });
        } else {
          return alert('Invalid Username/Password');
        }
      });
    }).bind(this));
    this.container.add(Fa.translateBy(630, 337, 0)).add(loginText);
    return this.container.add(Fa.opaqueBy(0.3)).add(Fa.translateBy(630, 330, 0)).add(this.clickZone);
  };

  return loginPage;

})(Fa.View);


},{}],118:[function(require,module,exports){
var BrowseHeader, Hamburger, Header, Numpad, PictureFrame, SelectorSection, VisitInfo, microPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hamburger = Fa.Elements.Common.hamburger;

Header = Fa.Elements.Common.header;

VisitInfo = Fa.Elements.Snap.visit_info;

PictureFrame = Fa.Elements.Snap.picture_frame;

BrowseHeader = Fa.Elements.Snap.browse_header;

Numpad = Fa.Components.Common.session_numpad;

SelectorSection = Fa.Components.Micro.selector_section;

module.exports = microPage = (function(_super) {
  var bindValuesLeftFrame, bindValuesRightFrame, createContent, createLeftFrameData, createPanel, createRightFrameData, createSubtitle, hookEvents, init;

  __extends(microPage, _super);

  microPage.DEFAULT_OPTIONS = {};

  function microPage(options) {
    microPage.__super__.constructor.call(this, options);
    this.leftFramePos = null;
    this.container = new Fa.CContainer();
    Dispatcher.pipe(this._eventInput);
    init.call(this);
    hookEvents.call(this);
    this.add(this.container);
    window.snapPage = this;
  }

  hookEvents = function() {
    Fa.Timer.setInterval((function(_this) {
      return function() {
        var err;
        try {
          if (Session.currentClient && Session.currentPhoto) {
            return _this.doubleTapBuffer = Session.currentPhoto.getUniqId();
          }
        } catch (_error) {
          err = _error;
          return console.log(err);
        }
      };
    })(this), 2000);
    this._eventInput.on("left_frame_double_tapped", (function(_this) {
      return function() {
        var id;
        if (Session.currentPhoto) {
          id = Session.currentPhoto.getUniqId();
          if (id === _this.doubleTapBuffer) {
            return Dispatcher.emit('show_full_picture');
          }
        }
      };
    })(this));
    this._eventInput.on("right_frame_double_tapped", (function(_this) {
      return function() {
        var id;
        if (Session.currentPhoto) {
          id = Session.currentPhoto.getUniqId();
          if (id === _this.doubleTapBuffer) {
            return Dispatcher.emit('show_full_picture');
          }
        }
      };
    })(this));
    this._eventInput.on("micro_left_frame_scrollview_pos_changed", (function(_this) {
      return function(opts) {
        var error;
        try {
          _this.leftFramePos = _this.leftFrameData[opts.index].photo.timestamp.toString();
          Session.setCurrentPhoto(_this.leftFrameData[opts.index].photo);
          return bindValuesLeftFrame.call(_this);
        } catch (_error) {
          error = _error;
          return console.log(error);
        }
      };
    })(this));
    this._eventInput.on("micro_right_frame_scrollview_pos_changed", (function(_this) {
      return function(opts) {
        var error;
        try {
          Session.setCurrentPhoto(_this.rightFrameData[opts.index].photo);
          return bindValuesRightFrame.call(_this);
        } catch (_error) {
          error = _error;
          return console.log(error);
        }
      };
    })(this));
    return this._eventInput.on('micro_current_photo_fields_changed', (function(_this) {
      return function() {
        _.each(_this.leftFrameData, function(data) {
          if (data.photo.getUniqId() === Session.currentPhoto.getUniqId()) {
            data.subtitle.angle.setContent("<strong>Angle:</strong>&nbsp;" + Session.currentPhoto.angle);
            return data.subtitle.taken.setContent("<strong>Taken:</strong>&nbsp;" + Session.currentPhoto.taken_for);
          }
        });
        return _.each(_this.rightFrameData, function(data) {
          if (data.photo.getUniqId() === Session.currentPhoto.getUniqId()) {
            data.subtitle.angle.setContent("<strong>Angle:</strong>&nbsp;" + Session.currentPhoto.angle);
            return data.subtitle.taken.setContent("<strong>Taken:</strong>&nbsp;" + Session.currentPhoto.taken_for);
          }
        });
      };
    })(this));
  };

  microPage.prototype.afterLoad = function() {
    this.leftFramePos = null;
    return Fa.Timer.setTimeout((function(_this) {
      return function() {
        Session.setCurrentSession(Session.currentClient.session, false);
        _this.visitInfo.updateInfo();
        return _this.redrawPictureFrames();
      };
    })(this), 1000);
  };

  microPage.prototype.pageExit = function() {
    if (this.leftFrame) {
      this.leftFrame.deregister();
    }
    if (this.rightFrame) {
      return this.rightFrame.deregister();
    }
  };

  init = function() {
    this.panel = createPanel.call(this);
    this.content = createContent.call(this);
    this.columns = new Fa.FlexibleLayout({
      ratios: [0.26, 0.74]
    });
    this.columns.sequenceFrom([this.panel, this.content]);
    return this.container.addToCenter(this.columns);
  };

  createPanel = function() {
    var panel, rows;
    this.hamContainer = new Fa.CContainer();
    this.hamburger = new Hamburger();
    this.hamContainer.add(this.hamburger);
    this.numPad = new Numpad({
      boxSize: [260, 300],
      dimension: [3, 4],
      id: 'micro'
    });
    this.myImage = new Fa.ImageSurf({
      size: [266, void 0],
      content: 'images/face.png',
      properties: {
        border: '5px solid #555'
      }
    });
    panel = new Fa.CContainer({
      properties: {
        backgroundColor: '#6bb4d8'
      }
    });
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [10, 6, 10, 60, 55]
    });
    this.visitInfo = new VisitInfo();
    rows.sequenceFrom([
      this.hamContainer, new Header({
        title: 'MICRO'
      }), this.visitInfo, this.myImage, this.numPad
    ]);
    panel.add(rows);
    return panel;
  };

  createSubtitle = function(angleData, takenData) {
    var angle, subtitle, subtitleContainer, taken;
    subtitleContainer = new Fa.CContainer();
    subtitle = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1]
    });
    angle = new Fa.WrappedSurface({
      content: "<strong>Angle:</strong>&nbsp;" + angleData,
      properties: {
        color: '#333',
        pointerEvents: 'none',
        textAlign: 'center'
      }
    });
    taken = new Fa.WrappedSurface({
      content: "<strong>Taken:</strong>&nbsp;" + takenData,
      properties: {
        color: '#333',
        pointerEvents: 'none',
        textAlign: 'center'
      }
    });
    subtitle.sequenceFrom([angle, taken]);
    subtitleContainer.angle = angle.surface;
    subtitleContainer.taken = taken.surface;
    subtitleContainer.addToCenter(subtitle);
    return subtitleContainer;
  };

  createLeftFrameData = function(photo) {
    return this.leftFrameData.push({
      photo: photo,
      subtitle: createSubtitle(photo.angle, photo.taken_for)
    });
  };

  createRightFrameData = function(photo) {
    return this.rightFrameData.push({
      photo: photo,
      subtitle: createSubtitle(photo.angle, photo.taken_for)
    });
  };

  createContent = function() {
    var content, selSection;
    content = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [72, 28]
    });
    this.renderer = new Fa.RenderCtrl({
      overlap: false
    });
    selSection = new SelectorSection();
    content.sequenceFrom([this.renderer, selSection]);
    this._eventInput.on('session_changed:current_client', (function(_this) {
      return function() {
        return _this.visitInfo.updateInfo();
      };
    })(this));
    this._eventInput.on('micro_current_session_updated', (function(_this) {
      return function(res) {
        Session.setCurrentSession(res.sess, false);
        _this.visitInfo.updateInfo();
        return _this.redrawPictureFrames();
      };
    })(this));
    this._eventInput.on('photo_reindexed', (function(_this) {
      return function() {};
    })(this));
    this._eventInput.on('micro_redraw_frames', (function(_this) {
      return function() {
        _this.redrawPictureFrames();
        return Dispatcher.emit('update_micro_frame_position');
      };
    })(this));
    this._eventInput.on('update_micro_frame_position', (function(_this) {
      return function() {
        return _this.rightFrame.updateFramePosition();
      };
    })(this));
    return content;
  };

  microPage.prototype.redrawPictureFrames = function() {
    var err, frames, framesContainer;
    if (!Session.currentPhoto) {
      if (Session.currentClient) {
        Session.setCurrentPhoto(Session.currentClient.microPhotosInSession(Session.currentSession)[0]);
      }
    }
    this.leftFrameData = [];
    this.rightFrameData = [];
    if (Session.currentClient) {
      _.each(Session.currentClient.microPhotosInSession(Session.currentSession), (function(_this) {
        return function(photo, key) {
          createLeftFrameData.call(_this, photo);
          return createRightFrameData.call(_this, photo);
        };
      })(this));
    }
    this.leftFrame = new PictureFrame({
      title: 'Frame A',
      data: this.leftFrameData,
      id: 'left_frame'
    });
    this.rightFrame = new PictureFrame({
      title: 'Frame B',
      data: this.rightFrameData,
      id: 'right_frame'
    });
    frames = new Fa.FlexibleLayout({
      ratios: [1, 1]
    });
    frames.sequenceFrom([this.leftFrame, this.rightFrame]);
    framesContainer = new Fa.CContainer();
    framesContainer.add(frames);
    this.renderer.show(framesContainer, void 0, function() {
      return $('.size-350-450').nailthumb({
        width: 350,
        height: 450,
        replaceAnimation: null
      });
    });
    bindValuesRightFrame.call(this);
    if (this.leftFramePos) {
      return this.leftFrame.updateFramePositionTo(this.leftFramePos);
    } else {
      try {
        if (Session.currentClient.microPhotosInSession()[0]) {
          return this.leftFramePos = Session.currentClient.microPhotosInSession()[0].timestamp.toString();
        }
      } catch (_error) {
        err = _error;
        return console.log(err);
      }
    }
  };

  bindValuesLeftFrame = function() {
    this.leftFrame.addBorder();
    this.rightFrame.removeBorder();
    if (Session.currentPhoto) {
      if (Session.currentPhoto.session.toString() !== Session.currentSession.toString()) {
        Session.setCurrentPhoto(Session.currentClient.microPhotosInSession(Session.currentSession)[0]);
      }
      return Dispatcher.emit('before_after_selector_section_change');
    }
  };

  bindValuesRightFrame = function() {
    this.rightFrame.addBorder();
    this.leftFrame.removeBorder();
    if (Session.currentPhoto) {
      if (Session.currentPhoto.session.toString() !== Session.currentSession.toString()) {
        Session.setCurrentPhoto(Session.currentClient.microPhotosInSession(Session.currentSession)[0]);
      }
      return Dispatcher.emit('before_after_selector_section_change');
    }
  };

  return microPage;

})(Fa.View);


},{}],119:[function(require,module,exports){
var ClientHeader, Hamburger, Header, SessionRow, resultPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hamburger = Fa.Elements.Common.hamburger;

Header = Fa.Elements.Common.header;

ClientHeader = Fa.Components.Result.client_header;

SessionRow = Fa.Components.Result.session_row;

module.exports = resultPage = (function(_super) {
  var createAllClientsSection, createClientItem, createContent, createCurrentClientSection, createPanel;

  __extends(resultPage, _super);

  resultPage.DEFAULT_OPTIONS = {};

  function resultPage(options) {
    var columns, container;
    resultPage.__super__.constructor.call(this, options);
    this.lockList = false;
    Dispatcher.pipe(this._eventInput);
    this.panelRenderer = new Fa.RenderCtrl({
      overlap: false
    });
    this.contentRenderer = new Fa.RenderCtrl({
      overlap: false
    });
    this._eventInput.on('update_client_filter_settings', (function(_this) {
      return function() {
        return Fa.Timer.setTimeout(function() {
          return _this.redrawPanel();
        }, 0);
      };
    })(this));
    this._eventInput.on('session_changed:current_client', (function(_this) {
      return function() {
        return Fa.Timer.setTimeout(function() {
          return _this.redrawPanel();
        }, 0);
      };
    })(this));
    this._eventInput.on('open_match_view_from_result_page', (function(_this) {
      return function(payload) {
        Dispatcher.emit('change_match_photos', {
          beforePic: payload.before,
          afterPic: payload.after,
          beforeDate: payload.beforeDate,
          afterDate: payload.afterDate
        });
        return Dispatcher.emit('show_match_picture');
      };
    })(this));
    this._eventInput.on('_resultPageClientSelected', (function(_this) {
      return function() {
        if (_this.lockList === false) {
          _this.lockList = true;
          return Fa.Timer.setTimeout(function() {
            var content, contentContainer;
            content = createContent.call(_this);
            contentContainer = new Fa.CContainer();
            contentContainer.add(Fa.translateXBy(-20)).add(content);
            return _this.contentRenderer.show(contentContainer);
          }, 0);
        }
      };
    })(this));
    this._eventInput.on('all_clients_list_last_tapped_item', (function(_this) {
      return function(obj) {
        var backpromise;
        _.each(_this.clientList, function(cl) {
          return cl.setProperties({
            backgroundColor: cl.originalColor
          });
        });
        backpromise = Stores.Consultant.fetchFromBackend(obj.item.client.Id);
        backpromise.done(function(data) {
          _this.currentPageClient = new Models.Client(obj.item.client.Id, 0, null, data);
          obj.item.setProperties({
            backgroundColor: '#fb9c05'
          });
          return _this.currentPageClient.clientFetchPromise.done(function() {
            return Dispatcher.emit('_resultPageClientSelected');
          });
        });
        return backpromise.fail(function(jqXHR, textStatus, errorThrown) {
          return alert("Error Connecting  Server " + errorThrown);
        });
      };
    })(this));
    columns = new Fa.FlexibleLayout({
      ratios: [0.26, 0.74]
    });
    columns.sequenceFrom([this.panelRenderer, this.contentRenderer]);
    container = new Fa.CContainer();
    this.clientHeader = new ClientHeader();
    this.rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 40]
    });
    this.rows.sequenceFrom([
      new Fa.Surface({
        properties: {
          background: 'rgba(5,5,5, 0.5)'
        }
      }), columns
    ]);
    container.addToCenter(this.rows);
    this.add(container);
  }

  resultPage.prototype.afterLoad = function() {
    return Fa.Timer.setTimeout((function(_this) {
      return function() {
        return _this.setResultToCurrentClient();
      };
    })(this), 1000);
  };

  resultPage.prototype.fetchFromBackend = function(query) {
    var fetchPromise;
    fetchPromise = $.ajax({
      url: "" + Conf.backend + "/clients_with_results",
      dataType: "json",
      async: true,
      data: query,
      type: 'GET'
    });
    return fetchPromise;
  };

  resultPage.prototype.redrawPanel = function() {
    var promise;
    this.panelRenderer.hide();
    this.clientList = [];
    promise = createPanel.call(this);
    return $.when(promise).done((function(_this) {
      return function(panel) {
        var panelContainer;
        _this.panel = panel;
        panelContainer = new Fa.CContainer();
        panelContainer.add(_this.panel);
        return _this.panelRenderer.show(panelContainer);
      };
    })(this));
  };

  createPanel = function() {
    var deferred, promise;
    this.hamContainer = new Fa.CContainer();
    this.hamburger = new Hamburger();
    this.hamContainer.add(this.hamburger);
    this.currentClientSection = createCurrentClientSection.call(this);
    promise = createAllClientsSection.call(this);
    deferred = $.Deferred();
    $.when(promise).done((function(_this) {
      return function(allClientsSection) {
        var panel, rows;
        _this.allClientsSection = allClientsSection;
        panel = new Fa.CContainer({
          properties: {
            background: '-webkit-linear-gradient(top,  #c89a58 0%,#aa2965 26%,#670c47 51%,#b23267 76%,#caad54 100%)'
          }
        });
        rows = new Fa.FlexibleLayout({
          direction: 1,
          ratios: [10, 25, 10, 126]
        });
        rows.sequenceFrom([_this.hamContainer, _this.currentClientSection, new ClientHeader, _this.allClientsSection]);
        panel.add(rows);
        return deferred.resolve(panel);
      };
    })(this));
    return deferred.promise();
  };

  createCurrentClientSection = function() {
    var clientLastVisit, clientName, cols, currentClientContainer, profilePhoto, profilePhotoContainer, rows1, rows2;
    cols = new Fa.FlexibleLayout({
      ratios: [4, 1, 5, 1]
    });
    clientName = new Fa.Surface({
      alignment: 'left',
      size: [true, true],
      content: "<strong>" + Session.currentClient.name + "</strong>",
      properties: {
        fontSize: '17px',
        color: 'black'
      }
    });
    clientLastVisit = new Fa.Surface({
      alignment: 'left',
      size: [true, true],
      content: "Last Visit: " + (Session.currentClient.lastVisit()),
      properties: {
        fontSize: '13px',
        color: 'black'
      }
    });
    rows2 = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [2, 2, 2, 2]
    });
    rows2.sequenceFrom([Fa.EmptyView(), clientName, clientLastVisit, Fa.EmptyView()]);
    profilePhotoContainer = new Fa.CContainer();
    profilePhoto = new Fa.ImageSurf({
      content: Session.currentClient.profilePic(),
      size: [84, 84],
      properties: {
        border: "6px solid rgba(255,255,255,0.8)",
        borderRadius: '50%'
      }
    });
    profilePhotoContainer.addToCenter(profilePhoto);
    rows1 = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 6, 1]
    });
    rows1.sequenceFrom([Fa.EmptyView(), profilePhotoContainer, Fa.EmptyView()]);
    cols.sequenceFrom([rows1, Fa.EmptyView(), rows2, Fa.EmptyView()]);
    currentClientContainer = new Fa.CContainer({
      properties: {
        cursor: 'pointer'
      }
    });
    currentClientContainer.add(cols);
    currentClientContainer.on('click', this.setResultToCurrentClient.bind(this));
    return currentClientContainer;
  };

  resultPage.prototype.setResultToCurrentClient = function() {
    return Fa.Timer.setTimeout((function(_this) {
      return function() {
        _this.currentPageClient = Session.currentClient;
        Dispatcher.emit('_resultPageClientSelected');
        return _.each(_this.clientList, function(cl) {
          return cl.setProperties({
            backgroundColor: cl.originalColor
          });
        });
      };
    })(this), 0);
  };

  createAllClientsSection = function() {
    var deferred, promise, query, runningNum, scrollContainer, scrollItems, scrollView, windowHeight, windowWidth;
    windowWidth = Conf.screenWidth * 0.26;
    windowHeight = Conf.screenHeight * 126 / 171;
    scrollView = new Fa.EasyScrollview({
      containerSize: [windowWidth, windowHeight],
      itemSize: [windowWidth, 80],
      direction: 1,
      paginate: false,
      scrollBarThickness: 11,
      scrollBarOpacity: 0.5,
      scrollBarColor: '#fff',
      scrollContainerOpacity: 0,
      id: 'all_clients_list',
      clickOffset: 218
    });
    scrollContainer = new Fa.CContainer({
      size: [windowWidth, windowHeight],
      properties: {
        pointerEvents: 'none'
      }
    });
    scrollContainer.addToBottom(scrollView);
    scrollItems = [];
    runningNum = 0;
    query = {
      fav: Session.clientFilterFav,
      pigmentation: Session.clientFilterPigmentation,
      acne: Session.clientFilterAcne,
      sensitive: Session.clientFilterSensitive,
      aging: Session.clientFilterAging,
      no_of_result: Session.clientFilterNoOfResult
    };
    promise = this.fetchFromBackend(query);
    deferred = $.Deferred();
    promise.done((function(_this) {
      return function(res) {
        var allContainer;
        _.each(res, function(client) {
          if (client.name === Session.currentClient.name) {
            return;
          }
          if (runningNum % 2 === 1) {
            scrollItems.push(createClientItem.call(_this, client, 0));
          } else {
            scrollItems.push(createClientItem.call(_this, client, 1));
          }
          return runningNum += 1;
        });
        scrollView.addItems(scrollItems);
        scrollContainer.addToRight(scrollView.getScrollbarContainer());
        allContainer = new Fa.CContainer({
          size: [windowWidth, windowHeight]
        });
        allContainer.add(Fa.translateZBy(3)).add(scrollContainer);
        return deferred.resolve(allContainer);
      };
    })(this));
    return deferred.promise();
  };

  createClientItem = function(client, evenOrOdd) {
    var clientLastVisit, clientName, cols, container, text, windowWidth;
    windowWidth = Conf.screenWidth * 0.26;
    clientName = new Fa.Surface({
      alignment: 'left',
      size: [true, true],
      content: "<strong>" + client.name + "</strong>",
      properties: {
        fontSize: '17px',
        color: 'white'
      }
    });
    clientLastVisit = new Fa.Surface({
      alignment: 'left',
      size: [true, true],
      content: "Last Visit: " + (client.updatedAt.substr(0, client.updatedAt.indexOf('T'))),
      properties: {
        fontSize: '13px',
        color: 'white'
      }
    });
    text = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 2, 2, 1]
    });
    text.sequenceFrom([Fa.EmptyView(), clientName, clientLastVisit, Fa.EmptyView()]);
    cols = new Fa.FlexibleLayout({
      ratios: [1, 8, 2]
    });
    cols.sequenceFrom([Fa.EmptyView(), text, Fa.EmptyView()]);
    windowWidth = Conf.screenWidth * 0.26;
    if (evenOrOdd === 0) {
      container = new Fa.CContainer({
        size: [265, 80],
        properties: {
          cursor: 'pointer'
        },
        backgroundColor: 'rgba(255,255,255, 0)'
      });
      container.originalColor = 'rgba(255,255,255, 0)';
    } else {
      container = new Fa.CContainer({
        size: [265, 80],
        properties: {
          cursor: 'pointer',
          backgroundColor: 'rgba(255,255,255, 0.3)'
        }
      });
      container.originalColor = 'rgba(255,255,255, 0.3)';
    }
    container.add(cols);
    container.client = client;
    this.clientList.push(container);
    return container;
  };

  createContent = function() {
    var i, listView, listViewItems, sessionRow, windowHeight, windowWidth;
    windowWidth = Conf.screenWidth * 0.70;
    windowHeight = Conf.screenHeight;
    listViewItems = [];
    listView = new Fa.EasyScrollview({
      containerSize: [windowWidth, windowHeight],
      itemSize: [windowWidth, 500],
      direction: 1,
      paginate: false,
      scrollBarThickness: 11,
      scrollBarOpacity: 0.5,
      scrollBarColor: '#555',
      scrollContainerOpacity: 0,
      receiveYDelta: true,
      id: 'session_list_view',
      noScrollBar: true
    });
    i = this.currentPageClient.sessions.length - 1;
    while (i >= 0) {
      if (this.currentPageClient.getMatchesBySession(i + 1).length > 0) {
        sessionRow = new SessionRow({
          width: windowWidth,
          height: 500,
          data: {
            client: this.currentPageClient,
            session: this.currentPageClient.sessions[i],
            sess_no: i + 1
          }
        });
        sessionRow.scrollview.pipe(listView);
        sessionRow.i_am_here = 'row';
        listViewItems.push(sessionRow);
      }
      i--;
    }
    listView.addItems(listViewItems);
    Fa.Timer.setTimeout((function(_this) {
      return function() {
        return _this.lockList = false;
      };
    })(this), 500);
    return listView;
  };

  return resultPage;

})(Fa.View);


},{}],120:[function(require,module,exports){
var AsLink, settingPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

AsLink = Fa.Behaviors.AsLink;

module.exports = settingPage = (function(_super) {
  var fail1, gotFS1, gotFile1, gotFileEntry1, str, _createLayouts;

  __extends(settingPage, _super);

  settingPage.DEFAULT_OPTIONS = {};

  str = '';

  function settingPage(options) {
    settingPage.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer();
    _createLayouts.call(this);
    this.add(this.container);
  }

  settingPage.prototype.afterLoad = function() {
    this.backend.setValue(Conf.backend);
    this.screenWidth.setValue(Conf.screenWidth);
    this.screenHeight.setValue(Conf.screenHeight);
    return this.imageServerURL.setValue(Conf.imageServerURL);
  };

  _createLayouts = function() {
    var backendText, closeText, imageServerURLText, modifier, radius, screenHeightText, screenWidthText, setting, settingText;
    setting = new Fa.ImageSurf({
      content: 'images/bg.png'
    });
    this.container.add(setting);
    this.backend = new Fa.InputSurf({
      size: [340, 50],
      name: 'inputSurface',
      placeholder: 'Back End',
      value: '',
      type: 'text',
      properties: {
        background: 'none',
        lineHeight: '30px',
        fontSize: '30px'
      }
    });
    modifier = new Fa.Modifier({
      opacity: 0.8
    });
    this.container.add(modifier).add(Fa.translateBy(350, 50, 0)).add(this.backend);
    this.screenWidth = new Fa.InputSurf({
      size: [240, 50],
      name: 'inputSurface',
      placeholder: 'Screen Width',
      value: '',
      type: 'text',
      properties: {
        background: 'none',
        lineHeight: '30px',
        fontSize: '30px'
      }
    });
    modifier = new Fa.Modifier({
      opacity: 0.8
    });
    this.container.add(modifier).add(Fa.translateBy(350, 100, 0)).add(this.screenWidth);
    this.screenHeight = new Fa.InputSurf({
      size: [240, 50],
      name: 'inputSurface',
      placeholder: 'Screen Height',
      value: '',
      type: 'text',
      properties: {
        background: 'none',
        lineHeight: '30px',
        fontSize: '30px'
      }
    });
    modifier = new Fa.Modifier({
      opacity: 0.8
    });
    this.container.add(modifier).add(Fa.translateBy(350, 150, 0)).add(this.screenHeight);
    this.imageServerURL = new Fa.InputSurf({
      size: [540, 50],
      name: 'inputSurface',
      placeholder: 'Image Server',
      value: '',
      type: 'text',
      properties: {
        background: 'none',
        lineHeight: '30px',
        fontSize: '30px'
      }
    });
    modifier = new Fa.Modifier({
      opacity: 0.8
    });
    this.container.add(modifier).add(Fa.translateBy(350, 200, 0)).add(this.imageServerURL);
    radius = '30px';
    settingText = new Fa.Surface({
      size: [140, 35],
      content: '<strong>Save</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#333',
        textAlign: 'center',
        fontSize: '23px'
      }
    });
    closeText = new Fa.Surface({
      size: [140, 35],
      content: '<strong>Close</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#333',
        textAlign: 'center',
        fontSize: '23px'
      }
    });
    backendText = new Fa.Surface({
      size: [240, 50],
      content: '<strong>Back End</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#333',
        textAlign: 'left',
        fontSize: '23px'
      }
    });
    screenWidthText = new Fa.Surface({
      size: [240, 50],
      content: '<strong>Screen Width</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#333',
        textAlign: 'left',
        fontSize: '23px'
      }
    });
    screenHeightText = new Fa.Surface({
      size: [240, 50],
      content: '<strong>Screen Height</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#333',
        textAlign: 'left',
        fontSize: '23px'
      }
    });
    imageServerURLText = new Fa.Surface({
      size: [240, 50],
      content: '<strong>Image Server</strong>',
      properties: {
        pointerEvents: 'none',
        color: '#333',
        textAlign: 'left',
        fontSize: '23px'
      }
    });
    this.clickZone = new Fa.Surface({
      size: [330, 35],
      properties: {
        cursor: 'pointer',
        backgroundColor: '#000',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    this.clickZone.setActive = (function(_this) {
      return function() {
        return _this.clickZone.setProperties({
          backgroundColor: '#fff'
        });
      };
    })(this);
    this.clickZone.setInactive = (function(_this) {
      return function() {
        return _this.clickZone.setProperties({
          backgroundColor: '#000'
        });
      };
    })(this);
    new AsLink(this.clickZone, void 0, (function() {
      var backend, imageServerURL, screenHeight, screenWidth;
      imageServerURL = this.imageServerURL.getValue();
      backend = this.backend.getValue();
      screenWidth = this.screenWidth.getValue();
      screenHeight = this.screenHeight.getValue();
      str = Stores.Consultant.setting(backend, screenWidth, screenHeight, imageServerURL);
      return window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS1, fail1);
    }).bind(this));
    this.clickZone1 = new Fa.Surface({
      size: [330, 35],
      properties: {
        cursor: 'pointer',
        backgroundColor: '#000',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    this.clickZone1.setActive = (function(_this) {
      return function() {
        return _this.clickZone1.setProperties({
          backgroundColor: '#fff'
        });
      };
    })(this);
    this.clickZone1.setInactive = (function(_this) {
      return function() {
        return _this.clickZone1.setProperties({
          backgroundColor: '#000'
        });
      };
    })(this);
    new AsLink(this.clickZone1, void 0, (function() {
      return Dispatcher.emit('page_change', {
        to: 'Client'
      });
    }).bind(this));
    this.container.add(Fa.translateBy(360, 337, 0)).add(settingText);
    this.container.add(Fa.translateBy(360, 387, 0)).add(closeText);
    this.container.add(Fa.translateBy(100, 55, 0)).add(backendText);
    this.container.add(Fa.translateBy(100, 105, 0)).add(screenWidthText);
    this.container.add(Fa.translateBy(100, 155, 0)).add(screenHeightText);
    this.container.add(Fa.translateBy(100, 205, 0)).add(imageServerURLText);
    this.container.add(Fa.opaqueBy(0.3)).add(Fa.translateBy(330, 330, 0)).add(this.clickZone);
    return this.container.add(Fa.opaqueBy(0.3)).add(Fa.translateBy(330, 380, 0)).add(this.clickZone1);
  };

  gotFS1 = function(fileSystem) {
    var spath;
    spath = fileSystem.root.toURL() + "/" + "setting.txt";
    fileSystem.root.getFile("setting.txt", {
      create: false,
      exclusive: false
    }, gotFileEntry1, fail1);
  };

  gotFileEntry1 = function(fileEntry) {
    fileEntry.createWriter(gotFile1, fail1);
  };

  gotFile1 = function(writer) {
    writer.onwriteend = function(evt) {
      writer.onwriteend = function(evt) {
        return alert("Saved successfully");
      };
      return writer.write(str);
    };
    return writer.truncate(0);
  };

  fail1 = function(error) {
    alert("error occured");
    if (error.code === FileError.NOT_FOUND_ERR) {
      alert(error.code.toString() + ":config file not found");
    } else if (error.code === FileError.SECURITY_ERR) {
      alert("security error");
    } else {
      alert(error.code);
    }
  };

  return settingPage;

})(Fa.View);


},{}],121:[function(require,module,exports){
var BrowseHeader, Hamburger, Header, Numpad, PictureFrame, QuickLinks, SelBeforeAfter, SelectorSection, VisitInfo, snapPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hamburger = Fa.Elements.Common.hamburger;

Header = Fa.Elements.Common.header;

VisitInfo = Fa.Elements.Snap.visit_info;

PictureFrame = Fa.Elements.Snap.picture_frame;

BrowseHeader = Fa.Elements.Snap.browse_header;

Numpad = Fa.Components.Common.session_numpad;

SelBeforeAfter = Fa.Components.Snap.sel_before_after;

SelectorSection = Fa.Components.Snap.selector_section;

QuickLinks = Fa.Components.Snap.quick_links;

module.exports = snapPage = (function(_super) {
  var bindValuesLeftFrame, bindValuesRightFrame, createContent, createLeftFrameData, createPanel, createRightFrameData, createSubtitle, hookEvents, init;

  __extends(snapPage, _super);

  snapPage.DEFAULT_OPTIONS = {};

  function snapPage(options) {
    snapPage.__super__.constructor.call(this, options);
    this.leftFramePos = null;
    this.container = new Fa.CContainer();
    Dispatcher.pipe(this._eventInput);
    init.call(this);
    hookEvents.call(this);
    this.add(this.container);
    window.snapPage = this;
  }

  hookEvents = function() {
    Fa.Timer.setInterval((function(_this) {
      return function() {
        var err;
        try {
          if (Session.currentClient && Session.currentPhoto) {
            return _this.doubleTapBuffer = Session.currentPhoto.getUniqId();
          }
        } catch (_error) {
          err = _error;
          return console.log(err);
        }
      };
    })(this), 2000);
    this._eventInput.on("left_frame_double_tapped", (function(_this) {
      return function() {
        var id;
        if (Session.currentPhoto) {
          id = Session.currentPhoto.getUniqId();
          if (id === _this.doubleTapBuffer) {
            return Dispatcher.emit('show_full_picture');
          }
        }
      };
    })(this));
    this._eventInput.on("right_frame_double_tapped", (function(_this) {
      return function() {
        var id;
        if (Session.currentPhoto) {
          id = Session.currentPhoto.getUniqId();
          if (id === _this.doubleTapBuffer) {
            return Dispatcher.emit('show_full_picture');
          }
        }
      };
    })(this));
    this._eventInput.on("left_frame_scrollview_pos_changed", (function(_this) {
      return function(opts) {
        var error;
        try {
          _this.leftFramePos = _this.leftFrameData[opts.index].photo.timestamp.toString();
          Session.setCurrentPhoto(_this.leftFrameData[opts.index].photo);
          return bindValuesLeftFrame.call(_this);
        } catch (_error) {
          error = _error;
          return console.log(error);
        }
      };
    })(this));
    this._eventInput.on("right_frame_scrollview_pos_changed", (function(_this) {
      return function(opts) {
        var error;
        try {
          Session.setCurrentPhoto(_this.rightFrameData[opts.index].photo);
          return bindValuesRightFrame.call(_this);
        } catch (_error) {
          error = _error;
          return console.log(error);
        }
      };
    })(this));
    this._eventInput.on('snap_browser_content_last_tapped_item', function(obj) {
      Session.setCurrentPhoto(obj.item.photo);
      Dispatcher.emit('update_frame_position');
      Dispatcher.emit('hide_frontdrop', {
        "for": 'browse_snap'
      });
      return Dispatcher.emit('hide_backdrop');
    });
    return this._eventInput.on('current_photo_fields_changed', (function(_this) {
      return function() {
        _.each(_this.leftFrameData, function(data) {
          if (data.photo.getUniqId() === Session.currentPhoto.getUniqId()) {
            data.subtitle.angle.setContent("<strong>Angle:</strong>&nbsp;" + Session.currentPhoto.angle);
            return data.subtitle.taken.setContent("<strong>Taken:</strong>&nbsp;" + Session.currentPhoto.taken_for);
          }
        });
        return _.each(_this.rightFrameData, function(data) {
          if (data.photo.getUniqId() === Session.currentPhoto.getUniqId()) {
            data.subtitle.angle.setContent("<strong>Angle:</strong>&nbsp;" + Session.currentPhoto.angle);
            return data.subtitle.taken.setContent("<strong>Taken:</strong>&nbsp;" + Session.currentPhoto.taken_for);
          }
        });
      };
    })(this));
  };

  snapPage.prototype.afterLoad = function() {
    this.leftFramePos = null;
    return Fa.Timer.setTimeout((function(_this) {
      return function() {
        Session.setCurrentSession(Session.currentClient.session, false);
        Dispatcher.emit('update_snap_browser_content');
        _this.visitInfo.updateInfo();
        return _this.redrawPictureFrames();
      };
    })(this), 1000);
  };

  snapPage.prototype.pageExit = function() {
    if (this.leftFrame) {
      this.leftFrame.deregister();
    }
    if (this.rightFrame) {
      return this.rightFrame.deregister();
    }
  };

  init = function() {
    this.panel = createPanel.call(this);
    this.content = createContent.call(this);
    this.columns = new Fa.FlexibleLayout({
      ratios: [0.26, 0.74]
    });
    this.columns.sequenceFrom([this.panel, this.content]);
    this.rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 40]
    });
    this.rows.sequenceFrom([
      new Fa.Surface({
        properties: {
          background: 'rgba(5,5,5, 0.5)'
        }
      }), this.columns
    ]);
    return this.container.addToCenter(this.rows);
  };

  createPanel = function() {
    var panel, rows;
    this.hamContainer = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    this.hamburger = new Hamburger();
    this.hamContainer.add(this.hamburger);
    this.selBefAft = new SelBeforeAfter();
    this.numPad = new Numpad({
      boxSize: [260, 300],
      dimension: [3, 4],
      id: 'snap'
    });
    this.quickLinks = new QuickLinks();
    panel = new Fa.CContainer({
      properties: {
        background: '-webkit-linear-gradient(top,  #c89a58 0%,#aa2965 26%,#670c47 51%,#b23267 76%,#caad54 100%)'
      }
    });
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [10, 10, 15, 25, 10, 60, 20]
    });
    this.visitInfo = new VisitInfo();
    rows.sequenceFrom([
      this.hamContainer, new Header({
        title: 'SNAP'
      }), this.visitInfo, this.selBefAft, new BrowseHeader(), this.numPad, this.quickLinks
    ]);
    panel.add(rows);
    return panel;
  };

  createSubtitle = function(angleData, takenData) {
    var angle, subtitle, subtitleContainer, taken;
    subtitleContainer = new Fa.CContainer();
    subtitle = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1]
    });
    angle = new Fa.WrappedSurface({
      content: "<strong>Angle:</strong>&nbsp;" + angleData,
      properties: {
        color: '#fff',
        pointerEvents: 'none',
        textAlign: 'center'
      }
    });
    taken = new Fa.WrappedSurface({
      content: "<strong>Taken:</strong>&nbsp;" + takenData,
      properties: {
        color: '#fff',
        pointerEvents: 'none',
        textAlign: 'center'
      }
    });
    subtitle.sequenceFrom([angle, taken]);
    subtitleContainer.angle = angle.surface;
    subtitleContainer.taken = taken.surface;
    subtitleContainer.addToCenter(subtitle);
    return subtitleContainer;
  };

  createLeftFrameData = function(photo) {
    return this.leftFrameData.push({
      photo: photo,
      subtitle: createSubtitle(photo.angle, photo.taken_for)
    });
  };

  createRightFrameData = function(photo) {
    return this.rightFrameData.push({
      photo: photo,
      subtitle: createSubtitle(photo.angle, photo.taken_for)
    });
  };

  createContent = function() {
    var content, selSection;
    content = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [72, 28]
    });
    this.renderer = new Fa.RenderCtrl({
      overlap: false
    });
    selSection = new SelectorSection();
    content.sequenceFrom([this.renderer, selSection]);
    this._eventInput.on('session_changed:current_client', (function(_this) {
      return function() {
        return _this.visitInfo.updateInfo();
      };
    })(this));
    this._eventInput.on('snap_current_session_updated', (function(_this) {
      return function(res) {
        Session.setCurrentSession(res.sess, false);
        Dispatcher.emit('update_snap_browser_content');
        _this.visitInfo.updateInfo();
        return _this.redrawPictureFrames();
      };
    })(this));
    this._eventInput.on('photo_reindexed', (function(_this) {
      return function() {};
    })(this));
    this._eventInput.on('snap_redraw_frames', (function(_this) {
      return function() {
        _this.redrawPictureFrames();
        Dispatcher.emit('update_frame_position');
        return Dispatcher.emit('update_snap_browser_content');
      };
    })(this));
    this._eventInput.on('update_frame_position', (function(_this) {
      return function() {
        return _this.rightFrame.updateFramePosition();
      };
    })(this));
    return content;
  };

  snapPage.prototype.redrawPictureFrames = function() {
    var err, frames, framesContainer;
    if (!Session.currentPhoto) {
      if (Session.currentClient) {
        Session.setCurrentPhoto(Session.currentClient.snapPhotosInSession(Session.currentSession)[0]);
      }
    }
    this.leftFrameData = [];
    this.rightFrameData = [];
    if (Session.currentClient) {
      _.each(Session.currentClient.snapPhotosInSession(Session.currentSession), (function(_this) {
        return function(photo, key) {
          createLeftFrameData.call(_this, photo);
          return createRightFrameData.call(_this, photo);
        };
      })(this));
    }
    this.leftFrame = new PictureFrame({
      title: 'Frame A',
      data: this.leftFrameData,
      id: 'left_frame'
    });
    this.rightFrame = new PictureFrame({
      title: 'Frame B',
      data: this.rightFrameData,
      id: 'right_frame'
    });
    frames = new Fa.FlexibleLayout({
      ratios: [1, 1]
    });
    frames.sequenceFrom([this.leftFrame, this.rightFrame]);
    framesContainer = new Fa.CContainer();
    framesContainer.add(frames);
    this.renderer.show(framesContainer, void 0, function() {
      return $('.size-350-450').nailthumb({
        width: 350,
        height: 450,
        replaceAnimation: null
      });
    });
    bindValuesRightFrame.call(this);
    if (this.leftFramePos) {
      return this.leftFrame.updateFramePositionTo(this.leftFramePos);
    } else {
      try {
        if (Session.currentClient.snapPhotosInSession()[0]) {
          return this.leftFramePos = Session.currentClient.snapPhotosInSession()[0].timestamp.toString();
        }
      } catch (_error) {
        err = _error;
        return console.log(err);
      }
    }
  };

  bindValuesLeftFrame = function() {
    this.leftFrame.addBorder();
    this.rightFrame.removeBorder();
    if (Session.currentPhoto) {
      if (Session.currentPhoto.session.toString() !== Session.currentSession.toString()) {
        Session.setCurrentPhoto(Session.currentClient.snapPhotosInSession(Session.currentSession)[0]);
      }
      return Dispatcher.emit('before_after_selector_section_change');
    }
  };

  bindValuesRightFrame = function() {
    this.rightFrame.addBorder();
    this.leftFrame.removeBorder();
    if (Session.currentPhoto) {
      if (Session.currentPhoto.session.toString() !== Session.currentSession.toString()) {
        Session.setCurrentPhoto(Session.currentClient.snapPhotosInSession(Session.currentSession)[0]);
      }
      return Dispatcher.emit('before_after_selector_section_change');
    }
  };

  return snapPage;

})(Fa.View);


},{}],122:[function(require,module,exports){
var splashPage,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = splashPage = (function(_super) {
  __extends(splashPage, _super);

  splashPage.DEFAULT_OPTIONS = {};

  function splashPage(options) {
    var bg;
    splashPage.__super__.constructor.call(this, options);
    bg = new Fa.ImageSurf({
      size: [void 0, void 0],
      properties: {
        cursor: 'pointer'
      }
    });
    bg.setContent('images/splash.png');
    bg.on('click', (function(_this) {
      return function() {
        return Dispatcher.emit('page_change', {
          from: 'Splash',
          to: 'Login'
        });
      };
    })(this));
    this.add(bg);
  }

  return splashPage;

})(Fa.View);


},{}],123:[function(require,module,exports){
var Stores;

Stores = {
  Consultant: require('./store.consultants.coffee'),
  Checklist: require('./store.checklist.coffee')
};

module.exports = Stores;


},{"./store.checklist.coffee":124,"./store.consultants.coffee":125}],124:[function(require,module,exports){
var ChecklistStore;

module.exports = ChecklistStore = (function() {
  function ChecklistStore() {
    $.getJSON("" + Conf.backend + "/checklist.json", (function(_this) {
      return function(data) {
        _this.raw = data;
        _this.object = _.object(_.map(data, (function(x, index) {
          return [
            x.question, _.merge(x, {
              index: index
            })
          ];
        })));
        return Dispatcher.emit('checklist_questionnaires_fetched', _this.raw);
      };
    })(this));
  }

  ChecklistStore.prototype.getByQuestion = function(question) {
    return this.object[question];
  };

  ChecklistStore.prototype.getByIndex = function(index) {
    return this.raw[index];
  };

  ChecklistStore.prototype.getSessByQuestion = function(question) {
    return _.find(Session.currentClient.checklist, function(x) {
      return x.question === question;
    });
  };

  return ChecklistStore;

})();


},{}],125:[function(require,module,exports){
var ConsultantStore;

module.exports = ConsultantStore = (function() {
  function ConsultantStore() {}

  ConsultantStore.login = function(username, password) {
    var deferred, promise;
    deferred = $.Deferred();
    promise = this.checkConsultant(username, password);
    promise.done(function(data) {
      return deferred.resolve(data.isExist);
    });
    promise.fail(function(jqXHR, textStatus, errorThrown) {
      alert("Error :" + jqXHR.status + " " + errorThrown);
      return false;
    });
    return deferred;
  };

  ConsultantStore.checkConsultant = function(username, password) {
    var consultant, fetchPromise;
    consultant = {
      "UserId": username,
      "Password": password
    };
    fetchPromise = $.ajax({
      url: "" + Conf.authIp + "/api/Login",
      type: 'POST',
      dataType: "json",
      contentType: 'application/json',
      crossDomain: true,
      withCredentials: false,
      useDefaultXhrHeader: false,
      data: JSON.stringify(consultant)
    });
    return fetchPromise;
  };

  ConsultantStore.setting = function(backend, screenWidth, screenHeight, imageServerURL) {
    var str;
    str = "{";
    str = str + "'isProduction' :" + "'yes',";
    str = str + "'firstPage' :" + "'Client',";
    str = str + "'backend' :" + "'" + backend + "',";
    str = str + "'screenWidth' :" + "'" + screenWidth + "',";
    str = str + "'screenHeight' :" + "'" + screenHeight + "',";
    str = str + "'imageServerURL' :" + "'" + imageServerURL + "'";
    str = str + "}";
    return str;
  };

  ConsultantStore.config = function(data) {
    var str;
    str = "{";
    str = str + "'isProduction' :" + "'yes',";
    str = str + "'FirstPage' :" + "'Login',";
    str = str + "'DataIp' :" + "'" + data.config.DataIp + "',";
    str = str + "'PrimaryNasIp' :" + "'" + data.config.PrimaryNasIp + "',";
    str = str + "'ScreenWidth' :" + "'" + data.config.ScreenWidth + "',";
    str = str + "'ScreenHeight' :" + "'" + data.config.ScreenHeight + "',";
    str = str + "'OutletId' :" + "'" + data.config.OutletId + "',";
    str = str + "'BranchId' :" + "'" + data.config.BranchId + "',";
    str = str + "'Brand' :" + "'" + data.config.Brand + "',";
    str = str + "'DeviceType' :" + "'" + data.config.DeviceType + "',";
    str = str + "'AuthIp' :" + "'" + data.config.AuthIp + "',";
    str = str + "'SecondaryHost' :" + "'" + data.config.SecondaryHost + "',";
    str = str + "'SecondaryNasIp' :" + "'" + data.config.SecondaryNasIp + "'";
    str = str + "}";
    return str;
  };

  ConsultantStore.GetDeviceConfig = function(macId) {
    var deferred, promise;
    deferred = $.Deferred();
    promise = this.GetConfig(macId);
    promise.done(function(data) {
      return deferred.resolve(data);
    });
    promise.fail(function(jqXHR, textStatus, errorThrown) {
      alert("Error Get Config:" + jqXHR.status + " " + errorThrown);
      deferred.reject(jqXHR, textStatus, errorThrown);
      return deferred;
    });
    return deferred;
  };

  ConsultantStore.GetConfig = function(macId) {
    var deviceid, fetchPromise;
    deviceid = {
      "DeviceMacId": macId
    };
    fetchPromise = $.ajax({
      url: 'http://testsvr.eurogrp.com:8016/api/DeviceConfig/PostDeviceConfigDetails',
      type: 'POST',
      dataType: "json",
      contentType: 'application/json',
      crossDomain: true,
      withCredentials: false,
      useDefaultXhrHeader: false,
      data: JSON.stringify(deviceid)
    });
    return fetchPromise;
  };

  ConsultantStore.GetDeviceConfigTest = function(macId) {
    return true;
  };

  ConsultantStore.configTest = function(data) {
    var str;
    str = "{";
    str = str + "'isProduction' :" + "'yes',";
    str = str + "'firstPage' :" + "'Client',";
    str = str + "'backend' :" + "'http://localhost:1337',";
    str = str + "'imageServerURL' :" + "'http://localhost:8080/upload',";
    str = str + "'outletId' :" + "'101',";
    str = str + "'branchId' :" + "'1001',";
    str = str + "'brand' :" + "'NEWYORK',";
    str = str + "'deviceType' :" + "'IOS',";
    str = str + "'authIp' :" + "'http://testsvr.eurogrp.com:8006',";
    str = str + "'secondaryHost' :" + "'http://testsvr.eurogrp.com:8006',";
    str = str + "'secondaryNasIp' :" + "'http://localhost:8080/upload'";
    str = str + "}";
    return str;
  };

  ConsultantStore.GetClientDetails = function(clientId) {
    var deferred, promise;
    deferred = $.Deferred();
    promise = this.GetClientDetailsFromAES(clientId);
    promise.done(function(data) {
      return deferred.resolve(data);
    });
    promise.fail(function(jqXHR, textStatus, errorThrown) {
      return alert("Error get customer details:" + jqXHR.status + " " + errorThrown);
    });
    return deferred;
  };

  ConsultantStore.GetClientDetailsFromAES = function(clientId) {
    var clients, fetchPromise;
    clients = {
      "CompanyID": "SG01",
      "CustomerID": clientId
    };
    fetchPromise = $.ajax({
      url: "" + Conf.authIp + "/api/NYSS/Customer/fnGetCustomerDetails",
      type: 'POST',
      dataType: "json",
      contentType: 'application/json',
      crossDomain: true,
      withCredentials: false,
      useDefaultXhrHeader: false,
      data: JSON.stringify(clients)
    });
    return fetchPromise;
  };

  ConsultantStore.fetchFromBackend = function(clientId) {
    var deferred, promise;
    deferred = $.Deferred();
    promise = this.fetchBackend(clientId);
    promise.done(function(data) {
      return deferred.resolve(data);
    });
    promise.fail(function(jqXHR, textStatus, errorThrown) {
      deferred.reject(jqXHR, textStatus, errorThrown);
      return deferred;
    });
    return deferred;
  };

  ConsultantStore.fetchBackend = function(clientId) {
    var fetchPromise;
    fetchPromise = $.ajax({
      url: "" + Conf.backend + "/clients",
      dataType: "json",
      async: false,
      data: {
        client_name: clientId
      },
      type: 'GET'
    });
    return fetchPromise;
  };

  return ConsultantStore;

})();


},{}],126:[function(require,module,exports){
// hbsfy compiled Handlebars template
var Handlebars = require('hbsfy/runtime');
module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\r\n      <div class=\"row\">\r\n        <div class=\"col col-10\" style=\"display: flex; align-items: center;justify-content: center;\">\r\n          <i class=\"ion-ios7-circle-outline answer-box-radio\" onclick=\"Dispatcher.emit('answer_box_radio_checked', {answer: '"
    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
    + "', index: '"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "'})\" data-answer-id=\""
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" style=\"font-size: 26px; color: white; cursor: pointer\"></i>\r\n        </div>\r\n        <div class=\"col col-90\">\r\n          <span onclick=\"Dispatcher.emit('answer_box_radio_checked', {answer: '"
    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
    + "', index: '"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "'})\" style=\"font-size: 15px; font-weight: bold; color: white; cursor: pointer\">"
    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
    + "</span>\r\n        </div>\r\n      </div>\r\n    ";
  return buffer;
  }

  buffer += "<div style=\"width: 380px; height: auto;\">\r\n  <div class=\"alpha60\" style=\"border:6px solid #888; border-radius: 10px;background:rgba(5,5,5, 0.8)\">\r\n    <div style=\"margin: 5px;\">\r\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.answer_options), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n      <div class=\"row\"><br></div>\r\n      <div class=\"row\">\r\n        <div class=\"col\" style=\"display: flex; align-items: center;justify-content: center;\">\r\n          <i class=\"icon-Confirm\" onclick=\"Dispatcher.emit('cl_answer_box_confirm')\" style=\"font-size: 37px; color: #fb9c05; cursor: pointer;\"></i>   \r\n          <span class=\"btnConfirm\" onclick=\"Dispatcher.emit('cl_answer_box_confirm')\">Confirm</span>\r\n        </div>\r\n        <div class=\"col\" style=\"display: flex; align-items: center;justify-content: center;\">\r\n          <i class=\"icon-Cancel\" onclick=\"Dispatcher.emit('cl_answer_box_cancel')\" style=\"font-size: 37px; color: #fb9c05; cursor: pointer;\"></i>\r\n          <span class=\"btnCancel\" onclick=\"Dispatcher.emit('cl_answer_box_cancel')\">Cancel</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>";
  return buffer;
  });

},{"hbsfy/runtime":65}],127:[function(require,module,exports){
// hbsfy compiled Handlebars template
var Handlebars = require('hbsfy/runtime');
module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper, options;
  buffer += "\r\n        ";
  stack1 = (helper = helpers.ifChecklist || (depth0 && depth0.ifChecklist),options={hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.type), options) : helperMissing.call(depth0, "ifChecklist", (depth0 && depth0.type), options));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n    ";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <div>\r\n                <p style=\"font-size: 17px; font-weight: bolder;\">";
  if (helper = helpers.question) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.question); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</p>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col col-90\">\r\n                  <div onclick=\"Dispatcher.emit('cl_open_answer_box', {question: '";
  if (helper = helpers.question) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.question); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', index: '"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "'})\" style=\"opacity: 0.5; box-shadow: 2px 2px 8px #888; background-color: white; min-height: 100px;\">\r\n                    <span id=\"clq-checklist-"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" style=\"font-weight: bold; padding: 8px; font-size: 15px;\">\r\n\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col col-10\" style=\"display: flex; align-items: center;justify-content: center;\">\r\n                  <i onclick=\"Dispatcher.emit('cl_open_answer_box', {question: '";
  if (helper = helpers.question) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.question); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', index: '"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "'})\" class=\"ion-plus-circled\" style=\"font-size: 2em; cursor: pointer;\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ";
  return buffer;
  }

function program4(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <div>\r\n                <p style=\"font-size: 17px; font-weight: bolder;\">";
  if (helper = helpers.question) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.question); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</p>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <i onclick=\"Dispatcher.emit('face_rating_clicked', {question: '";
  if (helper = helpers.question) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.question); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', index: '"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "', score: 1})\" class=\"nyss-face1_white clq-rating-"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " inactive-face-rating\" data-score=\"1\" ></i>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <i onclick=\"Dispatcher.emit('face_rating_clicked', {question: '";
  if (helper = helpers.question) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.question); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', index: '"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "', score: 2})\" class=\"nyss-face2_white clq-rating-"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " inactive-face-rating\" data-score=\"2\"></i>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <i onclick=\"Dispatcher.emit('face_rating_clicked', {question: '";
  if (helper = helpers.question) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.question); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', index: '"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "', score: 3})\" class=\"nyss-face3_white clq-rating-"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " inactive-face-rating\" data-score=\"3\"></i>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <i onclick=\"Dispatcher.emit('face_rating_clicked', {question: '";
  if (helper = helpers.question) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.question); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', index: '"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "', score: 4})\" class=\"nyss-face4_white clq-rating-"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " inactive-face-rating\" data-score=\"4\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ";
  return buffer;
  }

  buffer += "<div style=\"padding: 15px;\">\r\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.questionnaires_data), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\r\n</div>\r\n";
  return buffer;
  });

},{"hbsfy/runtime":65}],128:[function(require,module,exports){
// hbsfy compiled Handlebars template
var Handlebars = require('hbsfy/runtime');
module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div>\r\n    <canvas id=\"fabric-canvas\"></canvas>\r\n    <div style=\"display: none\">\r\n      <img src=\"";
  if (helper = helpers.picture) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.picture); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" onload=\"Dispatcher.emit('canvas_loaded')\">\r\n    </div>\r\n</div>\r\n<div class=\"divButton\">\r\n    <div class=\"divRound\" id=\"rotateImageClockwise\" onclick=\"Dispatcher.emit('rotateImageClockwise')\">\r\n        <i class=\"iconEditor-Rotate-clockwise\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"rotateImageAntiClockwise\" onclick=\"Dispatcher.emit('rotateImageAntiClockwise')\">\r\n        <i class=\"iconEditor-Rotate-anti-clockwise\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"edit\" onclick=\"Dispatcher.emit('edit')\">\r\n        <i class=\"iconEditor-Edit\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"save\" onclick=\"Dispatcher.emit('save')\">\r\n        <i class=\"iconEditor-Save\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"bck\" onclick=\"Dispatcher.emit('hide_frontdrop', {for : 'show_full_picture'})\">\r\n        <i class=\"iconEditor-Cancel2\"></i>\r\n    </div>\r\n</div>\r\n<div class=\"divEditButton\">\r\n    <div class=\"divRound\" id=\"addrect\" onclick=\"Dispatcher.emit('addrect')\">\r\n        <i class=\"iconEditor-diamond\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"addcir\" onclick=\"Dispatcher.emit('addcir')\">\r\n        <i class=\"iconEditor-Circle\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"addtri\" onclick=\"Dispatcher.emit('addtri')\">\r\n        <i class=\"iconEditor-Triangle\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"addtext\" onclick=\"Dispatcher.emit('addtext')\">\r\n        <i class=\"iconEditor-Text\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"draw\" onclick=\"Dispatcher.emit('draw')\"> \r\n        <i class=\"iconEditor-Draw\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"delete\" onclick=\"Dispatcher.emit('delete')\">\r\n        <i class=\"iconEditor-delete\"></i>\r\n    </div>\r\n    <div class=\"divRound\" id=\"done\" onclick=\"Dispatcher.emit('done')\">\r\n        <i class=\"iconEditor-Exit\"></i>\r\n    </div>\r\n</div>";
  return buffer;
  });

},{"hbsfy/runtime":65}],129:[function(require,module,exports){
// hbsfy compiled Handlebars template
var Handlebars = require('hbsfy/runtime');
module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"row\">\r\n  <div class=\"col\"><img style=\"height: 617px; width: 480px; border: 2px solid white; padding: 3px; margin-top: 50px;\" src=\"";
  if (helper = helpers.before) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.before); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" /></div>\r\n  <div class=\"col\"><img style=\"height: 617px; width: 480px; border: 2px solid white; padding: 3px; margin-top: 50px;\" src=\"";
  if (helper = helpers.after) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.after); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" /></div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col\"><h1 style=\"text-align: center; color: white;\">";
  if (helper = helpers.beforeDate) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.beforeDate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</h1></div>\r\n  <div class=\"col\"><h1 style=\"text-align: center; color: white;\">";
  if (helper = helpers.afterDate) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.afterDate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</h1></div>\r\n</div>";
  return buffer;
  });

},{"hbsfy/runtime":65}],130:[function(require,module,exports){
// hbsfy compiled Handlebars template
var Handlebars = require('hbsfy/runtime');
module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div style=\"width: 500px; height: 400px; padding: 10px 10px 15px 15px;\">\r\n  <div style=\"width: 470px; height: 380px; background-color: #333;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\">\r\n\r\n    <div class=\"row\" style=\"height: 40px; padding: 3px;\">\r\n      <!--<div class=\"col\"><i class=\"ion-edit\" onclick=\"Dispatcher.emit('show_match_on_compare_page', {timestampBef: '";
  if (helper = helpers.timestampBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.timestampBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', timestampAft: '";
  if (helper = helpers.timestampAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.timestampAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', sessionBef: '";
  if (helper = helpers.sessBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sessBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', sessionAft: '";
  if (helper = helpers.sessAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sessAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "'});\" style=\"color: white; font-size: 28px\"></i></div>-->\r\n      <div class=\"col\"><i class=\"ion-search\" onclick=\"Dispatcher.emit('open_match_view_from_result_page', {before: '";
  if (helper = helpers.fullBeforePic) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.fullBeforePic); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', after: '";
  if (helper = helpers.fullAfterPic) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.fullAfterPic); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', beforeDate: '";
  if (helper = helpers.dateTakenBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.dateTakenBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', afterDate: '";
  if (helper = helpers.dateTakenAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.dateTakenAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "'})\" style=\"color: white; font-size: 28px\"></i></div>\r\n      <div class=\"col\" style=\"margin: 0 auto; font-size: 15px; text-align: center; color: white;\">";
  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</div>\r\n      <div class=\"col\"><i class=\"ion-star\" style=\"color: white; font-size: 30px; position: relative; left: 120px\"></i></div>\r\n    </div>\r\n\r\n    <div class=\"\" style=\"background-color: #555; height: 300px; margin: 2px 22px;\">\r\n      <img src=\"";
  if (helper = helpers.beforePic) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.beforePic); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" style=\"float:left; width: 200px; height: 257px; margin: 5px;\" />\r\n      <img src=\"";
  if (helper = helpers.afterPic) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.afterPic); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" style=\"float:right; width: 200px; height: 257px; margin: 5px;\" />\r\n      <div style=\"clear: both;\"></div>\r\n      <div style=\"float:left; width: 200px; margin: 5px; text-align: center; font-size: 15px; font-weight: bolder; color: white\">BEFORE&nbsp;(";
  if (helper = helpers.dateTakenBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.dateTakenBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + ")</div>\r\n      <div style=\"float:right; width: 200px; margin: 5px; text-align: center; font-size: 15px; font-weight: bolder; color: white\">AFTER&nbsp;(";
  if (helper = helpers.dateTakenAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.dateTakenAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + ")</div>\r\n      <div style=\"clear: both;\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\" style=\"height: 40px;\">\r\n      <div class=\"col\" style=\"color: white; font-size: 11px;\">\r\n		Session: ";
  if (helper = helpers.sessBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sessBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;\r\n		Angle: ";
  if (helper = helpers.angleBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.angleBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;\r\n		Taken: ";
  if (helper = helpers.takenBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.takenBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n		Session: ";
  if (helper = helpers.sessAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sessAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;\r\n		Angle: ";
  if (helper = helpers.angleAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.angleAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;\r\n		Taken: ";
  if (helper = helpers.takenAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.takenAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\r\n	  </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>";
  return buffer;
  });

},{"hbsfy/runtime":65}],131:[function(require,module,exports){
// hbsfy compiled Handlebars template
var Handlebars = require('hbsfy/runtime');
module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div style=\"width: 500px; height: 400px; padding: 10px 10px 15px 15px;\">\r\n  <div style=\"width: 470px; height: 380px; background-color: #333;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\">\r\n\r\n    <div class=\"row\" style=\"height: 40px; padding: 3px;\">\r\n      <!--<div class=\"col\"><i class=\"ion-edit\" onclick=\"Dispatcher.emit('show_match_on_compare_page', {timestampBef: '";
  if (helper = helpers.timestampBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.timestampBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', timestampAft: '";
  if (helper = helpers.timestampAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.timestampAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', sessionBef: '";
  if (helper = helpers.sessBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sessBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', sessionAft: '";
  if (helper = helpers.sessAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sessAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "'});\" style=\"color: white; font-size: 28px\"></i></div>-->\r\n      <div class=\"col\"><i class=\"ion-search\" onclick=\"Dispatcher.emit('open_match_view_from_result_page', {before: '";
  if (helper = helpers.fullBeforePic) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.fullBeforePic); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', after: '";
  if (helper = helpers.fullAfterPic) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.fullAfterPic); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', beforeDate: '";
  if (helper = helpers.dateTakenBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.dateTakenBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "', afterDate: '";
  if (helper = helpers.dateTakenAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.dateTakenAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "'})\" style=\"color: white; font-size: 28px\"></i></div>\r\n      <div class=\"col\" style=\"margin: 0 auto; font-size: 15px; text-align: center; color: white;\">";
  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</div>\r\n      <div class=\"col\"><i class=\"ion-star\" style=\"color: yellow; font-size: 30px; position: relative; left: 120px\"></i></div>\r\n    </div>\r\n\r\n    <div class=\"\" style=\"background-color: #555; height: 300px; margin: 2px 22px;\">\r\n      <img src=\"";
  if (helper = helpers.beforePic) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.beforePic); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" style=\"float:left; width: 200px; height: 256px; margin: 5px;\" />\r\n      <img src=\"";
  if (helper = helpers.afterPic) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.afterPic); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" style=\"float:right; width: 200px; height: 256px; margin: 5px;\" />\r\n      <div style=\"clear: both;\"></div>\r\n      <div style=\"float:left; width: 200px; margin: 5px; text-align: center; font-size: 15px; font-weight: bolder; color: white\">BEFORE&nbsp;(";
  if (helper = helpers.dateTakenBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.dateTakenBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + ")</div>\r\n      <div style=\"float:right; width: 200px; margin: 5px; text-align: center; font-size: 15px; font-weight: bolder; color: white\">AFTER&nbsp;(";
  if (helper = helpers.dateTakenAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.dateTakenAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + ")</div>\r\n      <div style=\"clear: both;\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\" style=\"height: 40px;\">      \r\n	  <div class=\"col\" style=\"color: white; font-size: 11px;\">\r\n		Session: ";
  if (helper = helpers.sessBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sessBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;\r\n		Angle: ";
  if (helper = helpers.angleBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.angleBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;\r\n		Taken: ";
  if (helper = helpers.takenBef) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.takenBef); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n		Session: ";
  if (helper = helpers.sessAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sessAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;\r\n		Angle: ";
  if (helper = helpers.angleAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.angleAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + " &nbsp;&nbsp;&nbsp;\r\n		Taken: ";
  if (helper = helpers.takenAft) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.takenAft); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\r\n	  </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>";
  return buffer;
  });

},{"hbsfy/runtime":65}],132:[function(require,module,exports){
// hbsfy compiled Handlebars template
var Handlebars = require('hbsfy/runtime');
module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"side-menu-item row padding-left\">\r\n  <span class=\"icon col-20\"><i class=\"";
  if (helper = helpers.icon_class) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.icon_class); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"></i></span>\r\n  <span class=\"icon-text col-80\">";
  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span>\r\n</div>";
  return buffer;
  });

},{"hbsfy/runtime":65}],133:[function(require,module,exports){
var Utils;

module.exports = Utils = (function() {
  function Utils() {}

  Utils.importSampleData = function() {
    var cl, pics;
    cl = new Models.Client('TEKKEN');
    if (cl.photos.length < 20) {
      pics = JSON.parse('[\"sized_1409531717385.jpg\",\"sized_1409205492986.jpg\",\"sized_1409198224405.jpg\",\"sized_1409198716019.jpg\",\"sized_1409205498498.jpg\",\"sized_1409206554654.jpg\",\"sized_1409209514613.jpg\",\"sized_1409210908547.jpg\",\"sized_1409563006298.jpg\",\"sized_1409531727071.jpg\",\"sized_1409205971465.jpg\",\"sized_1409206997669.jpg\",\"sized_1409198631788.jpg\",\"sized_1409214470259.jpg\",\"sized_1409214488761.jpg\",\"sized_1409214760814.jpg\",\"sized_1409198617622.jpg\",\"sized_1409198262747.jpg\",\"sized_1409564366038.jpg\",\"sized_1409577513889.jpg\",\"sized_1409214546085.jpg\",\"sized_1409211099558.jpg\",\"sized_1409214930032.jpg\",\"sized_1409205932003.jpg\",\"sized_1409562959939.jpg\",\"sized_1409214796869.jpg\",\"sized_1409197540075.jpg\",\"sized_1409214998855.jpg\",\"sized_1409211757926.jpg\",\"sized_1409210961529.jpg\",\"sized_1409197712625.jpg\",\"sized_1409563044241.jpg\",\"sized_1409197347562.jpg\",\"sized_1409214724897.jpg\",\"sized_1409214277822.jpg\",\"sized_1409205992000.jpg\",\"sized_1409210887459.jpg\",\"sized_1409197687627.jpg\",\"sized_1409531711131.jpg\",\"sized_1409215244363.jpg\",\"sized_1409530949180.jpg\",\"sized_1409206534421.jpg\"]');
      cl.sessions = [
        {
          date: '2014.8.20'
        }, {
          date: '2014.8.22'
        }, {
          date: '2014.8.23'
        }, {
          date: '2014.8.28'
        }, {
          date: '2014.9.2'
        }
      ];
      cl.save();
      return _.each(pics, function(pic, index) {
        var angle, img, original_picture, session, sized_picture, taken_for, timestamp;
        img = pic.split(/_/)[1];
        original_picture = "http://felix.creativesatwork.me/" + img;
        sized_picture = "http://felix.creativesatwork.me/" + pic;
        angle = void 0;
        if (index % 2 === 0) {
          taken_for = 'Before';
        } else {
          taken_for = 'After';
        }
        session = index % 5;
        session += 1;
        timestamp = parseInt(img.match(/\d+/)[0]);
        return cl.addPhoto(original_picture, taken_for, timestamp, session);
      });
    }
  };

  Utils.startMockSession = function() {
    return Session.setCurrentClient(new Models.Client('TEKKEN'));
  };

  Utils.getDate = function() {
    var date, month, temp, year;
    temp = new Date();
    year = temp.getFullYear().toString();
    month = (1 + temp.getMonth()).toString();
    date = temp.getDate().toString();
    return "" + year + "." + month + "." + date;
  };

  Utils.testPhotoSave = function() {
    var photo;
    photo = {
      taken_for: 'Before',
      session: Session.currentClient.session,
      angle: void 0,
      date_taken: Utils.getDate(),
      timestamp: Date.now(),
      data: 'images/profile.png',
      index: Session.currentClient.photos.length
    };
    Session.setCurrentPhoto(photo);
    Session.currentClient.photos.push(photo);
    return Session.currentClient.save();
  };

  return Utils;

})();


},{}],134:[function(require,module,exports){
(function (global){

; jQuery = global.jQuery = require("jquery");
;__browserify_shim_require__=require;(function browserifyShim(module, define, require) {
/*	jQuery NailThumb Plugin - any image to any thumbnail
 *  Examples and documentation at: http://www.garralab.com/nailthumb.php
 *  Copyright (C) 2012  garralab@gmail.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
(function($) {
  var DEBUG = false;
  var version = '1.1';
  $.fn.nailthumb = function(options) {
    var opts = $.extend({}, $.fn.nailthumb.defaults, options);
    return this.each(function() {
      var $this = $(this);
      var o = $.metadata ? $.extend({}, opts, $this.metadata()) : opts;
      thumbize($this,o)
    });
  };
  function thumbize(element,options) {
    var image = setImage(element,options);
    var container = setContainer(element,options);
    if (options.serverSideParams) {
      $.fn.nailthumb.setServerSideParams(image,container,options);
    }
    debugObject('image',image);
    debugObject('container',container);
    if (options.onStart) options.onStart(container,options);
    if (options.loadingClass) container.addClass(options.loadingClass);

    if (options.preload || image.data('nailthumb.replaceto')) {
      debug('wait on load');
      image.one('load',function() {
        debugObject('before check',image);
        if(!image.data('nailthumb.working') && !image.data('nailthumb.replacing')) {
          image.data('nailthumb.working',true);
          debugObject('inside check',image);
          doThumb(image,container,options);
        }
      });
      var src = image.attr('src');
      image.attr('src',null).attr('src',src);
    } else {
      debug('nail thumb directly');
      image.data('nailthumb.working',true);
      doThumb(image,container,options);
    }
  };
  function doThumb(image,container,options) {
    resetImage(image,options);
    resetContainer(container,options);
    var imageDims = getImageDims(image,options);
    debugObject('image',image);
    debugObject('imageDims',imageDims);
    if (imageDims.width==0 || imageDims.height==0) {
      imageDims = getHiddenCloneDims(image);
      debugObject('imageCloneDims',imageDims);
    }
    var containerDims = getContainerDims(container,options);
    debugObject('container',container);
    debugObject('containerDims',containerDims);
    var prop = getProportion(containerDims,imageDims,options);
    debug('proportions',prop);
    resize(image, imageDims, container, containerDims, prop, options);

  };
  function setImage(element,options) {
    var image = element.find('img').first();
    var finder = options.imageCustomFinder;
    if (!finder && options.imageUrl) {
      finder = imageUrlFinder;
    } else if(!finder && options.imageFromWrappingLink) {
      finder = imageFromWrappingLinkFinder;
    }
    if (finder) {
      var img = finder(element,options);
      debugObject('finder',img);
      if (!img) img = [];
      if (img.length>0) {
        image = img;
        image.css('display','none');
        if(!image.data('nailthumb.replaceto')) image.data('nailthumb.replaceto',element);
        image.data('nailthumb.originalImageDims',null);
      }
    }
    if (image.length==0) {
      if (element.is('img')) image = element;
    }

    return image;
  };
  function imageUrlFinder(element,options) {
    var image = $('<img />').attr('src',options.imageUrl).css('display','none').data('nailthumb.replaceto',element);
    element.append(image);
    return image;
  };
  function imageFromWrappingLinkFinder(element,options) {
    var image;
    var link = element.find('a').first();
    if (link.length==0 && element.is('a')) {
      link = element;
    }
    if (link.attr('href')) {
      image = $('<img />').attr('src',link.attr('href')).css('display','none').data('nailthumb.replaceto',link);
      if (link.attr('title')) image.attr('title',link.attr('title'));
      link.append(image);
    }
    return image;
  };
  function resetImage(image,options) {
    if (!options.nostyle) {
      image.css({
        'position':'relative'
      });
    }
    if (!image.data('nailthumb.originalImageDims')) {
      image.css({
        'width':'auto',
        'height':'auto',
        'top':0,
        'left':0
      }).removeAttr('width')
        .removeAttr('height');
    }
  };
  function setContainer(element,options) {
    var container = element;
    if (element.is('img')) {
      if (options.ifImageAddContainer) {
        var c = $('<div></div>');
        element.wrap(c);
      }
      container = element.parent();
    }
    return container;
  };
  function resetContainer(container,options) {
    if (options.containerClass) container.addClass(options.containerClass);
    if (!options.nostyle) {
      container.css({
        'overflow':'hidden',
        'padding':'0px'
      });
    }

    if (options.replaceAnimation == 'animate') {
      if (options.width || options.height) {
        container.animate({
          'width':options.width,
          'height':options.height
        },options.animationTime,options.animation);
      }
    } else {
      if (options.width) container.width(options.width);
      if (options.height) container.height(options.height);
    }

    container.find('span.'+options.titleClass).remove();
  };
  function resize(image, imageDims, container, containerDims, prop, options) {
    var iw = imageDims.width * prop;
    var ih = imageDims.height * prop;
    var top = 0, left = 0, diff;
    var direction = getDirections(options.fitDirection);
    if (ih<containerDims.innerHeight) {
      switch (direction.v) {
        case 'center':
          top=-(ih-containerDims.innerHeight)/2;
          break;
        case 'bottom':
          top=-(ih-containerDims.innerHeight);
          diff='bottom';
          break;
        case 'top':
          top=0;
          diff='top';
          break;
        default:
          break;
      }
    } else if (ih>containerDims.innerHeight) {
      switch (direction.v) {
        case 'center':
          top=-(ih-containerDims.innerHeight)/2;
          break;
        case 'bottom':
          top=-(ih-containerDims.innerHeight);
          break;
        default:
          break;
      }
    }
    if (iw<containerDims.innerWidth) {
      switch (direction.h) {
        case 'center':
          left=-(iw-containerDims.innerWidth)/2;
          break;
        case 'right':
          left=-(iw-containerDims.innerWidth);
          break;
        default:
          break;
      }
    } else if (iw>containerDims.innerWidth) {
      switch (direction.h) {
        case 'center':
          left=-(iw-containerDims.innerWidth)/2;
          break;
        case 'right':
          left=-(iw-containerDims.innerWidth);
          break;
        default:
          break;
      }
    }
    image.addClass(options.imageClass);
    if (image.data('nailthumb.replaceto')) {
      replaceImage(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
    } else {
      showImage(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
    }
  };
  function replaceImage(image, imageDims, container, containerDims, ih, iw, left, top, diff, options) {
    var element = image.data('nailthumb.replaceto');
    var replaceto = findReplaceTo(element,options);
    image.data('nailthumb.replacing',true);
    image.load(function() {
      image.data('nailthumb.replacing',null);
    });
    if (replaceto) {
      replaceto.replaceWith(image);
    } else {
      element.append(image);
    }
    if (options.afterReplace) options.afterReplace(container, image, options);
    showImage(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
  };
  function showImage(image, imageDims, container, containerDims, ih, iw, left, top, diff, options) {

    if (options.replaceAnimation == 'animate') {
      image.css('display','inline');
      container.animate({
        'width':containerDims.innerWidth,
        'height':containerDims.innerHeight
      },options.animationTime,options.animation);
      image.animate({
        'width':iw,
        'height':ih,
        'top':top,
        'left':left
      },options.animationTime,options.animation,function(){
        afterAppear(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
      });
    } else {
      container.css({
        'width':containerDims.innerWidth,
        'height':containerDims.innerHeight
      });
      if (options.replaceAnimation) image.css('display','none');
      image.css({
        'width':iw,
        'height':ih,
        'top':top,
        'left':left
      });
      if (options.replaceAnimation == 'fade') {
        image.fadeIn(options.animationTime,options.animation,function(){
          afterAppear(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
        });
      } else if (options.replaceAnimation == 'slide') {
        image.slideDown(options.animationTime,options.animation,function(){
          afterAppear(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
        });
      } else if (options.replaceAnimation && options.replaceAnimation instanceof Function) {
        options.replaceAnimation(image,function(){
          afterAppear(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
        },options);
        if (!options.selfStartAfterAppear) {
          afterAppear(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
        }
      } else {
        image.css('display','inline');
        afterAppear(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
      }
    }
  };
  function afterAppear(image, imageDims, container, containerDims, ih, iw, left, top, diff, options) {
    if (options.afterAppear) options.afterAppear(container, image, options);
    image.data('nailthumb.replaceto',null);
    decorate(image, imageDims, container, containerDims, ih, iw, left, top, diff, options);
  };
  function findReplaceTo(element,options) {
    var rep = null;
    element.find('img').each(function() {
      if (!rep && !$(this).data('nailthumb.replaceto')) {
        rep = $(this);
      }
    });
    return rep;
  };
  function decorate(image, imageDims, container, containerDims, ih, iw, left, top, diff, options) {
    if (options.title || (options.titleAttr && image.attr(options.titleAttr)) ) {
      var title = options.title?options.title:image.attr(options.titleAttr);
      if (title) {
        var span = $('<span class="'+options.titleClass+'">'+title+'</span>');
        if (containerDims.innerHeight>ih) span.css('top',containerDims.innerHeight-ih);
        else span.css('top','0px');
        container.append(span);
        var tit = getHiddenDims(span);
        var im = getHiddenDims(image);
        debugObject('decorate containerDims',containerDims);
        debugObject('decorate imageDims',imageDims);
        debugObject('decorate imageDims',im);
        debugObject('decorate tit',tit);
        var outbound = containerDims.offsetTop+containerDims.innerHeight-tit.offsetTop;
        if (containerDims.height>containerDims.innerHeight) {
          outbound+=(containerDims.height-containerDims.innerHeight)/2
        }
        span.css('top','+='+outbound);

        if (iw < tit.width) span.css('width',iw);
        if (left > 0) span.css('left',left);

        var delta = tit.height;
        if (containerDims.innerHeight>ih && diff!='bottom') {
          delta += (containerDims.innerHeight-ih)/((diff=='top')?1:2);
        }

        var clone = span.clone();
        clone.css('width','auto').css('display','none').css('position','absolute');
        container.append(clone);
        var cloneDims = getHiddenDims(clone);
        clone.remove();
        debugObject('decorate cloneDims',cloneDims);

        if (options.titleWhen=='hover') {
          container.unbind('mouseenter mouseleave').hover(function(){
            span.find('span.'+options.titleScrollerClass).css('left',0);
            containerDims = getHiddenDims(container);
            tit = getHiddenDims(span);
            outbound = containerDims.offsetTop+containerDims.innerHeight-tit.offsetTop;
            if (containerDims.height>containerDims.innerHeight) {
              outbound+=(containerDims.height-containerDims.innerHeight)/2
            }
            debugObject('decorate hover tit',tit);
            debug('decorate hover outbound',tit);
            var doubleDelta = 0;
            if (outbound<0) {
              span.css('top','+='+outbound);
              doubleDelta = delta;
            } else {
              doubleDelta = delta-outbound;
            }
            if(options.animateTitle) {
              resetScrollTitle(span,options);
              span.stop(true).animate({
                top:'-='+doubleDelta
              },options.titleAnimationTime,options.titleAnimation,function(){
                scrollTitle(span, cloneDims.width, containerDims.innerWidth, options);
              });
            } else {
              span.css({
                top:'-='+doubleDelta
              });
              scrollTitle(span, cloneDims.width, containerDims.innerWidth, options);
            }
          },function(){
            if(options.animateTitle) {
              resetScrollTitle(span,options);
              span.animate({
                top:'+='+delta
              },options.titleAnimationTime,options.titleAnimation,function(){
                resetScrollTitle(span,options);
              });
            } else {
              resetScrollTitle(span,options);
              span.css({
                top:'+='+delta
              });
            }
          });
        } else {
          if(options.animateTitle) {
            span.animate({
              top:'-='+delta
            },options.titleAnimationTime,options.titleAnimation,function(){
              scrollTitle(span, cloneDims.width, containerDims.innerWidth, options);
            });
          } else {
            span.css({
              top:'-='+delta
            });
            scrollTitle(span, cloneDims.width, containerDims.innerWidth, options);
          }
        }
      }
    }
    if (options.onFinish) options.onFinish(container,options);
    if (options.loadingClass) container.removeClass(options.loadingClass);
    image.data('nailthumb.working',null);
  };
  function resetScrollTitle(span,options) {
    span.find('span.'+options.titleScrollerClass).stop();
  };
  function scrollTitle(span, width, visibleWidth, options) {
    if (width > visibleWidth && options.titleScrolling) {
      if (span.find('span.'+options.titleScrollerClass).length==0) {
        span.wrapInner('<span class="'+options.titleScrollerClass+'" />');
        span.find('span.'+options.titleScrollerClass).width(width).css('position','relative').css('white-space','nowrap');
      }
      span.find('span.'+options.titleScrollerClass).css('left',0);
      setTimeout(scrollFunction(span, width, visibleWidth, options),1000);
    }
  };
  function scrollFunction(span, width, visibleWidth, options) {
    return function() {
      var indent = Number(span.find('span.'+options.titleScrollerClass).css('left').replace(/[^-\d]/g,''));
      debug('indent',indent);
      debug('width',width);
      debug('visibleWidth',visibleWidth);
      debug('width <= -indent',(width <= -indent));
      var delta = width + indent;
      if (delta <= 0) {
        span.find('span.'+options.titleScrollerClass).css('left',visibleWidth);
        delta = width + visibleWidth;
      }
      delta += 10;
      span.find('span.'+options.titleScrollerClass).animate({
        'left':'-='+delta
      },width*1000/30,'linear',scrollFunction(span, width, visibleWidth, options));
    };
  };
  function getProportion(containerDims, imageDims, options) {
    if (options.proportions != null && options.proportions > 0) {
      return options.proportions;
    } else {
      var prop = containerDims.innerWidth/imageDims.width;
      if (options.method && options.method=='resize') {
        if (containerDims.innerHeight/imageDims.height < prop) {
          prop = containerDims.innerHeight/imageDims.height;
        }
      } else {
        if (containerDims.innerHeight/imageDims.height > prop) {
          prop = containerDims.innerHeight/imageDims.height;
        }
      }
      if (options.maxEnlargement && options.maxEnlargement < prop) prop = options.maxEnlargement;
      if (options.maxShrink && options.maxShrink > prop) prop = options.maxShrink;
      return prop;
    }
  };
  function getDirections(option) {
    var dir = {
      h:'center',
      v:'center'
    };
    if (option) {
      var opts = option.split(' ');
      if (opts.length > 0) {
        dir = getDirection(opts[0],dir);
      }
      if (opts.length > 1) {
        dir = getDirection(opts[1],dir);
      }
    }
    return dir;
  };
  function getDirection(str,d) {
    switch (str) {
      case 'top':
        d.v = 'top';
        break;
      case 'bottom':
        d.v = 'bottom';
        break;
      case 'left':
        d.h = 'left';
        break;
      case 'right':
        d.h = 'right';
        break;
      default:
        break;
    }
    return d;
  };
  function getImageDims(image,options) {
    var imageDims;
    if (!image.data('nailthumb.originalImageDims') ) {
      imageDims = getHiddenDims(image);
      image.data('nailthumb.originalImageDims',imageDims);
      if (!options.keepImageDimensions) {
        image.one('load',function(){
          image.data('nailthumb.originalImageDims',null);
        });
      }
    } else {
      imageDims = image.data('nailthumb.originalImageDims');
    }
    return imageDims;
  };
  function getContainerDims(container,options) {
    var containerDims = getHiddenDims(container)
    if (options.width) containerDims.innerWidth = options.width;
    if (options.height) containerDims.innerHeight = options.height;
    return containerDims;
  };
  function getDims(elem) {
    var offset = $(elem).offset();
    return {
      offsetTop: offset.top,
      offsetLeft: offset.left,
      width: $(elem).outerWidth(),
      height: $(elem).outerHeight(),
      innerWidth: $(elem).innerWidth(),
      innerHeight: $(elem).innerHeight()
    };
  };
  function getHiddenDims(elems) {
    var dims = null, i = 0, offset, elem;

    while ((elem = elems[i++])) {
      var hiddenElems = $(elem).parents().andSelf().filter(':hidden');
      if ( ! hiddenElems.length ) {
        dims = getDims(elem);
      } else {
        var backupStyle = [];
        hiddenElems.each( function() {
          var style = $(this).attr('style');
          style = typeof style == 'undefined'? '': style;
          backupStyle.push( style );
          $(this).attr( 'style', style + ' display: block !important;' );
        });

        hiddenElems.eq(0).css( 'left', -10000 );

        dims = getDims(elem);

        hiddenElems.each( function() {
          $(this).attr( 'style', backupStyle.shift() );
        });
      }

    }

    return dims;
  };
  function getHiddenCloneDims(elems) {
    var dims = null, i = 0, offset, elem;

    while ((elem = elems[i++])) {
      var hiddenElems = $(elem).parents().andSelf().filter(':hidden');
      if ( ! hiddenElems.length ) {
        dims = getDims(elem);
      } else {
        var backupStyle = [];
        hiddenElems.each( function() {
          var style = $(this).attr('style');
          style = typeof style == 'undefined'? '': style;
          backupStyle.push( style );
          $(this).attr( 'style', style + ' display: block !important;' );
        });

        hiddenElems.eq(0).css( 'left', -10000 );

        var clone = hiddenElems.eq(0).clone();
        $('body').append(clone);

        dims = getDims(clone);

        hiddenElems.each( function() {
          $(this).attr( 'style', backupStyle.shift() );
        });
        clone.remove();
      }

    }

    return dims;
  };
  $.fn.nailthumb.evalServerSideParams = function(image,container,options) {
    if (options.serverSideParams) {
      var params = {};
      if (!options.serverSideParams.noServerResize) {
        var w = null, h = null;
        if (options.serverSideParams.width) w = options.serverSideParams.width;
        else if (options.width) w = options.width;
        if (options.serverSideParams.height) h = options.serverSideParams.height;
        else if (options.height) h = options.height;
        if (!(w && h)) {
          resetContainer(container,options);
          var containerDims = getContainerDims(container,options);
          w = containerDims.innerWidth;
          h = containerDims.innerHeight;
        }
        if (w && h) {
          params.w = w;
          params.h = h;
          if (options.serverSideParams.mode!='resize') {
            if (options.method=='crop') params.mode = 'crop';
            if (options.serverSideParams.mode) params.mode = options.serverSideParams.mode;
          }
        }
      }

      $.each(options.serverSideParams, function(key,val) {
        if (key!='width' && key!='height' && key!='mode' && key!='noServerResize' && val) {
          params[key]=val;
        }
      });
      var pars = "";
      $.each(params, function(key,val) {
        pars+=";"+key+"="+val;
      });
      debug(pars,params);
      return pars;
    } else {
      return "";
    }
  };
  $.fn.nailthumb.setServerSideParams = function(image,container,options) {
    if (options.serverSideParams) {
      var url = image.attr("src");
      if (image.data('nailthumb.originalImageUrl')) {
        url = image.data('nailthumb.originalImageUrl');
      }
      image.data('nailthumb.originalImageUrl',url);
      var pars = $.fn.nailthumb.evalServerSideParams(image,container,options);
      url += pars;
      image.attr("src",url);
    }
  };
  $.fn.nailthumb.toggleDebug = function() {
    DEBUG = !DEBUG;
  };
  $.fn.nailthumb.doThumb = function(image,container,options) {
    doThumb(image,container,options);
  };
  $.fn.nailthumb.defaults = {
    onStart: null,
    onFinish: null,
    loadingClass: 'nailthumb-loading',
    imageUrl: null,
    imageFromWrappingLink: false,
    imageCustomFinder: null/*function(element,options){
     return null;
     }*/,
    imageClass:'nailthumb-image',
    afterReplace: null,
    afterAppear: null,
    replaceAnimation: 'fade',
    selfStartAfterAppear: false,
    animationTime: 1000,
    animation: 'swing',
    keepImageDimensions: false,
    method: 'crop',
    fitDirection: null,
    proportions: null,
    ifImageAddContainer: true,
    containerClass: 'nailthumb-container',
    maxEnlargement: null,
    maxShrink: null,
    preload: true,
    nostyle: false,
    width: null,
    height: null,
    title: null,
    titleClass: 'nailthumb-title',
    titleAttr: 'title',
    titleWhen: 'hover',
    titleScrolling: true,
    titleScrollerClass: 'nailthumb-title-scroller',
    animateTitle: true,
    titleAnimationTime: 500,
    titleAnimation: 'swing',
    serverSideParams: null
  };
  function log(log, jQueryobj) {
    try {
      debug(log, jQueryobj, true);
    } catch(ex) {}
  };
  function debug(log, jQueryobj, force) {
    try {
      if ((DEBUG && window.console && window.console.log) || force)
        window.console.log(log + ': ' + jQueryobj);
    } catch(ex) {}
  };
  function debugObject(log, jQueryobj, force) {
    try {
      if (!jQueryobj) jQueryobj=log;
      debug(log, jQueryobj);
      if ((DEBUG && window.console && window.console.log) || force)
        window.console.debug(jQueryobj);
    } catch(ex) {}
  };
})(jQuery);
}).call(global, module, undefined, undefined);

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"jquery":66}],135:[function(require,module,exports){
(function (global){

; jQuery = global.jQuery = require("jquery");
;__browserify_shim_require__=require;(function browserifyShim(module, define, require) {
/**
 * @license jquery.panzoom.js v2.0.5
 * Updated: Thu Apr 03 2014
 * Add pan and zoom functionality to any element
 * Copyright (c) 2014 timmy willison
 * Released under the MIT license
 * https://github.com/timmywil/jquery.panzoom/blob/master/MIT-License.txt
 */

(function(global, factory) {
    // AMD
    if (typeof define === 'function' && define.amd) {
        define([ 'jquery' ], function(jQuery) {
            return factory(global, jQuery);
        });
        // CommonJS/Browserify
    } else if (typeof exports === 'object') {
        factory(global, __browserify_shim_require__('jquery'));
        // Global
    } else {
        factory(global, global.jQuery);
    }
}(typeof window !== 'undefined' ? window : this, function(window, $) {
    'use strict';

    // Common properties to lift for touch or pointer events
    var list = 'over out down up move enter leave cancel'.split(' ');
    var hook = $.extend({}, $.event.mouseHooks);
    var events = {};

    // Support pointer events in IE11+ if available
    if ( window.PointerEvent ) {
        $.each(list, function( i, name ) {
            // Add event name to events property and add fixHook
            $.event.fixHooks[
                (events[name] = 'pointer' + name)
                ] = hook;
        });
    } else {
        var mouseProps = hook.props;
        // Add touch properties for the touch hook
        hook.props = mouseProps.concat(['touches', 'changedTouches', 'targetTouches', 'altKey', 'ctrlKey', 'metaKey', 'shiftKey']);

        /**
         * Support: Android
         * Android sets pageX/Y to 0 for any touch event
         * Attach first touch's pageX/pageY and clientX/clientY if not set correctly
         */
        hook.filter = function( event, originalEvent ) {
            var touch;
            var i = mouseProps.length;
            if ( !originalEvent.pageX && originalEvent.touches && (touch = originalEvent.touches[0]) ) {
                // Copy over all mouse properties
                while(i--) {
                    event[mouseProps[i]] = touch[mouseProps[i]];
                }
            }
            return event;
        };

        $.each(list, function( i, name ) {
            // No equivalent touch events for over and out
            if (i < 2) {
                events[ name ] = 'mouse' + name;
            } else {
                var touch = 'touch' +
                    (name === 'down' ? 'start' : name === 'up' ? 'end' : name);
                // Add fixHook
                $.event.fixHooks[ touch ] = hook;
                // Add event names to events property
                events[ name ] = touch + ' mouse' + name;
            }
        });
    }

    $.pointertouch = events;

    var datakey = '__pz__';
    var slice = Array.prototype.slice;
    var pointerEvents = !!window.PointerEvent;

    // Regex
    var rupper = /([A-Z])/g;
    var rsvg = /^http:[\w\.\/]+svg$/;
    var rinline = /^inline/;

    var floating = '(\\-?[\\d\\.e]+)';
    var commaSpace = '\\,?\\s*';
    var rmatrix = new RegExp(
        '^matrix\\(' +
        floating + commaSpace +
        floating + commaSpace +
        floating + commaSpace +
        floating + commaSpace +
        floating + commaSpace +
        floating + '\\)$'
    );

    /**
     * Utility for determing transform matrix equality
     * Checks backwards to test translation first
     * @param {Array} first
     * @param {Array} second
     */
    function matrixEquals(first, second) {
        var i = first.length;
        while(--i) {
            if (+first[i] !== +second[i]) {
                return false;
            }
        }
        return true;
    }

    /**
     * Creates the options object for reset functions
     * @param {Boolean|Object} opts See reset methods
     * @returns {Object} Returns the newly-created options object
     */
    function createResetOptions(opts) {
        var options = { range: true, animate: true };
        if (typeof opts === 'boolean') {
            options.animate = opts;
        } else {
            $.extend(options, opts);
        }
        return options;
    }

    /**
     * Represent a transformation matrix with a 3x3 matrix for calculations
     * Matrix functions adapted from Louis Remi's jQuery.transform (https://github.com/louisremi/jquery.transform.js)
     * @param {Array|Number} a An array of six values representing a 2d transformation matrix
     */
    function Matrix(a, b, c, d, e, f, g, h, i) {
        if ($.type(a) === 'array') {
            this.elements = [
                +a[0], +a[2], +a[4],
                +a[1], +a[3], +a[5],
                0,     0,     1
            ];
        } else {
            this.elements = [
                a, b, c,
                d, e, f,
                g || 0, h || 0, i || 1
            ];
        }
    }

    Matrix.prototype = {
        /**
         * Multiply a 3x3 matrix by a similar matrix or a vector
         * @param {Matrix|Vector} matrix
         * @return {Matrix|Vector} Returns a vector if multiplying by a vector
         */
        x: function(matrix) {
            var isVector = matrix instanceof Vector;

            var a = this.elements,
                b = matrix.elements;

            if (isVector && b.length === 3) {
                // b is actually a vector
                return new Vector(
                    a[0] * b[0] + a[1] * b[1] + a[2] * b[2],
                    a[3] * b[0] + a[4] * b[1] + a[5] * b[2],
                    a[6] * b[0] + a[7] * b[1] + a[8] * b[2]
                );
            } else if (b.length === a.length) {
                // b is a 3x3 matrix
                return new Matrix(
                    a[0] * b[0] + a[1] * b[3] + a[2] * b[6],
                    a[0] * b[1] + a[1] * b[4] + a[2] * b[7],
                    a[0] * b[2] + a[1] * b[5] + a[2] * b[8],

                    a[3] * b[0] + a[4] * b[3] + a[5] * b[6],
                    a[3] * b[1] + a[4] * b[4] + a[5] * b[7],
                    a[3] * b[2] + a[4] * b[5] + a[5] * b[8],

                    a[6] * b[0] + a[7] * b[3] + a[8] * b[6],
                    a[6] * b[1] + a[7] * b[4] + a[8] * b[7],
                    a[6] * b[2] + a[7] * b[5] + a[8] * b[8]
                );
            }
            return false; // fail
        },
        /**
         * Generates an inverse of the current matrix
         * @returns {Matrix}
         */
        inverse: function() {
            var d = 1 / this.determinant(),
                a = this.elements;
            return new Matrix(
                d * ( a[8] * a[4] - a[7] * a[5]),
                d * (-(a[8] * a[1] - a[7] * a[2])),
                d * ( a[5] * a[1] - a[4] * a[2]),

                d * (-(a[8] * a[3] - a[6] * a[5])),
                d * ( a[8] * a[0] - a[6] * a[2]),
                d * (-(a[5] * a[0] - a[3] * a[2])),

                d * ( a[7] * a[3] - a[6] * a[4]),
                d * (-(a[7] * a[0] - a[6] * a[1])),
                d * ( a[4] * a[0] - a[3] * a[1])
            );
        },
        /**
         * Calculates the determinant of the current matrix
         * @returns {Number}
         */
        determinant: function() {
            var a = this.elements;
            return a[0] * (a[8] * a[4] - a[7] * a[5]) - a[3] * (a[8] * a[1] - a[7] * a[2]) + a[6] * (a[5] * a[1] - a[4] * a[2]);
        }
    };

    /**
     * Create a vector containing three values
     */
    function Vector(x, y, z) {
        this.elements = [ x, y, z ];
    }

    /**
     * Get the element at zero-indexed index i
     * @param {Number} i
     */
    Vector.prototype.e = Matrix.prototype.e = function(i) {
        return this.elements[ i ];
    };

    /**
     * Create a Panzoom object for a given element
     * @constructor
     * @param {Element} elem - Element to use pan and zoom
     * @param {Object} [options] - An object literal containing options to override default options
     *  (See Panzoom.defaults for ones not listed below)
     * @param {jQuery} [options.$zoomIn] - zoom in buttons/links collection (you can also bind these yourself
     *  e.g. $button.on('click', function(e) { e.preventDefault(); $elem.panzooom('zoomIn'); });)
     * @param {jQuery} [options.$zoomOut] - zoom out buttons/links collection on which to bind zoomOut
     * @param {jQuery} [options.$zoomRange] - zoom in/out with this range control
     * @param {jQuery} [options.$reset] - Reset buttons/links collection on which to bind the reset method
     * @param {Function} [options.on[Start|Change|Zoom|Pan|End|Reset] - Optional callbacks for panzoom events
     */
    function Panzoom(elem, options) {

        // Allow instantiation without `new` keyword
        if (!(this instanceof Panzoom)) {
            return new Panzoom(elem, options);
        }

        // Sanity checks
        if (elem.nodeType !== 1) {
            $.error('Panzoom called on non-Element node');
        }
        if (!$.contains(document, elem)) {
            $.error('Panzoom element must be attached to the document');
        }

        // Don't remake
        var d = $.data(elem, datakey);
        if (d) {
            return d;
        }

        // Extend default with given object literal
        // Each instance gets its own options
        this.options = options = $.extend({}, Panzoom.defaults, options);
        this.elem = elem;
        var $elem = this.$elem = $(elem);
        this.$set = options.$set && options.$set.length ? options.$set : $elem;
        this.$doc = $(elem.ownerDocument || document);
        this.$parent = $elem.parent();

        // This is SVG if the namespace is SVG
        // However, while <svg> elements are SVG, we want to treat those like other elements
        this.isSVG = rsvg.test(elem.namespaceURI) && elem.nodeName.toLowerCase() !== 'svg';

        this.panning = false;

        // Save the original transform value
        // Save the prefixed transform style key
        // Set the starting transform
        this._buildTransform();

        // Build the appropriately-prefixed transform style property name
        // De-camelcase
        this._transform = !this.isSVG && $.cssProps.transform.replace(rupper, '-$1').toLowerCase();

        // Build the transition value
        this._buildTransition();

        // Build containment dimensions
        this.resetDimensions();

        // Add zoom and reset buttons to `this`
        var $empty = $();
        var self = this;
        $.each([ '$zoomIn', '$zoomOut', '$zoomRange', '$reset' ], function(i, name) {
            self[ name ] = options[ name ] || $empty;
        });

        this.enable();

        // Save the instance
        $.data(elem, datakey, this);
    }

    // Attach regex for possible use (immutable)
    Panzoom.rmatrix = rmatrix;

    // Container for event names
    Panzoom.events = $.pointertouch;

    Panzoom.defaults = {
        // Should always be non-empty
        // Used to bind jQuery events without collisions
        // A guid is not added here as different instantiations/versions of panzoom
        // on the same element is not supported, so don't do it.
        eventNamespace: '.panzoom',

        // Whether or not to transition the scale
        transition: true,

        // Default cursor style for the element
        cursor: 'move',

        // There may be some use cases for zooming without panning or vice versa
        disablePan: false,
        disableZoom: false,

        // The increment at which to zoom
        // adds/subtracts to the scale each time zoomIn/Out is called
        increment: 0.3,

        minScale: 0.4,
        maxScale: 5,

        // The default step for the range input
        // Precendence: default < HTML attribute < option setting
        rangeStep: 0.05,

        // Animation duration (ms)
        duration: 200,
        // CSS easing used for scale transition
        easing: 'ease-in-out',

        // Indicate that the element should be contained within it's parent when panning
        // Note: this does not affect zooming outside of the parent
        // Set this value to 'invert' to only allow panning outside of the parent element (basically the opposite of the normal use of contain)
        // 'invert' is useful for a large panzoom element where you don't want to show anything behind it
        contain: false
    };

    Panzoom.prototype = {
        constructor: Panzoom,

        /**
         * @returns {Panzoom} Returns the instance
         */
        instance: function() {
            return this;
        },

        /**
         * Enable or re-enable the panzoom instance
         */
        enable: function() {
            // Unbind first
            this._initStyle();
            this._bind();
            this.disabled = false;
        },

        /**
         * Disable panzoom
         */
        disable: function() {
            this.disabled = true;
            this._resetStyle();
            this._unbind();
        },

        /**
         * @returns {Boolean} Returns whether the current panzoom instance is disabled
         */
        isDisabled: function() {
            return this.disabled;
        },

        /**
         * Destroy the panzoom instance
         */
        destroy: function() {
            this.disable();
            $.removeData(this.elem, datakey);
        },

        /**
         * Builds the restricing dimensions from the containment element
         * Also used with focal points
         * Call this method whenever the dimensions of the element or parent are changed
         */
        resetDimensions: function() {
            // Reset container properties
            var $parent = this.$parent;
            this.container = {
                width: $parent.innerWidth(),
                height: $parent.innerHeight()
            };
            var po = $parent.offset();
            var elem = this.elem;
            var $elem = this.$elem;
            var dims;
            if (this.isSVG) {
                dims = elem.getBoundingClientRect();
                dims = {
                    left: dims.left - po.left,
                    top: dims.top - po.top,
                    width: dims.width,
                    height: dims.height,
                    margin: { left: 0, top: 0 }
                };
            } else {
                dims = {
                    left: $.css(elem, 'left', true) || 0,
                    top: $.css(elem, 'top', true) || 0,
                    width: $elem.innerWidth(),
                    height: $elem.innerHeight(),
                    margin: {
                        top: $.css(elem, 'marginTop', true) || 0,
                        left: $.css(elem, 'marginLeft', true) || 0
                    }
                };
            }
            dims.widthBorder = ($.css(elem, 'borderLeftWidth', true) + $.css(elem, 'borderRightWidth', true)) || 0;
            dims.heightBorder = ($.css(elem, 'borderTopWidth', true) + $.css(elem, 'borderBottomWidth', true)) || 0;
            this.dimensions = dims;
        },

        /**
         * Return the element to it's original transform matrix
         * @param {Boolean} [options] If a boolean is passed, animate the reset (default: true). If an options object is passed, simply pass that along to setMatrix.
         * @param {Boolean} [options.silent] Silence the reset event
         */
        reset: function(options) {
            options = createResetOptions(options);
            // Reset the transform to its original value
            var matrix = this.setMatrix(this._origTransform, options);
            if (!options.silent) {
                this._trigger('reset', matrix);
            }
        },

        /**
         * Only resets zoom level
         * @param {Boolean|Object} [options] Whether to animate the reset (default: true) or an object of options to pass to zoom()
         */
        resetZoom: function(options) {
            options = createResetOptions(options);
            var origMatrix = this.getMatrix(this._origTransform);
            options.dValue = origMatrix[ 3 ];
            this.zoom(origMatrix[0], options);
        },

        /**
         * Only reset panning
         * @param {Boolean|Object} [options] Whether to animate the reset (default: true) or an object of options to pass to pan()
         */
        resetPan: function(options) {
            var origMatrix = this.getMatrix(this._origTransform);
            this.pan(origMatrix[4], origMatrix[5], createResetOptions(options));
        },

        /**
         * Sets a transform on the $set
         * @param {String} transform
         */
        setTransform: function(transform) {
            var method = this.isSVG ? 'attr' : 'style';
            var $set = this.$set;
            var i = $set.length;
            while(i--) {
                $[method]($set[i], 'transform', transform);
            }
        },

        /**
         * Retrieving the transform is different for SVG
         *  (unless a style transform is already present)
         * Uses the $set collection for retrieving the transform
         * @param {String} [transform] Pass in an transform value (like 'scale(1.1)')
         *  to have it formatted into matrix format for use by Panzoom
         * @returns {String} Returns the current transform value of the element
         */
        getTransform: function(transform) {
            var $set = this.$set;
            var transformElem = $set[0];
            if (transform) {
                this.setTransform(transform);
            } else {
                // Retrieve the transform
                transform = $[this.isSVG ? 'attr' : 'style'](transformElem, 'transform');
            }

            // Convert any transforms set by the user to matrix format
            // by setting to computed
            if (transform !== 'none' && !rmatrix.test(transform)) {
                // Get computed and set for next time
                this.setTransform(transform = $.css(transformElem, 'transform'));
            }

            return transform || 'none';
        },

        /**
         * Retrieve the current transform matrix for $elem (or turn a transform into it's array values)
         * @param {String} [transform] matrix-formatted transform value
         * @returns {Array} Returns the current transform matrix split up into it's parts, or a default matrix
         */
        getMatrix: function(transform) {
            var matrix = rmatrix.exec(transform || this.getTransform());
            if (matrix) {
                matrix.shift();
            }
            return matrix || [ 1, 0, 0, 1, 0, 0 ];
        },

        /**
         * Given a matrix object, quickly set the current matrix of the element
         * @param {Array|String} matrix
         * @param {Boolean} [animate] Whether to animate the transform change
         * @param {Object} [options]
         * @param {Boolean|String} [options.animate] Whether to animate the transform change, or 'skip' indicating that it is unnecessary to set
         * @param {Boolean} [options.contain] Override the global contain option
         * @param {Boolean} [options.range] If true, $zoomRange's value will be updated.
         * @param {Boolean} [options.silent] If true, the change event will not be triggered
         * @returns {Array} Returns the newly-set matrix
         */
        setMatrix: function(matrix, options) {
            if (this.disabled) { return; }
            if (!options) { options = {}; }
            // Convert to array
            if (typeof matrix === 'string') {
                matrix = this.getMatrix(matrix);
            }
            var dims, container, marginW, marginH, diffW, diffH, left, top, width, height;
            var scale = +matrix[0];
            var $parent = this.$parent;
            var contain = typeof options.contain !== 'undefined' ? options.contain : this.options.contain;

            // Apply containment
            if (contain) {
                dims = this._checkDims();
                container = this.container;
                width = dims.width + dims.widthBorder;
                height = dims.height + dims.heightBorder;
                // Use absolute value of scale here as negative scale doesn't mean even smaller
                marginW = ((width * Math.abs(scale)) - container.width) / 2;
                marginH = ((height * Math.abs(scale)) - container.height) / 2;
                left = dims.left + dims.margin.left;
                top = dims.top + dims.margin.top;
                if (contain === 'invert') {
                    diffW = width > container.width ? width - container.width : 0;
                    diffH = height > container.height ? height - container.height : 0;
                    marginW += (container.width - width) / 2;
                    marginH += (container.height - height) / 2;
                    matrix[4] = Math.max(Math.min(matrix[4], marginW - left), -marginW - left - diffW);
                    matrix[5] = Math.max(Math.min(matrix[5], marginH - top), -marginH - top - diffH + dims.heightBorder);
                } else {
                    // marginW += dims.widthBorder / 2;
                    marginH += dims.heightBorder / 2;
                    diffW = container.width > width ? container.width - width : 0;
                    diffH = container.height > height ? container.height - height : 0;
                    // If the element is not naturally centered, assume full margin right
                    if ($parent.css('textAlign') !== 'center' || !rinline.test($.css(this.elem, 'display'))) {
                        marginW = marginH = 0;
                    } else {
                        diffW = 0;
                    }
                    matrix[4] = Math.min(
                        Math.max(matrix[4], marginW - left),
                        -marginW - left + diffW
                    );
                    matrix[5] = Math.min(
                        Math.max(matrix[5], marginH - top),
                        -marginH - top + diffH
                    );
                }
            }
            if (options.animate !== 'skip') {
                // Set transition
                this.transition(!options.animate);
            }
            // Update range
            if (options.range) {
                this.$zoomRange.val(scale);
            }

            // Set the matrix on this.$set
            this.setTransform('matrix(' + matrix.join(',') + ')');

            if (!options.silent) {
                this._trigger('change', matrix);
            }

            return matrix;
        },

        /**
         * @returns {Boolean} Returns whether the panzoom element is currently being dragged
         */
        isPanning: function() {
            return this.panning;
        },

        /**
         * Apply the current transition to the element, if allowed
         * @param {Boolean} [off] Indicates that the transition should be turned off
         */
        transition: function(off) {
            if (!this._transition) { return; }
            var transition = off || !this.options.transition ? 'none' : this._transition;
            var $set = this.$set;
            var i = $set.length;
            while(i--) {
                // Avoid reflows when zooming
                if ($.style($set[i], 'transition') !== transition) {
                    $.style($set[i], 'transition', transition);
                }
            }
        },

        /**
         * Pan the element to the specified translation X and Y
         * Note: this is not the same as setting jQuery#offset() or jQuery#position()
         * @param {Number} x
         * @param {Number} y
         * @param {Object} [options] These options are passed along to setMatrix
         * @param {Array} [options.matrix] The matrix being manipulated (if already known so it doesn't have to be retrieved again)
         * @param {Boolean} [options.silent] Silence the pan event. Note that this will also silence the setMatrix change event.
         * @param {Boolean} [options.relative] Make the x and y values relative to the existing matrix
         */
        pan: function(x, y, options) {
            if (this.options.disablePan) { return; }
            if (!options) { options = {}; }
            var matrix = options.matrix;
            if (!matrix) {
                matrix = this.getMatrix();
            }
            // Cast existing matrix values to numbers
            if (options.relative) {
                x += +matrix[4];
                y += +matrix[5];
            }
            matrix[4] = x;
            matrix[5] = y;
            this.setMatrix(matrix, options);
            if (!options.silent) {
                this._trigger('pan', matrix[4], matrix[5]);
            }
        },

        /**
         * Zoom in/out the element using the scale properties of a transform matrix
         * @param {Number|Boolean} [scale] The scale to which to zoom or a boolean indicating to transition a zoom out
         * @param {Object} [opts] All global options can be overwritten by this options object. For example, override the default increment.
         * @param {Boolean} [opts.noSetRange] Specify that the method should not set the $zoomRange value (as is the case when $zoomRange is calling zoom on change)
         * @param {jQuery.Event|Object} [opts.focal] A focal point on the panzoom element on which to zoom.
         *  If an object, set the clientX and clientY properties to the position relative to the parent
         * @param {Boolean} [opts.animate] Whether to animate the zoom (defaults to true if scale is not a number, false otherwise)
         * @param {Boolean} [opts.silent] Silence the zoom event
         * @param {Array} [opts.matrix] Optionally pass the current matrix so it doesn't need to be retrieved
         * @param {Number} [opts.dValue] Think of a transform matrix as four values a, b, c, d
         *  where a/d are the horizontal/vertical scale values and b/c are the skew values
         *  (5 and 6 of matrix array are the tx/ty transform values).
         *  Normally, the scale is set to both the a and d values of the matrix.
         *  This option allows you to specify a different d value for the zoom.
         *  For instance, to flip vertically, you could set -1 as the dValue.
         */
        zoom: function(scale, opts) {
            // Shuffle arguments
            if (typeof scale === 'object') {
                opts = scale;
                scale = null;
            } else if (!opts) {
                opts = {};
            }
            var options = $.extend({}, this.options, opts);
            // Check if disabled
            if (options.disableZoom) { return; }
            var animate = false;
            var matrix = options.matrix || this.getMatrix();

            // Calculate zoom based on increment
            if (typeof scale !== 'number') {
                scale = +matrix[0] + (options.increment * (scale ? -1 : 1));
                animate = true;
            }

            // Constrain scale
            if (scale > options.maxScale) {
                scale = options.maxScale;
            } else if (scale < options.minScale) {
                scale = options.minScale;
            }

            // Calculate focal point based on scale
            var focal = options.focal;
            if (focal && !options.disablePan) {
                // Adapted from code by Florian Günther
                // https://github.com/florianguenther/zui53
                var dims = this._checkDims();
                var clientX = focal.clientX;
                var clientY = focal.clientY;
                // Adjust the focal point for default transform-origin => 50% 50%
                if (!this.isSVG) {
                    clientX -= (dims.width + dims.widthBorder) / 2;
                    clientY -= (dims.height + dims.heightBorder) / 2;
                }
                var clientV = new Vector(clientX, clientY, 1);
                var surfaceM = new Matrix(matrix);
                // Supply an offset manually if necessary
                var o = this.parentOffset || this.$parent.offset();
                var offsetM = new Matrix(1, 0, o.left - this.$doc.scrollLeft(), 0, 1, o.top - this.$doc.scrollTop());
                var surfaceV = surfaceM.inverse().x(offsetM.inverse().x(clientV));
                var scaleBy = scale / matrix[0];
                surfaceM = surfaceM.x(new Matrix([ scaleBy, 0, 0, scaleBy, 0, 0 ]));
                clientV = offsetM.x(surfaceM.x(surfaceV));
                matrix[4] = +matrix[4] + (clientX - clientV.e(0));
                matrix[5] = +matrix[5] + (clientY - clientV.e(1));
            }

            // Set the scale
            matrix[0] = scale;
            matrix[3] = typeof options.dValue === 'number' ? options.dValue : scale;

            // Calling zoom may still pan the element
            this.setMatrix(matrix, {
                animate: typeof options.animate === 'boolean' ? options.animate : animate,
                // Set the zoomRange value
                range: !options.noSetRange
            });

            // Trigger zoom event
            if (!options.silent) {
                this._trigger('zoom', matrix[0], options);
            }
        },

        /**
         * Get/set option on an existing instance
         * @returns {Array|undefined} If getting, returns an array of all values
         *   on each instance for a given key. If setting, continue chaining by returning undefined.
         */
        option: function(key, value) {
            var options;
            if (!key) {
                // Avoids returning direct reference
                return $.extend({}, this.options);
            }

            if (typeof key === 'string') {
                if (arguments.length === 1) {
                    return this.options[ key ] !== undefined ?
                        this.options[ key ] :
                        null;
                }
                options = {};
                options[ key ] = value;
            } else {
                options = key;
            }

            this._setOptions(options);
        },

        /**
         * Internally sets options
         * @param {Object} options - An object literal of options to set
         */
        _setOptions: function(options) {
            $.each(options, $.proxy(function(key, value) {
                switch(key) {
                    case 'disablePan':
                        this._resetStyle();
                    /* falls through */
                    case '$zoomIn':
                    case '$zoomOut':
                    case '$zoomRange':
                    case '$reset':
                    case 'disableZoom':
                    case 'onStart':
                    case 'onChange':
                    case 'onZoom':
                    case 'onPan':
                    case 'onEnd':
                    case 'onReset':
                    case 'eventNamespace':
                        this._unbind();
                }
                this.options[ key ] = value;
                switch(key) {
                    case 'disablePan':
                        this._initStyle();
                    /* falls through */
                    case '$zoomIn':
                    case '$zoomOut':
                    case '$zoomRange':
                    case '$reset':
                        // Set these on the instance
                        this[ key ] = value;
                    /* falls through */
                    case 'disableZoom':
                    case 'onStart':
                    case 'onChange':
                    case 'onZoom':
                    case 'onPan':
                    case 'onEnd':
                    case 'onReset':
                    case 'eventNamespace':
                        this._bind();
                        break;
                    case 'cursor':
                        $.style(this.elem, 'cursor', value);
                        break;
                    case 'minScale':
                        this.$zoomRange.attr('min', value);
                        break;
                    case 'maxScale':
                        this.$zoomRange.attr('max', value);
                        break;
                    case 'rangeStep':
                        this.$zoomRange.attr('step', value);
                        break;
                    case 'startTransform':
                        this._buildTransform();
                        break;
                    case 'duration':
                    case 'easing':
                        this._buildTransition();
                    /* falls through */
                    case 'transition':
                        this.transition();
                        break;
                    case '$set':
                        if (value instanceof $ && value.length) {
                            this.$set = value;
                            // Reset styles
                            this._initStyle();
                            this._buildTransform();
                        }
                }
            }, this));
        },

        /**
         * Initialize base styles for the element and its parent
         */
        _initStyle: function() {
            var styles = {
                // Promote the element to it's own compositor layer
                'backface-visibility': 'hidden',
                // Set to defaults for the namespace
                'transform-origin': this.isSVG ? '0 0' : '50% 50%'
            };
            // Set elem styles
            if (!this.options.disablePan) {
                styles.cursor = this.options.cursor;
            }
            this.$set.css(styles);

            // Set parent to relative if set to static
            var $parent = this.$parent;
            // No need to add styles to the body
            if ($parent.length && !$.nodeName($parent[0], 'body')) {
                styles = {
                    overflow: 'hidden'
                };
                if ($parent.css('position') === 'static') {
                    styles.position = 'relative';
                }
                $parent.css(styles);
            }
        },

        /**
         * Undo any styles attached in this plugin
         */
        _resetStyle: function() {
            this.$elem.css({
                'cursor': '',
                'transition': ''
            });
            this.$parent.css({
                'overflow': '',
                'position': ''
            });
        },

        /**
         * Binds all necessary events
         */
        _bind: function() {
            var self = this;
            var options = this.options;
            var ns = options.eventNamespace;
            var str_start = pointerEvents ? 'pointerdown' + ns : ('touchstart' + ns + ' mousedown' + ns);
            var str_click = pointerEvents ? 'pointerup' + ns : ('touchend' + ns + ' click' + ns);
            var events = {};
            var $reset = this.$reset;
            var $zoomRange = this.$zoomRange;

            // Bind panzoom events from options
            $.each([ 'Start', 'Change', 'Zoom', 'Pan', 'End', 'Reset' ], function() {
                var m = options[ 'on' + this ];
                if ($.isFunction(m)) {
                    events[ 'panzoom' + this.toLowerCase() + ns ] = m;
                }
            });

            // Bind $elem drag and click/touchdown events
            // Bind touchstart if either panning or zooming is enabled
            if (!options.disablePan || !options.disableZoom) {
                events[ str_start ] = function(e) {
                    var touches;
                    if (e.type === 'touchstart' ?
                            // Touch
                        (touches = e.touches) &&
                        ((touches.length === 1 && !options.disablePan) || touches.length === 2) :
                            // Mouse/Pointer: Ignore right click
                        !options.disablePan && e.which === 1) {

                        e.preventDefault();
                        e.stopPropagation();
                        self._startMove(e, touches);
                    }
                };
            }
            this.$elem.on(events);

            // Bind reset
            if ($reset.length) {
                $reset.on(str_click, function(e) {
                    e.preventDefault();
                    self.reset();
                });
            }

            // Set default attributes for the range input
            if ($zoomRange.length) {
                $zoomRange.attr({
                    // Only set the range step if explicit or
                    // set the default if there is no attribute present
                    step: options.rangeStep === Panzoom.defaults.rangeStep &&
                    $zoomRange.attr('step') ||
                    options.rangeStep,
                    min: options.minScale,
                    max: options.maxScale
                }).prop({
                    value: this.getMatrix()[0]
                });
            }

            // No bindings if zooming is disabled
            if (options.disableZoom) {
                return;
            }

            var $zoomIn = this.$zoomIn;
            var $zoomOut = this.$zoomOut;

            // Bind zoom in/out
            // Don't bind one without the other
            if ($zoomIn.length && $zoomOut.length) {
                // preventDefault cancels future mouse events on touch events
                $zoomIn.on(str_click, function(e) {
                    e.preventDefault();
                    self.zoom();
                });
                $zoomOut.on(str_click, function(e) {
                    e.preventDefault();
                    self.zoom(true);
                });
            }

            if ($zoomRange.length) {
                events = {};
                // Cannot prevent default action here, just use pointerdown/mousedown
                events[ (pointerEvents ? 'pointerdown' : 'mousedown') + ns ] = function() {
                    self.transition(true);
                };
                events[ 'change' + ns ] = function() {
                    self.zoom(+this.value, { noSetRange: true });
                };
                $zoomRange.on(events);
            }
        },

        /**
         * Unbind all events
         */
        _unbind: function() {
            this.$elem
                .add(this.$zoomIn)
                .add(this.$zoomOut)
                .add(this.$reset)
                .off(this.options.eventNamespace);
        },

        /**
         * Builds the original transform value
         */
        _buildTransform: function() {
            // Save the original transform
            // Retrieving this also adds the correct prefixed style name
            // to jQuery's internal $.cssProps
            return this._origTransform = this.getTransform(this.options.startTransform);
        },

        /**
         * Set transition property for later use when zooming
         * If SVG, create necessary animations elements for translations and scaling
         */
        _buildTransition: function() {
            if (this._transform) {
                var options = this.options;
                this._transition = this._transform + ' ' + options.duration + 'ms ' + options.easing;
            }
        },

        /**
         * Checks dimensions to make sure they don't need to be re-calculated
         */
        _checkDims: function() {
            var dims = this.dimensions;
            // Rebuild if width or height is still 0
            if (!dims.width || !dims.height) {
                this.resetDimensions();
            }
            return this.dimensions;
        },

        /**
         * Calculates the distance between two touch points
         * Remember pythagorean?
         * @param {Array} touches
         * @returns {Number} Returns the distance
         */
        _getDistance: function(touches) {
            var touch1 = touches[0];
            var touch2 = touches[1];
            return Math.sqrt(Math.pow(Math.abs(touch2.clientX - touch1.clientX), 2) + Math.pow(Math.abs(touch2.clientY - touch1.clientY), 2));
        },

        /**
         * Constructs an approximated point in the middle of two touch points
         * @returns {Object} Returns an object containing pageX and pageY
         */
        _getMiddle: function(touches) {
            var touch1 = touches[0];
            var touch2 = touches[1];
            return {
                clientX: ((touch2.clientX - touch1.clientX) / 2) + touch1.clientX,
                clientY: ((touch2.clientY - touch1.clientY) / 2) + touch1.clientY
            };
        },

        /**
         * Trigger a panzoom event on our element
         * The event is passed the Panzoom instance
         * @param {String|jQuery.Event} event
         * @param {Mixed} arg1[, arg2, arg3, ...] Arguments to append to the trigger
         */
        _trigger: function (event) {
            if (typeof event === 'string') {
                event = 'panzoom' + event;
            }
            this.$elem.triggerHandler(event, [this].concat(slice.call(arguments, 1)));
        },

        /**
         * Starts the pan
         * This is bound to mouse/touchmove on the element
         * @param {jQuery.Event} event An event with pageX, pageY, and possibly the touches list
         * @param {TouchList} [touches] The touches list if present
         */
        _startMove: function(event, touches) {
            var move, moveEvent, endEvent,
                startDistance, startScale, startMiddle,
                startPageX, startPageY;
            var self = this;
            var options = this.options;
            var ns = options.eventNamespace;
            var matrix = this.getMatrix();
            var original = matrix.slice(0);
            var origPageX = +original[4];
            var origPageY = +original[5];
            var panOptions = { matrix: matrix, animate: 'skip' };

            // Use proper events
            if (pointerEvents) {
                moveEvent = 'pointermove';
                endEvent = 'pointerup';
            } else if (event.type === 'touchstart') {
                moveEvent = 'touchmove';
                endEvent = 'touchend';
            } else {
                moveEvent = 'mousemove';
                endEvent = 'mouseup';
            }

            // Add namespace
            moveEvent += ns;
            endEvent += ns;

            // Remove any transitions happening
            this.transition(true);

            // Indicate that we are currently panning
            this.panning = true;

            // Trigger start event
            this._trigger('start', event, touches);

            if (touches && touches.length === 2) {
                startDistance = this._getDistance(touches);
                startScale = +matrix[0];
                startMiddle = this._getMiddle(touches);
                move = function(e) {
                    e.preventDefault();

                    // Calculate move on middle point
                    var middle = self._getMiddle(touches = e.touches);
                    var diff = self._getDistance(touches) - startDistance;

                    // Set zoom
                    self.zoom(diff * (options.increment / 100) + startScale, {
                        focal: middle,
                        matrix: matrix,
                        animate: false
                    });

                    // Set pan
                    self.pan(
                        +matrix[4] + middle.clientX - startMiddle.clientX,
                        +matrix[5] + middle.clientY - startMiddle.clientY,
                        panOptions
                    );
                    startMiddle = middle;
                };
            } else {
                startPageX = event.pageX;
                startPageY = event.pageY;

                /**
                 * Mousemove/touchmove function to pan the element
                 * @param {Object} e Event object
                 */
                move = function(e) {
                    e.preventDefault();
                    self.pan(
                        origPageX + e.pageX - startPageX,
                        origPageY + e.pageY - startPageY,
                        panOptions
                    );
                };
            }

            // Bind the handlers
            $(document)
                .off(ns)
                .on(moveEvent, move)
                .on(endEvent, function(e) {
                    e.preventDefault();
                    // Unbind all document events
                    $(this).off(ns);
                    self.panning = false;
                    // Trigger our end event
                    // Simply set the type to "panzoomend" to pass through all end properties
                    // jQuery's `not` is used here to compare Array equality
                    e.type = 'panzoomend';
                    self._trigger(e, matrix, !matrixEquals(matrix, original));
                });
        }
    };

    // Add Panzoom as a static property
    $.Panzoom = Panzoom;

    /**
     * Extend jQuery
     * @param {Object|String} options - The name of a method to call on the prototype
     *  or an object literal of options
     * @returns {jQuery|Mixed} jQuery instance for regular chaining or the return value(s) of a panzoom method call
     */
    $.fn.panzoom = function(options) {
        var instance, args, m, ret;

        // Call methods widget-style
        if (typeof options === 'string') {
            ret = [];
            args = slice.call(arguments, 1);
            this.each(function() {
                instance = $.data(this, datakey);

                if (!instance) {
                    ret.push(undefined);

                    // Ignore methods beginning with `_`
                } else if (options.charAt(0) !== '_' &&
                    typeof (m = instance[ options ]) === 'function' &&
                        // If nothing is returned, do not add to return values
                    (m = m.apply(instance, args)) !== undefined) {

                    ret.push(m);
                }
            });

            // Return an array of values for the jQuery instances
            // Or the value itself if there is only one
            // Or keep chaining
            return ret.length ?
                (ret.length === 1 ? ret[0] : ret) :
                this;
        }

        return this.each(function() { new Panzoom(this, options); });
    };

    return Panzoom;
}));
}).call(global, module, undefined, undefined);

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"jquery":66}],136:[function(require,module,exports){
(function (global){

; jQuery = global.jQuery = require("jquery");
;__browserify_shim_require__=require;(function browserifyShim(module, define, require) {
/*!
 Zoom 1.7.13
 license: MIT
 http://www.jacklmoore.com/zoom
 */
(function ($) {
  var defaults = {
    url: false,
    callback: false,
    target: false,
    duration: 120,
    on: 'mouseover', // other options: grab, click, toggle
    touch: true, // enables a touch fallback
    onZoomIn: false,
    onZoomOut: false,
    magnify: 1
  };

  // Core Zoom Logic, independent of event listeners.
  $.zoom = function(target, source, img, magnify) {
    var targetHeight,
      targetWidth,
      sourceHeight,
      sourceWidth,
      xRatio,
      yRatio,
      offset,
      position = $(target).css('position'),
      $source = $(source);

    // The parent element needs positioning so that the zoomed element can be correctly positioned within.
    target.style.position = /(absolute|fixed)/.test(position) ? position : 'relative';
    target.style.overflow = 'hidden';

    img.style.width = img.style.height = '';

    $(img)
      .addClass('zoomImg')
      .css({
        position: 'absolute',
        top: 0,
        left: 0,
        opacity: 0,
        width: img.width * magnify,
        height: img.height * magnify,
        border: 'none',
        maxWidth: 'none',
        maxHeight: 'none'
      })
      .appendTo(target);

    return {
      init: function() {
        targetWidth = $(target).outerWidth();
        targetHeight = $(target).outerHeight();

        if (source === target) {
          sourceWidth = targetWidth;
          sourceHeight = targetHeight;
        } else {
          sourceWidth = $source.outerWidth();
          sourceHeight = $source.outerHeight();
        }

        xRatio = (img.width - targetWidth) / sourceWidth;
        yRatio = (img.height - targetHeight) / sourceHeight;

        offset = $source.offset();
      },
      move: function (e) {
        var left = (e.pageX - offset.left),
          top = (e.pageY - offset.top);

        top = Math.max(Math.min(top, sourceHeight), 0);
        left = Math.max(Math.min(left, sourceWidth), 0);

        img.style.left = (left * -xRatio) + 'px';
        img.style.top = (top * -yRatio) + 'px';
      }
    };
  };

  $.fn.zoom = function (options) {
    return this.each(function () {
      var
        settings = $.extend({}, defaults, options || {}),
      //target will display the zoomed image
        target = settings.target || this,
      //source will provide zoom location info (thumbnail)
        source = this,
        $source = $(source),
        img = document.createElement('img'),
        $img = $(img),
        mousemove = 'mousemove.zoom',
        clicked = false,
        touched = false,
        $urlElement;

      // If a url wasn't specified, look for an image element.
      if (!settings.url) {
        $urlElement = $source.find('img');
        if ($urlElement[0]) {
          settings.url = $urlElement.data('src') || $urlElement.attr('src');
        }
        if (!settings.url) {
          return;
        }
      }

      (function(){
        var position = target.style.position;
        var overflow = target.style.overflow;

        $source.one('zoom.destroy', function(){
          $source.off(".zoom");
          target.style.position = position;
          target.style.overflow = overflow;
          $img.remove();
        });

      }());

      img.onload = function () {
        var zoom = $.zoom(target, source, img, settings.magnify);

        function start(e) {
          zoom.init();
          zoom.move(e);

          // Skip the fade-in for IE8 and lower since it chokes on fading-in
          // and changing position based on mousemovement at the same time.
          $img.stop()
            .fadeTo($.support.opacity ? settings.duration : 0, 1, $.isFunction(settings.onZoomIn) ? settings.onZoomIn.call(img) : false);
        }

        function stop() {
          $img.stop()
            .fadeTo(settings.duration, 0, $.isFunction(settings.onZoomOut) ? settings.onZoomOut.call(img) : false);
        }

        // Mouse events
        if (settings.on === 'grab') {
          $source
            .on('mousedown.zoom',
            function (e) {
              if (e.which === 1) {
                $(document).one('mouseup.zoom',
                  function () {
                    stop();

                    $(document).off(mousemove, zoom.move);
                  }
                );

                start(e);

                $(document).on(mousemove, zoom.move);

                e.preventDefault();
              }
            }
          );
        } else if (settings.on === 'click') {
          $source.on('click.zoom',
            function (e) {
              if (clicked) {
                // bubble the event up to the document to trigger the unbind.
                return;
              } else {
                clicked = true;
                start(e);
                $(document).on(mousemove, zoom.move);
                $(document).one('click.zoom',
                  function () {
                    stop();
                    clicked = false;
                    $(document).off(mousemove, zoom.move);
                  }
                );
                return false;
              }
            }
          );
        } else if (settings.on === 'toggle') {
          $source.on('click.zoom',
            function (e) {
              if (clicked) {
                stop();
              } else {
                start(e);
              }
              clicked = !clicked;
            }
          );
        } else if (settings.on === 'mouseover') {
          zoom.init(); // Preemptively call init because IE7 will fire the mousemove handler before the hover handler.

          $source
            .on('mouseenter.zoom', start)
            .on('mouseleave.zoom', stop)
            .on(mousemove, zoom.move);
        }

        // Touch fallback
        if (settings.touch) {
          $source
            .on('touchstart.zoom', function (e) {
              e.preventDefault();
              if (touched) {
                touched = false;
                stop();
              } else {
                touched = true;
                start( e.originalEvent.touches[0] || e.originalEvent.changedTouches[0] );
              }
            })
            .on('touchmove.zoom', function (e) {
              e.preventDefault();
              zoom.move( e.originalEvent.touches[0] || e.originalEvent.changedTouches[0] );
            });
        }

        if ($.isFunction(settings.callback)) {
          settings.callback.call(img);
        }
      };

      img.src = settings.url;
    });
  };

  $.fn.zoom.defaults = defaults;
})(jQuery);
}).call(global, module, undefined, undefined);

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"jquery":66}],137:[function(require,module,exports){
var AppView, Backdrop, Browser, ChecklistAnswerBox, ClientFilter, DesiredOptions, Fa, Fullview, MatchBrowser, Matchview, PageRegisters, SideMenu,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Fa = require('../famous.coffee');

PageRegisters = require('../pages');

SideMenu = Fa.Components.Common.side_menu;

Backdrop = Fa.Elements.Common.backdrop;

Browser = Fa.Components.Snap.browser;

MatchBrowser = Fa.Components.Compare.match_browser;

Fullview = Fa.Components.Snap.fullview;

Matchview = Fa.Components.Result.matchview;

DesiredOptions = Fa.Components.Checklist.desired_options;

ChecklistAnswerBox = Fa.Components.Checklist.answer_box;

ClientFilter = Fa.Components.Result.client_filter;

module.exports = AppView = (function(_super) {
  __extends(AppView, _super);

  AppView.DEFAULT_OPTIONS = {};

  function AppView(options) {
    AppView.__super__.constructor.call(this, options);
    this.container = new Fa.ContainerSurf({
      size: options.size
    });
    this.add(this.container);
    this.renderer = new Fa.RenderCtrl({
      overlap: false
    });
    this.frontRenderer = new Fa.RenderCtrl({
      overlap: false,
      inTransition: {
        duration: 0
      }
    });
    this.bg = new Fa.ImageSurf({
      content: 'images/bg.png'
    });
    this.sideMenu = new SideMenu(options);
    this.backdrop = new Backdrop;
    this.browser = new Browser({
      size: [Conf.width, Conf.height]
    });
    this.matchBrowser = new MatchBrowser({
      size: [Conf.width, Conf.height]
    });
    this.fullPicture = new Fullview;
    this.matchPicture = new Matchview;
    this.desiredOpts = new DesiredOptions;
    this.answerBox = new ChecklistAnswerBox;
    this.clientFilter = new ClientFilter;
    this.container.add(Fa.translateZBy(0)).add(this.bg);
    this.container.add(Fa.translateZBy(2)).add(this.renderer);
    this.container.add(Fa.translateZBy(8)).add(this.backdrop);
    this.container.add(Fa.translateZBy(9)).add(this.frontRenderer);
    this.container.add(Fa.translateZBy(10)).add(this.sideMenu);
    this.Pages = {};
    _.each(PageRegisters, (function(_this) {
      return function(reg, key) {
        return _this.Pages[key] = new reg();
      };
    })(this));
    this.currentPage = this.Pages[Conf.firstPage];
    this.renderer.show(this.currentPage);
    if (this.currentPage.afterLoad) {
      Fa.Timer.setTimeout((function(_this) {
        return function() {
          return _this.currentPage.afterLoad();
        };
      })(this), 0);
    }
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('page_change', (function(_this) {
      return function(route) {
        if (_this.currentPage.pageExit) {
          _this.currentPage.pageExit();
        }
        _this.currentPage = _this.Pages[route.to];
        _this.renderer.show(_this.currentPage);
        if (_this.currentPage.afterLoad) {
          return Fa.Timer.setTimeout(function() {
            return _this.currentPage.afterLoad();
          }, 0);
        }
      };
    })(this));
    this._eventInput.on('show_menu', (function(_this) {
      return function() {
        return _this.sideMenu.showMenu();
      };
    })(this));
    this._eventInput.on('browse_snap', (function(_this) {
      return function() {
        Dispatcher.emit('show_backdrop', {
          "for": 'browse_snap'
        });
        return _this.frontRenderer.show(_this.browser, void 0, function() {
          return _this.browser.show();
        });
      };
    })(this));
    this._eventInput.on('match_browse_snap', (function(_this) {
      return function() {
        Dispatcher.emit('show_backdrop', {
          "for": 'match_browse_snap'
        });
        return _this.frontRenderer.show(_this.matchBrowser, void 0, function() {
          return _this.matchBrowser.show();
        });
      };
    })(this));
    this._eventInput.on('show_full_picture', (function(_this) {
      return function() {
        Dispatcher.emit('show_backdrop', {
          "for": 'show_full_picture'
        });
        _this.frontRenderer.show(_this.fullPicture);
        return _this.fullPicture.show();
      };
    })(this));
    this._eventInput.on('show_match_picture', (function(_this) {
      return function() {
        Dispatcher.emit('show_backdrop', {
          "for": 'show_full_picture'
        });
        _this.frontRenderer.show(_this.matchPicture);
        return _this.matchPicture.show();
      };
    })(this));
    this._eventInput.on('show_desired_opts', (function(_this) {
      return function() {
        return _this.frontRenderer.show(_this.desiredOpts, void 0, function() {
          return _this.desiredOpts.show();
        });
      };
    })(this));
    this._eventInput.on('show_answer_box', (function(_this) {
      return function() {
        return _this.frontRenderer.show(_this.answerBox, void 0, function() {
          return _this.answerBox.show();
        });
      };
    })(this));
    this._eventInput.on('show_client_filter', (function(_this) {
      return function() {
        return _this.frontRenderer.show(_this.clientFilter, void 0, function() {
          return _this.clientFilter.show();
        });
      };
    })(this));
    this._eventInput.on('hide_appfront', (function(_this) {
      return function() {
        return _this.renderer.hide();
      };
    })(this));
    this._eventInput.on('reopen_appfront', (function(_this) {
      return function() {
        return _this.renderer.show(_this.currentPage);
      };
    })(this));
  }

  AppView.prototype.rotatePortrait = function() {
    if (Conf.isProduction) {
      screen.lockOrientation('portrait');
    }
    return this.container.setSize([Conf.screenHeight, Conf.screenWidth]);
  };

  AppView.prototype.rotateLandscape = function() {
    if (Conf.isProduction) {
      screen.lockOrientation('landscape');
    }
    return this.container.setSize([Conf.screenWidth, Conf.screenHeight]);
  };

  return AppView;

})(Fa.View);


},{"../famous.coffee":106,"../pages":110}],138:[function(require,module,exports){

/*
Description: apply this to a single element, this element will behave as link
 */
var BhCommonAsLink;

module.exports = BhCommonAsLink = (function() {
  BhCommonAsLink.EVENTS = {
    CLICK: 'clicked'
  };

  function BhCommonAsLink(item, linkTo, cb) {
    this.item = item;
    this.linkTo = linkTo != null ? linkTo : void 0;
    this.cb = cb != null ? cb : void 0;
    this.event = new Fa.EventHandler();
    this.item.onClickAction = (function(_this) {
      return function() {
        _this.item.setActive();
        return Fa.Timer.setTimeout(function() {
          _this.item.setInactive();
          if (_this.linkTo !== void 0) {
            Dispatcher.emit('page_change', {
              to: _this.linkTo
            });
          }
          if (_this.cb !== void 0) {
            return _this.cb.call(_this);
          }
        }, 200);
      };
    })(this);
    this.item.on('click', item.onClickAction);
  }

  return BhCommonAsLink;

})();


},{}],139:[function(require,module,exports){
var BhCommonSelectGroup;

module.exports = BhCommonSelectGroup = (function() {
  BhCommonSelectGroup.EVENTS = {
    CHANGE: 'select_toggled'
  };

  function BhCommonSelectGroup(items, radioValues) {
    this.items = items;
    this.radioValues = radioValues != null ? radioValues : [];
    this.event = new Fa.EventHandler();
    _.each(this.items, (function(_this) {
      return function(item, key) {
        item.setInactive();
        item.groupIndex = key;
        item.onClickAction = function() {
          return _this.setToActive(item);
        };
        return item.on('click', item.onClickAction.bind(_this));
      };
    })(this));
    this.items[0].setActive();
    this.activeItem = this.items[0];
    return this;
  }

  BhCommonSelectGroup.prototype.setToNullItem = function() {
    this.value = null;
    this.activeItem = null;
    this.activeIndex = null;
    return _.each(this.items, (function(_this) {
      return function(_item) {
        return _item.setInactive();
      };
    })(this));
  };

  BhCommonSelectGroup.prototype.getActiveItem = function() {
    return this.activeItem;
  };

  BhCommonSelectGroup.prototype.setToActive = function(item) {
    return _.each(this.items, (function(_this) {
      return function(_item) {
        _item.setInactive();
        item.setActive();
        _this.activeItem = item;
        _this.activeIndex = item.groupIndex;
        _this.value = _this.radioValues[_this.activeIndex];
        return _this.event.emit(_this.constructor.EVENTS.CHANGE, _this.activeItem);
      };
    })(this));
  };

  BhCommonSelectGroup.prototype.setIndexToActive = function(index) {
    _.each(this.items, (function(_this) {
      return function(_item) {
        return _item.setInactive();
      };
    })(this));
    this.activeIndex = index;
    this.activeItem = this.items[index];
    this.activeItem.setActive();
    this.value = this.radioValues[index];
    return this.event.emit(this.constructor.EVENTS.CHANGE, this.activeItem);
  };

  BhCommonSelectGroup.prototype.onChange = function(callback) {
    return this.event.on(this.constructor.EVENTS.CHANGE, (function(_this) {
      return function() {
        return callback.apply(_this, [_this.activeItem]);
      };
    })(this));
  };

  return BhCommonSelectGroup;

})();


},{}],140:[function(require,module,exports){
var Behaviors;

Behaviors = {
  AsLink: require('./bh.common.as_link.coffee'),
  SelectGroup: require('./bh.common.select_group.coffee')
};

module.exports = Behaviors;


},{"./bh.common.as_link.coffee":138,"./bh.common.select_group.coffee":139}],141:[function(require,module,exports){
var AsLink, CancelBtn, Checker, ChecklistAnswerBox, ConfirmBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Checker = Fa.Elements.Checklist.checker;

ConfirmBtn = Fa.Elements.Checklist.confirm_btn;

CancelBtn = Fa.Elements.Checklist.cancel_btn;

AsLink = Fa.Behaviors.AsLink;

module.exports = ChecklistAnswerBox = (function(_super) {
  var answerBoxRadioChecked, cancel, confirm, renderAnswerBox, _createLayouts, _createLightbox;

  __extends(ChecklistAnswerBox, _super);

  ChecklistAnswerBox.DEFAULT_OPTIONS = {};

  function ChecklistAnswerBox(options) {
    ChecklistAnswerBox.__super__.constructor.call(this, options);
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('cl_open_answer_box', renderAnswerBox.bind(this));
    this._eventInput.on('answer_box_radio_checked', answerBoxRadioChecked.bind(this));
    this._eventInput.on('cl_answer_box_confirm', confirm.bind(this));
    this._eventInput.on('cl_answer_box_cancel', cancel.bind(this));
  }

  renderAnswerBox = function(params) {
    var html;
    this.question = params.question;
    this.clientAnswer = Checklist.getSessByQuestion(this.question).answers;
    this.answers = Checklist.object[this.question].answers;
    html = require('../../templates/checklist.answer_box.hbs')({
      answer_options: this.answers
    });
    this.content = new Fa.Surface({
      content: html,
      size: [true, true]
    });
    window.myContent = this.content;
    this.selectedAns = {};
    _.each(this.answers, (function(_this) {
      return function(answer, index) {
        if (_.contains(_this.clientAnswer, answer)) {
          _this.selectedAns[answer] = true;
          $(".answer-box-radio[data-answer-id=" + index + "]").removeClass('ion-ios7-circle-outline').addClass('ion-ios7-circle-filled');
        } else {
          _this.selectedAns[answer] = false;
          $(".answer-box-radio[data-answer-id=" + index + "]").removeClass('ion-ios7-circle-filled').addClass('ion-ios7-circle-outline');
        }
      };
    })(this));
    return Dispatcher.emit('show_answer_box');
  };

  answerBoxRadioChecked = function(params) {
    var answer, index;
    index = params.index;
    answer = params.answer;
    if (this.selectedAns[answer]) {
      this.selectedAns[answer] = false;
      return $(".answer-box-radio[data-answer-id=" + index + "]").removeClass('ion-ios7-circle-filled').addClass('ion-ios7-circle-outline');
    } else {
      this.selectedAns[answer] = true;
      return $(".answer-box-radio[data-answer-id=" + index + "]").removeClass('ion-ios7-circle-outline').addClass('ion-ios7-circle-filled');
    }
  };

  confirm = function() {
    var selected;
    selected = [];
    _.each(this.selectedAns, function(v, k) {
      if (v) {
        selected.push(k);
      }
    });
    Checklist.getSessByQuestion(this.question).answers = selected;
    Session.currentClient.save();
    Dispatcher.emit('current_client_checklist_updated');
    return this.hide();
  };

  cancel = function() {
    return this.hide();
  };

  _createLayouts = function() {
    return _createLightbox.call(this);
  };

  _createLightbox = function() {
    var lightboxContainer, positionMod;
    positionMod = new Fa.Modifier({
      origin: [0.5, 0.5],
      align: [0.5, 0.25]
    });
    lightboxContainer = new Fa.ContainerSurf({
      size: [380, true],
      properties: {
        pointerEvents: 'none'
      }
    });
    this.lightbox = new Fa.RenderCtrl({
      overlap: false,
      inTransition: {
        duration: 0
      }
    });
    lightboxContainer.add(this.lightbox);
    return this.add(positionMod).add(lightboxContainer);
  };

  ChecklistAnswerBox.prototype.show = function() {
    return this.lightbox.show(this.content);
  };

  ChecklistAnswerBox.prototype.hide = function() {
    return this.lightbox.hide();
  };

  return ChecklistAnswerBox;

})(Fa.View);


},{"../../templates/checklist.answer_box.hbs":126}],142:[function(require,module,exports){
var AsLink, CancelBtn, Checker, ConfirmBtn, desiredOptions,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Checker = Fa.Elements.Checklist.checker;

ConfirmBtn = Fa.Elements.Checklist.confirm_btn;

CancelBtn = Fa.Elements.Checklist.cancel_btn;

AsLink = Fa.Behaviors.AsLink;

module.exports = desiredOptions = (function(_super) {
  var createOptions, createResponder, _createContent, _createLayouts, _createLightbox;

  __extends(desiredOptions, _super);

  desiredOptions.DEFAULT_OPTIONS = {};

  function desiredOptions(options) {
    desiredOptions.__super__.constructor.call(this, options);
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('session_changed:current_client', (function(_this) {
      return function() {
        return _this.bindFromModel();
      };
    })(this));
  }

  desiredOptions.prototype.bindFromModel = function() {
    this.opSkinBrightening.setActive(Session.currentClient.desire_skin_brightening);
    this.opSkinHydrates.setActive(Session.currentClient.desire_skin_hydrates);
    this.opEyeBags.setActive(Session.currentClient.desire_eye_bags);
    this.opDarkSpots.setActive(Session.currentClient.desire_dark_spots);
    this.opPigmentation.setActive(Session.currentClient.desire_pigmentation);
    this.opAcne.setActive(Session.currentClient.desire_acne);
    this.opSensitive.setActive(Session.currentClient.desire_sensitive);
    this.opAging.setActive(Session.currentClient.desire_aging);
    this.opWrinkles.setActive(Session.currentClient.desire_wrinkles);
    this.opPimples.setActive(Session.currentClient.desire_pimples);
    this.opBlackheads.setActive(Session.currentClient.desire_blackheads);
    return this.opColoration.setActive(Session.currentClient.desire_coloration);
  };

  desiredOptions.prototype.bindToModel = function() {
    Session.currentClient.desire_skin_brightening = this.opSkinBrightening.getIsActive();
    Session.currentClient.desire_skin_hydrates = this.opSkinHydrates.getIsActive();
    Session.currentClient.desire_eye_bags = this.opEyeBags.getIsActive();
    Session.currentClient.desire_dark_spots = this.opDarkSpots.getIsActive();
    Session.currentClient.desire_pigmentation = this.opPigmentation.getIsActive();
    Session.currentClient.desire_acne = this.opAcne.getIsActive();
    Session.currentClient.desire_sensitive = this.opSensitive.getIsActive();
    Session.currentClient.desire_aging = this.opAging.getIsActive();
    Session.currentClient.desire_wrinkles = this.opWrinkles.getIsActive();
    Session.currentClient.desire_pimples = this.opPimples.getIsActive();
    Session.currentClient.desire_blackheads = this.opBlackheads.getIsActive();
    return Session.currentClient.desire_coloration = this.opColoration.getIsActive();
  };

  _createLayouts = function() {
    _createLightbox.call(this);
    return _createContent.call(this);
  };

  _createLightbox = function() {
    var lightboxContainer;
    lightboxContainer = new Fa.ContainerSurf({
      size: [650, 250],
      properties: {
        pointerEvents: 'none'
      }
    });
    this.lightbox = new Fa.RenderCtrl({
      overlap: true
    });
    lightboxContainer.add(this.lightbox);
    return this.add(Fa.Pos.center).add(lightboxContainer);
  };

  _createContent = function() {
    var radius, sections;
    radius = '10px';
    this.content = new Fa.CContainer();
    this.bg = new Fa.Surface({
      properties: {
        backgroundColor: '#000',
        border: '6px solid #888',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    this.content.add(Fa.opaqueBy(0.8)).add(this.bg);
    sections = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 6, 4]
    });
    this.options = createOptions.call(this);
    this.responder = createResponder.call(this);
    sections.sequenceFrom([Fa.EmptyView(), this.options, this.responder]);
    return this.content.add(sections);
  };

  createOptions = function() {
    var cols, rows1, rows2, rows3;
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1, 1]
    });
    rows1 = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1, 1]
    });
    rows2 = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1, 1]
    });
    rows3 = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1, 1]
    });
    this.opSkinBrightening = new Checker({
      text: 'Skin Brightening'
    });
    this.opSkinHydrates = new Checker({
      text: 'Skin Hydrates'
    });
    this.opEyeBags = new Checker({
      text: 'Eye Bags'
    });
    this.opDarkSpots = new Checker({
      text: 'Dark Spots'
    });
    this.opPigmentation = new Checker({
      text: 'Pigmentation'
    });
    this.opAcne = new Checker({
      text: 'Acne'
    });
    this.opSensitive = new Checker({
      text: 'Sensitive'
    });
    this.opAging = new Checker({
      text: 'Aging'
    });
    this.opWrinkles = new Checker({
      text: 'Wrinkles'
    });
    this.opPimples = new Checker({
      text: 'Pimples'
    });
    this.opBlackheads = new Checker({
      text: 'Blackheads'
    });
    this.opColoration = new Checker({
      text: 'Coloration'
    });
    rows1.sequenceFrom([this.opSkinBrightening, this.opSkinHydrates, this.opEyeBags, this.opDarkSpots]);
    rows2.sequenceFrom([this.opPigmentation, this.opAcne, this.opSensitive, this.opAging]);
    rows3.sequenceFrom([this.opWrinkles, this.opPimples, this.opBlackheads, this.opColoration]);
    cols.sequenceFrom([rows1, rows2, rows3]);
    return cols;
  };

  createResponder = function() {
    var cols;
    this.confirmBtn = new AsLink(new ConfirmBtn, void 0, (function() {
      this.bindToModel();
      Dispatcher.emit('update_desired_results_text');
      this.hide();
      return Dispatcher.emit('hide_backdrop');
    }).bind(this));
    this.cancelBtn = new AsLink(new CancelBtn, void 0, (function() {
      this.hide();
      return Dispatcher.emit('hide_backdrop');
    }).bind(this));
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [4, 2, 2, 2, 4]
    });
    cols.sequenceFrom([Fa.EmptyView(), this.confirmBtn.item, Fa.EmptyView(), this.cancelBtn.item, Fa.EmptyView()]);
    return cols;
  };

  desiredOptions.prototype.show = function() {
    return this.lightbox.show(this.content);
  };

  desiredOptions.prototype.hide = function() {
    this.bindFromModel();
    return this.lightbox.hide();
  };

  return desiredOptions;

})(Fa.View);


},{}],143:[function(require,module,exports){
var CChecklistResultHeader,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = CChecklistResultHeader = (function(_super) {
  var init;

  __extends(CChecklistResultHeader, _super);

  CChecklistResultHeader.DEFAULT_OPTIONS = {
    titleColor: '#fff',
    iconColor: '#fff',
    fontSize: '20px',
    iconSize: '27px'
  };

  function CChecklistResultHeader(options) {
    CChecklistResultHeader.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size, this.options.size]
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.header = new Fa.WrappedSurface({
      alignment: 'left',
      size: [true, true],
      content: "<strong>Customer's Desired Results</strong>",
      properties: {
        color: this.options.titleColor,
        fontSize: this.options.fontSize,
        textAlign: 'center'
      }
    });
    this.search = new Fa.WrappedSurface({
      alignment: 'center',
      size: [true, true],
      content: '<i class="icon-Plus"></i>',
      properties: {
        color: this.options.iconColor,
        fontSize: this.options.iconSize,
        textAlign: 'center',
        cursor: 'pointer'
      }
    });
    this.search.on('click', function() {
      return Dispatcher.emit('show_desired_opts');
    });
    flex = new Fa.FlexibleLayout({
      ratios: [10, 130, 40]
    });
    flex.sequenceFrom([Fa.EmptyView(), this.header, this.search]);
    return this.container.addToCenter(flex);
  };

  return CChecklistResultHeader;

})(Fa.CView);


},{}],144:[function(require,module,exports){
var CChecklistTristar,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = CChecklistTristar = (function(_super) {
  var firstStar, init, secondStar, setupEvents, thirdStar;

  __extends(CChecklistTristar, _super);

  CChecklistTristar.DEFAULT_OPTIONS = {
    id: 'not_set'
  };

  function CChecklistTristar(options) {
    CChecklistTristar.__super__.constructor.call(this, options);
    this.id = this.options.id;
    this.container = new Fa.CContainer();
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('session_changed:current_client', (function(_this) {
      return function() {
        switch (_this.id) {
          case 'Pigmentation':
            return _this.setRating(Session.currentClient.rating_pigmentation);
          case 'Sensitive':
            return _this.setRating(Session.currentClient.rating_sensitive);
          case 'Aging':
            return _this.setRating(Session.currentClient.rating_aging);
          case 'Acne':
            return _this.setRating(Session.currentClient.rating_acne);
          case 'Treatment Improvement':
            return _this.setRating(Session.currentClient.latestSession().treatment_improvement);
          case 'Service':
            return _this.setRating(Session.currentClient.latestSession().service);
          default:
            console.log('invalid mapping-tristar');
            return console.log(_this.id);
        }
      };
    })(this));
    init.call(this);
    this.add(this.container);
  }

  init = function() {
    var cols;
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1, 1]
    });
    this.rating = null;
    this.first = firstStar.call(this);
    this.second = secondStar.call(this);
    this.third = thirdStar.call(this);
    setupEvents.call(this);
    cols.sequenceFrom([this.first, this.second, this.third]);
    return this.container.add(cols);
  };

  setupEvents = function() {
    this.first.on('click', (function(_this) {
      return function() {
        _this.rating = 1;
        return _this.repaint();
      };
    })(this));
    this.second.on('click', (function(_this) {
      return function() {
        _this.rating = 2;
        return _this.repaint();
      };
    })(this));
    return this.third.on('click', (function(_this) {
      return function() {
        _this.rating = 3;
        return _this.repaint();
      };
    })(this));
  };

  CChecklistTristar.prototype.setRating = function(rating) {
    this.rating = rating;
    return this.repaint();
  };

  CChecklistTristar.prototype.repaint = function() {
    if (this.rating >= 1) {
      this.first.setContent('<i class="icon-star2"></i>');
    } else {
      this.first.setContent('<i class="icon-star"></i>');
    }
    if (this.rating >= 2) {
      this.second.setContent('<i class="icon-star2"></i>');
    } else {
      this.second.setContent('<i class="icon-star"></i>');
    }
    if (this.rating >= 3) {
      this.third.setContent('<i class="icon-star2"></i>');
    } else {
      this.third.setContent('<i class="icon-star"></i>');
    }
    return Dispatcher.emit("tristar_updated", {
      rating: this.rating,
      id: this.id
    });
  };

  firstStar = function() {
    var star;
    star = new Fa.Surface({
      content: '<i class="icon-star"></i>',
      properties: {
        fontSize: '30px',
        lineHeight: '1.5',
        color: '#fb9c05',
        textShadow: '-1px 0 white, 0 1px white, 1px 0 white, 0 -1px white'
      }
    });
    return star;
  };

  secondStar = function() {
    var star;
    star = new Fa.Surface({
      content: '<i class="icon-star"></i>',
      properties: {
        fontSize: '30px',
        lineHeight: '1.5',
        color: '#fb9c05',
        textShadow: '-1px 0 white, 0 1px white, 1px 0 white, 0 -1px white'
      }
    });
    return star;
  };

  thirdStar = function() {
    var star;
    star = new Fa.Surface({
      content: '<i class="icon-star"></i>',
      properties: {
        fontSize: '30px',
        lineHeight: '1.5',
        color: '#fb9c05',
        textShadow: '-1px 0 white, 0 1px white, 1px 0 white, 0 -1px white'
      }
    });
    return star;
  };

  return CChecklistTristar;

})(Fa.CView);


},{}],145:[function(require,module,exports){
var Button, SessionNumpad,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Button = Fa.Elements.Compare.active_numpad_btn;

module.exports = SessionNumpad = (function(_super) {
  var _createActiveButton, _createInactiveButton, _createNextButton, _createPage, _createPrevButton, _registerEvents;

  __extends(SessionNumpad, _super);

  SessionNumpad.DEFAULT_OPTIONS = {
    key: 'index',
    keyOffset: 1,
    boxSize: [260, 210],
    dimension: [4, 3],
    items: null,
    id: 'snap',
    maxSessions: 30
  };

  function SessionNumpad(options) {
    SessionNumpad.__super__.constructor.call(this, options);
    this.widgetInitiated = false;
    Dispatcher.pipe(this._eventInput);
    this.container = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    this.widgetRenderer = new Fa.RenderCtrl({
      overlap: false
    });
    this.container.add(this.widgetRenderer);
    _registerEvents.call(this);
    this.addToCenter(this.container);
  }

  SessionNumpad.prototype.init = function() {
    this.sessions = Session.currentClient.session;
    this.allCells = [];
    this.pages = [];
    this.currentPage = 0;
    this.totalPages = 1;
    this.activeButton = null;
    this.createRenderBox();
    this.widgetRenderer.show(this.box);
    return this.widgetInitiated = true;
  };

  SessionNumpad.prototype.syncToSess = function() {
    var sess;
    if (this.widgetInitiated) {
      sess = Session.currentSession;
      return _.each(this.allCells, (function(_this) {
        return function(cell) {
          if (cell.sess_no === sess) {
            _.each(_this.allCells, function(_cell) {
              return _cell.setInactive();
            });
            _this.activeButton = cell;
            _this.activeButton.setActive();
            if (cell.pageNo !== _this.currentPage) {
              _this.currentPage = cell.pageNo;
              return _this.pager.show(_this.pages[_this.currentPage]);
            }
          }
        };
      })(this));
    } else {
      return this.init();
    }
  };

  _registerEvents = function() {
    this._eventInput.on('session_changed:current_client', (function(_this) {
      return function() {
        _this.init();
        return _this.syncToSess();
      };
    })(this));
    return this._eventInput.on('session_changed:current_session', (function(_this) {
      return function() {
        return _this.syncToSess();
      };
    })(this));
  };

  SessionNumpad.prototype.createRenderBox = function() {
    var cell, created_item, currentPage, grid, maxInPage, onClick, page, sess;
    this.box = new Fa.CContainer();
    this.pager = new Fa.RenderCtrl({
      overlap: false
    });
    created_item = 1;
    currentPage = 0;
    maxInPage = this.options.dimension[0] * this.options.dimension[1];
    onClick = function() {
      var eventID, numpad;
      numpad = arguments[0];
      _.each(numpad.allCells, function(cell) {
        return cell.setInactive();
      });
      numpad.activeButton = this;
      numpad.activeButton.setActive();
      eventID = "" + numpad.options.id + "_current_session_updated";
      return Dispatcher.emit(eventID, {
        sess: this.sess_no
      });
    };
    while (created_item <= this.sessions) {
      if (!this.pages[currentPage]) {
        page = new Fa.CContainer({
          size: this.options.boxSize
        });
        grid = new Fa.GridLayout({
          dimensions: this.options.dimension
        });
        page.addToCenter(grid);
        page.cells = [];
        grid.sequenceFrom(page.cells);
        if (currentPage !== 0) {
          page.cells.push(_createPrevButton.call(this));
        } else {
          cell = _createActiveButton.call(this, created_item);
          cell.pageNo = currentPage;
          cell.on('click', onClick.bind(cell, this));
          page.cells.push(cell);
          this.allCells.push(cell);
          created_item++;
        }
        this.pages[currentPage] = page;
        this.totalPages += 1;
      } else {
        page = this.pages[currentPage];
        if (page.cells.length === (maxInPage - 1) && (created_item + 1) < this.sessions) {
          page.cells.push(_createNextButton.call(this));
        } else {
          cell = _createActiveButton.call(this, created_item);
          cell.pageNo = currentPage;
          cell.on('click', onClick.bind(cell, this));
          page.cells.push(cell);
          this.allCells.push(cell);
          created_item++;
        }
        if (page.cells.length === maxInPage) {
          currentPage++;
        }
      }
    }
    while (created_item <= this.options.maxSessions) {
      if (!this.pages[currentPage]) {
        page = new Fa.CContainer({
          size: this.options.boxSize
        });
        grid = new Fa.GridLayout({
          dimensions: this.options.dimension
        });
        page.addToCenter(grid);
        page.cells = [];
        grid.sequenceFrom(page.cells);
        if (currentPage !== 0) {
          page.cells.push(_createPrevButton.call(this));
        } else {
          cell = _createInactiveButton.call(this, created_item);
          cell.pageNo = currentPage;
          page.cells.push(cell);
          created_item++;
        }
        this.pages[currentPage] = page;
        this.totalPages += 1;
      } else {
        page = this.pages[currentPage];
        if (page.cells.length === (maxInPage - 1) && (created_item + 1) < this.options.maxSessions) {
          page.cells.push(_createNextButton.call(this));
        } else {
          cell = _createInactiveButton.call(this, created_item);
          cell.pageNo = currentPage;
          page.cells.push(cell);
          created_item++;
        }
        if (page.cells.length === maxInPage) {
          currentPage++;
        }
      }
    }
    sess = Session.currentClient.session;
    _.each(this.allCells, (function(_this) {
      return function(cell) {
        if (cell.sess_no === sess) {
          _.each(_this.allCells, function(_cell) {
            return _cell.setInactive();
          });
          _this.activeButton = cell;
          _this.activeButton.setActive();
          if (cell.pageNo !== _this.currentPage) {
            _this.currentPage = cell.pageNo;
            return _this.pager.show(_this.pages[_this.currentPage]);
          }
        }
      };
    })(this));
    this.pager.show(this.pages[this.currentPage]);
    return this.box.addToCenter(this.pager);
  };

  _createPage = function(pageNum) {
    var cells, i;
    cells = [];
    i = 1;
    while (i < 9) {
      cells.push(_createActiveButton.call(this, i));
      i++;
    }
    cells.push(_createNextButton.call(this));
    return cells;
  };

  _createActiveButton = function(sess_no) {
    var button;
    button = new Button({
      sess_no: sess_no
    });
    button.isActive = true;
    return button;
  };

  _createInactiveButton = function(item) {
    var button;
    button = new Fa.WrappedContainer({
      size: [60, 60],
      properties: {
        backgroundColor: 'rgba(250,124,219,0.3)',
        borderRadius: '50%',
        cursor: 'pointer'
      }
    });
    button.add(Fa.Pos.center).add(new Fa.Surface({
      size: [true, true],
      content: item,
      properties: {
        color: 'white',
        fontSize: '23px',
        cursor: 'pointer',
        pointerEvents: 'none'
      }
    }));
    button.isActive = false;
    return button;
  };

  _createPrevButton = function() {
    var prevButton, transitioning;
    prevButton = new Fa.WrappedContainer({
      size: [60, 60],
      properties: {
        backgroundColor: 'rgba(250,124,219,0.3)',
        borderRadius: '50%',
        pointerEvents: 'auto'
      }
    });
    prevButton.add(Fa.Pos.center).add(new Fa.Surface({
      size: [true, true],
      content: '<i class="ion-arrow-left-b"></i>',
      properties: {
        color: 'white',
        fontSize: '23px'
      }
    }));
    transitioning = false;
    prevButton.on('click', (function(_this) {
      return function() {
        if (!transitioning) {
          _this.currentPage -= 1;
          transitioning = true;
          return _this.pager.show(_this.pages[_this.currentPage], null, (function() {
            return transitioning = false;
          }));
        }
      };
    })(this));
    return prevButton;
  };

  _createNextButton = function() {
    var nextButton, transitioning;
    nextButton = new Fa.WrappedContainer({
      size: [60, 60],
      properties: {
        backgroundColor: 'rgba(250,124,219,0.3)',
        borderRadius: '50%',
        pointerEvents: 'auto'
      }
    });
    nextButton.add(Fa.Pos.center).add(new Fa.Surface({
      size: [true, true],
      content: '<i class="ion-arrow-right-b"></i>',
      properties: {
        color: 'white',
        fontSize: '23px'
      }
    }));
    transitioning = false;
    nextButton.on('click', (function(_this) {
      return function() {
        if (!transitioning) {
          _this.currentPage += 1;
          transitioning = true;
          return _this.pager.show(_this.pages[_this.currentPage], null, (function() {
            return transitioning = false;
          }));
        }
      };
    })(this));
    return nextButton;
  };

  return SessionNumpad;

})(Fa.CView);


},{}],146:[function(require,module,exports){
var sideMenuView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = sideMenuView = (function(_super) {
  var _createHr, _createLayouts, _createLightbox, _createMenu, _createMenuItem, _createMenuItems, _triggerAction;

  __extends(sideMenuView, _super);

  sideMenuView.DEFAULT_OPTIONS = {};

  function sideMenuView(options) {
    sideMenuView.__super__.constructor.call(this, options);
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('hide_frontdrop', (function(_this) {
      return function(params) {
        if (params && params["for"] === 'side_menu') {
          return _this.lightbox.hide(_this.menu);
        }
      };
    })(this));
  }

  _createLayouts = function() {
    _createLightbox.call(this);
    return _createMenu.call(this);
  };

  _createLightbox = function() {
    var lightboxContainer, lightboxOptions;
    lightboxContainer = new Fa.ContainerSurf({
      size: [0.25 * this.options.size[0], void 0],
      properties: {
        pointerEvents: 'none'
      }
    });
    lightboxOptions = {
      inOpacity: 1,
      outOpacity: 0,
      inTransform: Fa.Transform.translate(-this.getSize()[0], 0, 0),
      outTransform: Fa.Transform.translate(-this.getSize()[0], 0, 1),
      inTransition: {
        duration: 300,
        curve: Fa.Easing.easeOut
      },
      outTransition: {
        duration: 300,
        curve: Fa.Easing.easeOut
      }
    };
    this.lightbox = new Fa.Lightbox(lightboxOptions);
    lightboxContainer.add(this.lightbox);
    return this.add(lightboxContainer);
  };

  _createMenu = function() {
    this.menu = new Fa.ContainerSurf({
      size: [0.25 * this.options.size[0], void 0],
      properties: {
        backgroundColor: '#252525'
      }
    });
    this.menu.add(_createMenuItems.call(this));
    return this.menu.on('click', (function(_this) {
      return function() {
        return _this.hideMenu();
      };
    })(this));
  };

  _createMenuItems = function() {
    var items, layout;
    layout = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [2, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 34]
    });
    items = {
      profile: _createMenuItem.call(this, 'ion-ios7-person', 'Profile Summary', 'Dashboard'),
      camera: _createMenuItem.call(this, 'ion-camera', 'Snap', 'Snap'),
      micro: _createMenuItem.call(this, 'icon-micro', 'Micro', 'Micro'),
      compare: _createMenuItem.call(this, 'ion-images', 'Compare', 'Compare'),
      result: _createMenuItem.call(this, 'ion-heart', 'Result', 'Result'),
      matches: _createMenuItem.call(this, 'ion-clipboard', 'Matches', 'Matches'),
      checklist: _createMenuItem.call(this, 'ion-compose', 'Checklist', 'Checklist'),
      "switch": _createMenuItem.call(this, 'ion-arrow-swap', 'Switch', 'Client'),
      exit: _createMenuItem.call(this, 'ion-log-out', 'Exit', 'Splash'),
      experi: _createMenuItem.call(this, 'ion-flask', 'Experiment', 'Experi'),
      canvas: _createMenuItem.call(this, 'ion-beer', 'Developer', 'Canvas'),
      setting: _createMenuItem.call(this, 'ion-camera', 'Setting', 'Setting')
    };
    _.each(items, (function(_this) {
      return function(item) {
        return item.on('click', _triggerAction.bind(_this, item));
      };
    })(this));
    layout.sequenceFrom([Fa.EmptyView(), items.profile, _createHr(), items.camera, _createHr(), items.micro, _createHr(), items.compare, _createHr(), items.result, _createHr(), items.checklist, _createHr(), items["switch"], _createHr(), items.exit, _createHr(), Fa.EmptyView()]);
    return layout;
  };

  _createMenuItem = function(icon_class, title, link) {
    var html, item;
    html = require('../../templates/side_menu.menu_btn.hbs')({
      icon_class: icon_class,
      title: title
    });
    item = new Fa.Surface({
      content: html,
      size: [void 0, void 0],
      properties: {
        backgroundColor: '#252525',
        cursor: 'pointer'
      }
    });
    item.link = link;
    return item;
  };

  _createHr = function() {
    return new Fa.Surface({
      content: '<hr class="hr-dotted"/>'
    });
  };

  _triggerAction = function(menuItem) {
    Dispatcher.emit('page_change', {
      to: menuItem.link
    });
    menuItem.setProperties({
      backgroundColor: '#990569'
    });
    this.hideMenu();
    return Fa.Timer.setTimeout(function() {
      return menuItem.setProperties({
        backgroundColor: '#252525'
      });
    }, 400);
  };

  sideMenuView.prototype.showMenu = function() {
    Dispatcher.emit('show_backdrop', {
      "for": 'side_menu'
    });
    return this.lightbox.show(this.menu);
  };

  sideMenuView.prototype.hideMenu = function() {
    this.lightbox.hide(this.menu);
    return Dispatcher.emit('hide_backdrop');
  };

  return sideMenuView;

})(Fa.View);


},{"../../templates/side_menu.menu_btn.hbs":132}],147:[function(require,module,exports){
var Button, FrameNumpad,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Button = Fa.Elements.Compare.active_numpad_btn;

module.exports = FrameNumpad = (function(_super) {
  var _createActiveButton, _createInactiveButton, _createNextButton, _createPage, _createPrevButton, _registerEvents;

  __extends(FrameNumpad, _super);

  FrameNumpad.DEFAULT_OPTIONS = {
    key: 'index',
    keyOffset: 1,
    boxSize: [260, 210],
    dimension: [4, 3],
    items: null,
    id: 'XX',
    maxSessions: 30
  };

  function FrameNumpad(options) {
    FrameNumpad.__super__.constructor.call(this, options);
    this.widgetInitiated = false;
    Dispatcher.pipe(this._eventInput);
    this.container = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    this.widgetRenderer = new Fa.RenderCtrl({
      overlap: false
    });
    this.container.add(this.widgetRenderer);
    _registerEvents.call(this);
    this.addToCenter(this.container);
  }

  FrameNumpad.prototype.init = function() {
    this.sessions = Session.currentClient.session;
    this.allCells = [];
    this.pages = [];
    this.currentPage = 0;
    this.totalPages = 1;
    this.activeButton = null;
    this.createRenderBox();
    this.widgetRenderer.show(this.box);
    return this.widgetInitiated = true;
  };

  FrameNumpad.prototype.changeToSess = function(sess) {
    if (this.widgetInitiated) {
      return _.each(this.allCells, (function(_this) {
        return function(cell) {
          if (cell.sess_no === sess) {
            _.each(_this.allCells, function(_cell) {
              return _cell.setInactive();
            });
            _this.activeButton = cell;
            _this.activeButton.setActive();
            if (cell.pageNo !== _this.currentPage) {
              _this.currentPage = cell.pageNo;
              return _this.pager.show(_this.pages[_this.currentPage]);
            }
          }
        };
      })(this));
    } else {
      return this.init();
    }
  };

  _registerEvents = function() {};

  FrameNumpad.prototype.createRenderBox = function() {
    var cell, created_item, currentPage, grid, maxInPage, onClick, page, sess;
    this.box = new Fa.CContainer();
    this.pager = new Fa.RenderCtrl({
      overlap: false
    });
    created_item = 1;
    currentPage = 0;
    maxInPage = this.options.dimension[0] * this.options.dimension[1];
    onClick = function() {
      var eventID, numpad;
      numpad = arguments[0];
      _.each(numpad.allCells, function(cell) {
        return cell.setInactive();
      });
      numpad.activeButton = this;
      numpad.activeButton.setActive();
      eventID = "" + numpad.options.id + "_current_session_updated";
      return Dispatcher.emit(eventID, {
        sess: this.sess_no
      });
    };
    while (created_item <= this.sessions) {
      if (!this.pages[currentPage]) {
        page = new Fa.CContainer({
          size: this.options.boxSize
        });
        grid = new Fa.GridLayout({
          dimensions: this.options.dimension
        });
        page.addToCenter(grid);
        page.cells = [];
        grid.sequenceFrom(page.cells);
        if (currentPage !== 0) {
          page.cells.push(_createPrevButton.call(this));
        } else {
          cell = _createActiveButton.call(this, created_item);
          cell.pageNo = currentPage;
          cell.on('click', onClick.bind(cell, this));
          page.cells.push(cell);
          this.allCells.push(cell);
          created_item++;
        }
        this.pages[currentPage] = page;
        this.totalPages += 1;
      } else {
        page = this.pages[currentPage];
        if (page.cells.length === (maxInPage - 1) && (created_item + 1) < this.sessions) {
          page.cells.push(_createNextButton.call(this));
        } else {
          cell = _createActiveButton.call(this, created_item);
          cell.pageNo = currentPage;
          cell.on('click', onClick.bind(cell, this));
          page.cells.push(cell);
          this.allCells.push(cell);
          created_item++;
        }
        if (page.cells.length === maxInPage) {
          currentPage++;
        }
      }
    }
    while (created_item <= this.options.maxSessions) {
      if (!this.pages[currentPage]) {
        page = new Fa.CContainer({
          size: this.options.boxSize
        });
        grid = new Fa.GridLayout({
          dimensions: this.options.dimension
        });
        page.addToCenter(grid);
        page.cells = [];
        grid.sequenceFrom(page.cells);
        if (currentPage !== 0) {
          page.cells.push(_createPrevButton.call(this));
        } else {
          cell = _createInactiveButton.call(this, created_item);
          cell.pageNo = currentPage;
          page.cells.push(cell);
          created_item++;
        }
        this.pages[currentPage] = page;
        this.totalPages += 1;
      } else {
        page = this.pages[currentPage];
        if (page.cells.length === (maxInPage - 1) && (created_item + 1) < this.options.maxSessions) {
          page.cells.push(_createNextButton.call(this));
        } else {
          cell = _createInactiveButton.call(this, created_item);
          cell.pageNo = currentPage;
          page.cells.push(cell);
          created_item++;
        }
        if (page.cells.length === maxInPage) {
          currentPage++;
        }
      }
    }
    sess = Session.currentClient.session;
    _.each(this.allCells, (function(_this) {
      return function(cell) {
        if (cell.sess_no === sess) {
          _.each(_this.allCells, function(_cell) {
            return _cell.setInactive();
          });
          _this.activeButton = cell;
          _this.activeButton.setActive();
          if (cell.pageNo !== _this.currentPage) {
            _this.currentPage = cell.pageNo;
            return _this.pager.show(_this.pages[_this.currentPage]);
          }
        }
      };
    })(this));
    this.pager.show(this.pages[this.currentPage]);
    return this.box.addToCenter(this.pager);
  };

  _createPage = function(pageNum) {
    var cells, i;
    cells = [];
    i = 1;
    while (i < 9) {
      cells.push(_createActiveButton.call(this, i));
      i++;
    }
    cells.push(_createNextButton.call(this));
    return cells;
  };

  _createActiveButton = function(sess_no) {
    var button;
    button = new Button({
      sess_no: sess_no
    });
    button.isActive = true;
    return button;
  };

  _createInactiveButton = function(item) {
    var button;
    button = new Fa.WrappedContainer({
      size: [60, 60],
      properties: {
        backgroundColor: 'rgba(250,124,219,0.3)',
        borderRadius: '50%',
        cursor: 'pointer'
      }
    });
    button.add(Fa.Pos.center).add(new Fa.Surface({
      size: [true, true],
      content: item,
      properties: {
        color: 'white',
        fontSize: '23px',
        cursor: 'pointer',
        pointerEvents: 'none'
      }
    }));
    button.isActive = false;
    return button;
  };

  _createPrevButton = function() {
    var prevButton, transitioning;
    prevButton = new Fa.WrappedContainer({
      size: [60, 60],
      properties: {
        backgroundColor: 'rgba(250,124,219,0.3)',
        borderRadius: '50%',
        pointerEvents: 'auto'
      }
    });
    prevButton.add(Fa.Pos.center).add(new Fa.Surface({
      size: [true, true],
      content: '<i class="ion-arrow-left-b"></i>',
      properties: {
        color: 'white',
        fontSize: '23px'
      }
    }));
    transitioning = false;
    prevButton.on('click', (function(_this) {
      return function() {
        if (!transitioning) {
          _this.currentPage -= 1;
          transitioning = true;
          return _this.pager.show(_this.pages[_this.currentPage], null, (function() {
            return transitioning = false;
          }));
        }
      };
    })(this));
    return prevButton;
  };

  _createNextButton = function() {
    var nextButton, transitioning;
    nextButton = new Fa.WrappedContainer({
      size: [60, 60],
      properties: {
        backgroundColor: 'rgba(250,124,219,0.3)',
        borderRadius: '50%',
        pointerEvents: 'auto'
      }
    });
    nextButton.add(Fa.Pos.center).add(new Fa.Surface({
      size: [true, true],
      content: '<i class="ion-arrow-right-b"></i>',
      properties: {
        color: 'white',
        fontSize: '23px'
      }
    }));
    transitioning = false;
    nextButton.on('click', (function(_this) {
      return function() {
        if (!transitioning) {
          _this.currentPage += 1;
          transitioning = true;
          return _this.pager.show(_this.pages[_this.currentPage], null, (function() {
            return transitioning = false;
          }));
        }
      };
    })(this));
    return nextButton;
  };

  return FrameNumpad;

})(Fa.CView);


},{}],148:[function(require,module,exports){
var BrowserContent, matchBrowserView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BrowserContent = require('./c.compare.match_browser_content.coffee');

module.exports = matchBrowserView = (function(_super) {
  var _createContent, _createLayouts, _createLightbox;

  __extends(matchBrowserView, _super);

  matchBrowserView.DEFAULT_OPTIONS = {};

  function matchBrowserView(options) {
    matchBrowserView.__super__.constructor.call(this, options);
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this.renderBrowserContent.call(this);
    this._eventInput.on('photo_reindexed', this.renderBrowserContent.bind(this));
    this._eventInput.on('client:matches_updated', this.renderBrowserContent.bind(this));
    this._eventInput.on('compare_frame_a_current_session_updated', this.renderBrowserContent.bind(this));
    this._eventInput.on('compare_frame_b_current_session_updated', this.renderBrowserContent.bind(this));
    this._eventInput.on('session_changed:current_session', this.renderBrowserContent.bind(this));
    this._eventInput.on('hide_frontdrop', (function(_this) {
      return function(params) {
        if (params && params["for"] === 'match_browse_snap') {
          return _this.hide();
        }
      };
    })(this));
  }

  matchBrowserView.prototype.renderBrowserContent = function() {
    if (Session.currentClient) {
      if (this.browserContent && this.browserContent.deregister) {
        this.browserContent.deregister();
      }
      return this.browserContent = new BrowserContent();
    }
  };

  _createLayouts = function() {
    _createLightbox.call(this);
    return _createContent.call(this);
  };

  _createLightbox = function() {
    var lightboxContainer, lightboxOptions, totalContainer;
    totalContainer = new Fa.CContainer({
      classes: ['xclick']
    });
    lightboxContainer = new Fa.ContainerSurf({
      size: [void 0, void 0],
      properties: {
        pointerEvents: 'none'
      }
    });
    lightboxOptions = {
      inOpacity: 0,
      outOpacity: 0,
      inTransform: Fa.Transform.translate(0, -300, 0),
      outTransform: Fa.Transform.translate(0, -300, 1),
      inTransition: {
        duration: 300,
        curve: Fa.Easing.easeOut
      },
      outTransition: {
        duration: 300,
        curve: Fa.Easing.easeOut
      }
    };
    this.lightbox = new Fa.Lightbox(lightboxOptions);
    lightboxContainer.add(this.lightbox);
    totalContainer.addToCenter(lightboxContainer);
    return this.add(totalContainer);
  };

  _createContent = function() {
    this.content = new Fa.CContainer({
      classes: ['xclick']
    });
    this.contentRenderer = new Fa.RenderCtrl({
      overlap: false
    });
    return this.content.add(this.contentRenderer);
  };

  matchBrowserView.prototype.show = function() {
    Dispatcher.emit('hide_appfront');
    if (!this.browserContent) {
      Fa.Timer.setTimeout((function(_this) {
        return function() {
          return _this.browserContent = new BrowserContent();
        };
      })(this), 0);
    }
    return this.lightbox.show(this.content, void 0, (function(_this) {
      return function() {
        return _this.contentRenderer.show(_this.browserContent);
      };
    })(this));
  };

  matchBrowserView.prototype.hide = function() {
    this.contentRenderer.hide();
    this.lightbox.hide();
    return Dispatcher.emit('reopen_appfront');
  };

  return matchBrowserView;

})(Fa.View);


},{"./c.compare.match_browser_content.coffee":149}],149:[function(require,module,exports){
var MatchBrowserContent,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = MatchBrowserContent = (function(_super) {
  var createInfoLayout, createMatchContent, createPicslayout, createScrollview, createTakenForLayout, init;

  __extends(MatchBrowserContent, _super);

  MatchBrowserContent.DEFAULT_OPTIONS = {
    itemWidth: 500,
    scrollViewHeight: 420
  };

  function MatchBrowserContent(options) {
    MatchBrowserContent.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      properties: {
        pointerEvents: 'none'
      }
    });
    init.call(this);
    this.add(this.container);
  }

  init = function() {
    createScrollview.call(this);
    return this._eventInput.subscribe(Dispatcher.event);
  };

  MatchBrowserContent.prototype.deregister = function() {
    return this._eventInput.unsubscribe(Dispatcher.event);
  };

  createScrollview = function() {
    var containerSize, matches, rows;
    if (Session.currentClient && Session.currentClient.hasMatches()) {
      if (comparePage.left_session && comparePage.right_session) {
        matches = _.uniq(Session.currentClient.getMatchesBySession(comparePage.left_session).concat(Session.currentClient.getMatchesBySession(comparePage.right_session)));
      } else {
        matches = Session.currentClient.getMatches();
      }
      containerSize = Math.min(Conf.screenWidth, matches.length * this.options.itemWidth);
      this.picturesScrollview = new Fa.EasyScrollview({
        containerSize: [containerSize, this.options.scrollViewHeight],
        itemSize: [this.options.itemWidth, this.options.scrollViewHeight],
        direction: 0,
        paginate: false,
        scrollBarThickness: 15,
        scrollBarOpacity: 1,
        scrollBarColor: '#555',
        scrollContainerOpacity: 0,
        id: 'compare_match_browser_content',
        noScrollBar: true
      });
      this.contents = [];
      _.each(matches, (function(_this) {
        return function(match) {
          var content;
          content = createMatchContent.call(_this, match);
          content.before = match.before;
          content.after = match.after;
          return _this.contents.push(content);
        };
      })(this));
      this.picturesScrollview.addItems(this.contents);
      rows = new Fa.FlexibleLayout({
        direction: 1,
        ratios: [16, 24, 2, 4, 16]
      });
      rows.sequenceFrom([Fa.EmptyView(), this.picturesScrollview, Fa.EmptyView(), Fa.EmptyView(), Fa.EmptyView()]);
      return this.container.add(rows);
    }
  };

  createMatchContent = function(match) {
    var aft_date, aft_session, after, bef_date, bef_session, before, infoLayout, matchContainer, matchInternalContainer, matchLayout, picsLayout, takenForLayout;
    before = match.before.sized_picture || match.before.temp_path;
    after = match.after.sized_picture || match.after.temp_path;
    bef_session = match.before.session;
    bef_date = match.before.date_taken;
    aft_session = match.after.session;
    aft_date = match.after.date_taken;
    matchContainer = new Fa.CContainer({
      size: [this.options.itemWidth, this.options.scrollViewHeight],
      properties: {
        pointerEvents: 'none',
        backgroundColor: '#252525'
      }
    });
    matchInternalContainer = new Fa.CContainer({
      size: [this.options.itemWidth - 20, this.options.scrollViewHeight - 20],
      properties: {
        pointerEvents: 'none',
        backgroundColor: '#353535'
      }
    });
    matchContainer.addToCenter(matchInternalContainer);
    matchLayout = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 30, 1, 3, 1, 3]
    });
    picsLayout = createPicslayout(before, after);
    takenForLayout = createTakenForLayout();
    infoLayout = createInfoLayout(bef_session, bef_date, aft_session, aft_date);
    matchLayout.sequenceFrom([Fa.EmptyView(), picsLayout, Fa.EmptyView(), takenForLayout, Fa.EmptyView(), infoLayout]);
    matchInternalContainer.add(matchLayout);
    return matchContainer;
  };

  createPicslayout = function(before, after) {
    var afterPic, beforePic, picsLayout;
    picsLayout = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1]
    });
    beforePic = new Fa.ImageSurf({
      content: before
    });
    afterPic = new Fa.ImageSurf({
      content: after
    });
    picsLayout.sequenceFrom([beforePic, afterPic]);
    return picsLayout;
  };

  createTakenForLayout = function() {
    var afterInfo, beforeInfo, takenForLayout;
    takenForLayout = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1]
    });
    beforeInfo = new Fa.Surface({
      content: "Before",
      properties: {
        color: 'white',
        fontSize: '20px',
        textAlign: 'center'
      }
    });
    afterInfo = new Fa.Surface({
      content: "After",
      properties: {
        color: 'white',
        fontSize: '20px',
        textAlign: 'center'
      }
    });
    takenForLayout.sequenceFrom([beforeInfo, afterInfo]);
    return takenForLayout;
  };

  createInfoLayout = function(bef_session, bef_date, aft_session, aft_date) {
    var aftDateInfo, aftSessionInfo, befDateInfo, befSessionInfo, infoLayout;
    infoLayout = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1, 1, 1]
    });
    befSessionInfo = new Fa.Surface({
      content: "Session: " + bef_session,
      properties: {
        color: 'white',
        fontSize: '15px',
        textAlign: 'center'
      }
    });
    befDateInfo = new Fa.Surface({
      content: "" + bef_date,
      properties: {
        color: 'white',
        fontSize: '15px',
        textAlign: 'center'
      }
    });
    aftSessionInfo = new Fa.Surface({
      content: "Session: " + aft_session,
      properties: {
        color: 'white',
        fontSize: '15px',
        textAlign: 'center'
      }
    });
    aftDateInfo = new Fa.Surface({
      content: "" + aft_date,
      properties: {
        color: 'white',
        fontSize: '15px',
        textAlign: 'center'
      }
    });
    infoLayout.sequenceFrom([befSessionInfo, befDateInfo, aftSessionInfo, aftDateInfo]);
    return infoLayout;
  };

  return MatchBrowserContent;

})(Fa.CView);


},{}],150:[function(require,module,exports){
var AsLink, CCompareSelSnapMicro, CameraBtn, MicroBtn, SelGroup,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

CameraBtn = Fa.Elements.Dashboard.camera_btn;

MicroBtn = Fa.Elements.Dashboard.micro_btn;

SelGroup = Fa.Behaviors.SelectGroup;

AsLink = Fa.Behaviors.AsLink;

module.exports = CCompareSelSnapMicro = (function(_super) {
  var init;

  __extends(CCompareSelSnapMicro, _super);

  CCompareSelSnapMicro.DEFAULT_OPTIONS = {
    size: [void 0, void 0],
    cameraBtnActive: true,
    microBtnActive: false,
    boxShadow: 'inset 0 -80px 80px -80px #000'
  };

  function CCompareSelSnapMicro(options) {
    CCompareSelSnapMicro.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        boxShadow: this.options.boxShadow
      }
    });
    init.call(this);
    this.add(this.container);
  }

  init = function() {
    var cols;
    cols = new Fa.FlexibleLayout({
      ratios: [1, 1]
    });
    this.cameraBtn = new AsLink(new CameraBtn({
      size: [100, 100]
    }), 'Snap');
    this.microBtn = new AsLink(new MicroBtn({
      size: [100, 100]
    }));
    cols.sequenceFrom([this.cameraBtn.item, this.microBtn.item]);
    return this.container.add(cols);
  };

  return CCompareSelSnapMicro;

})(Fa.CView);


},{}],151:[function(require,module,exports){
var AsLink, CCompareSelectorSection, ClearBtn, FavBtn, MatchBtn, Radio, SelGroup, SetProfileBtn, UpdateBtn, ViewBtn, ViewMatchBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

MatchBtn = Fa.Elements.Compare.match_btn;

FavBtn = Fa.Elements.Compare.fav_btn;

ViewMatchBtn = Fa.Elements.Compare.view_match_btn;

Radio = Fa.Elements.Snap.selector_radio;

ClearBtn = Fa.Elements.Snap.clear_btn;

ViewBtn = Fa.Elements.Snap.view_btn;

SetProfileBtn = Fa.Elements.Snap.set_profile_btn;

UpdateBtn = Fa.Elements.Snap.update_btn;

SelGroup = Fa.Behaviors.SelectGroup;

AsLink = Fa.Behaviors.AsLink;

module.exports = CCompareSelectorSection = (function(_super) {
  var applyBg, init;

  __extends(CCompareSelectorSection, _super);

  CCompareSelectorSection.DEFAULT_OPTIONS = {
    size: [430, 130]
  };

  function CCompareSelectorSection(options) {
    CCompareSelectorSection.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]]
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var viewMatchBtn;
    applyBg.call(this);
    this.cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1, 1]
    });
    Dispatcher.pipe(this._eventInput);
    this.matchBtn = new MatchBtn();
    this.matchBtn.on('click', (function(_this) {
      return function() {
        if (_this.selectedLeftPhoto && _this.selectedRightPhoto) {
          if (Session.currentClient.isMatched(_this.selectedLeftPhoto, _this.selectedRightPhoto)) {
            Session.currentClient.removeMatch(_this.selectedLeftPhoto, _this.selectedRightPhoto);
            _this.matchBtn.setInactive();
            if (Conf.isProduction) {
              return navigator.notification.alert('This pair has been unmatched', void 0, 'Updates');
            }
          } else {
            Session.currentClient.createMatch(_this.selectedLeftPhoto, _this.selectedRightPhoto);
            _this.matchBtn.setActive();
            if (Conf.isProduction) {
              return navigator.notification.alert('This pair is now a match', void 0, 'Updates');
            }
          }
        }
      };
    })(this));
    this.favBtn = new FavBtn();
    this.favBtn.on('click', (function(_this) {
      return function() {
        var match;
        if (_this.selectedLeftPhoto && _this.selectedRightPhoto) {
          if (Session.currentClient.isMatched(_this.selectedLeftPhoto, _this.selectedRightPhoto)) {
            match = Session.currentClient.createMatch(_this.selectedLeftPhoto, _this.selectedRightPhoto);
            if (match.favourite) {
              Session.currentClient.unfavouriteMatch(_this.selectedLeftPhoto, _this.selectedRightPhoto);
              _this.favBtn.setInactive();
              if (Conf.isProduction) {
                return navigator.notification.alert('This pair is now removed from favourites', void 0, 'Updates');
              }
            } else {
              Session.currentClient.favouriteMatch(_this.selectedLeftPhoto, _this.selectedRightPhoto);
              _this.favBtn.setActive();
              if (Conf.isProduction) {
                return navigator.notification.alert('This pair is now added to favourites', void 0, 'Updates');
              }
            }
          }
        }
      };
    })(this));
    viewMatchBtn = new AsLink(new ViewMatchBtn(), void 0, ((function(_this) {
      return function() {
        return Dispatcher.emit('match_browse_snap');
      };
    })(this)));
    this.cols.sequenceFrom([this.matchBtn, this.favBtn, viewMatchBtn.item]);
    this.viewMatchBtn = viewMatchBtn.item;
    return this.container.add(this.cols);
  };

  CCompareSelectorSection.prototype.updateMatchBtn = function() {
    var match;
    if (this.selectedLeftPhoto && this.selectedRightPhoto) {
      if (Session.currentClient.isMatched(this.selectedLeftPhoto, this.selectedRightPhoto)) {
        this.matchBtn.setActive();
        match = Session.currentClient.createMatch(this.selectedLeftPhoto, this.selectedRightPhoto);
        if (match.favourite) {
          return this.favBtn.setActive();
        } else {
          return this.favBtn.setInactive();
        }
      } else {
        this.matchBtn.setInactive();
        return this.favBtn.setInactive();
      }
    }
  };

  applyBg = function() {
    var bg, radius;
    radius = '20px';
    bg = new Fa.Surface({
      properties: {
        backgroundColor: '#000',
        pointerEvents: 'none',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    return this.container.add(Fa.opaqueBy(0.2)).add(bg);
  };

  return CCompareSelectorSection;

})(Fa.CView);


},{}],152:[function(require,module,exports){
var AsLink, CDashboardActionButtons, CameraBtn, CompareBtn, MicroBtn, ResultBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

CameraBtn = Fa.Elements.Dashboard.camera_btn;

MicroBtn = Fa.Elements.Dashboard.micro_btn;

CompareBtn = Fa.Elements.Dashboard.compare_btn;

ResultBtn = Fa.Elements.Dashboard.result_btn;

AsLink = Fa.Behaviors.AsLink;

module.exports = CDashboardActionButtons = (function(_super) {
  var init;

  __extends(CDashboardActionButtons, _super);

  CDashboardActionButtons.DEFAULT_OPTIONS = {
    size: [void 0, void 0],
    sectionAColor: '-webkit-gradient(linear, left top, left bottom, color-stop(0%,#c89a58), color-stop(100%,#a84077))',
    sectionBColor: '-webkit-gradient(linear, left top, left bottom, color-stop(0%,#902261), color-stop(51%,#661e4d), color-stop(100%,#902261))',
    sectionCColor: '-webkit-gradient(linear, left top, left bottom, color-stop(0%,#992a65), color-stop(100%,#a59243))'
  };

  function CDashboardActionButtons(options) {
    CDashboardActionButtons.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.backgroundColor
      }
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var sectionAWrapper, sectionBWrapper, sectionCWrapper;
    this.sections = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1]
    });
    this.sectionARows = new Fa.FlexibleLayout({
      ratios: [1, 1]
    });
    this.cameraBtn = new AsLink(new CameraBtn(), 'Snap');
    this.microBtn = new AsLink(new MicroBtn(), 'Micro');
    this.compareBtn = new AsLink(new CompareBtn(), 'Compare');
    this.resultBtn = new AsLink(new ResultBtn(), 'Result');
    this.sectionARows.sequenceFrom([this.cameraBtn.item, this.microBtn.item]);
    sectionAWrapper = new Fa.CContainer({
      properties: {
        background: this.options.sectionAColor
      }
    });
    sectionBWrapper = new Fa.CContainer({
      properties: {
        background: this.options.sectionBColor
      }
    });
    sectionCWrapper = new Fa.CContainer({
      properties: {
        background: this.options.sectionCColor
      }
    });
    sectionAWrapper.addToCenter(this.sectionARows);
    sectionBWrapper.addToCenter(this.compareBtn.item);
    sectionCWrapper.addToCenter(this.resultBtn.item);
    this.sections.sequenceFrom([sectionAWrapper, sectionBWrapper, sectionCWrapper]);
    return this.container.addToCenter(this.sections);
  };

  return CDashboardActionButtons;

})(Fa.CView);


},{}],153:[function(require,module,exports){
var CDashboardFirstVisit, Calendar,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Calendar = Fa.Elements.Dashboard.first_visit_cal;

module.exports = CDashboardFirstVisit = (function(_super) {
  var init, setClient;

  __extends(CDashboardFirstVisit, _super);

  CDashboardFirstVisit.DEFAULT_OPTIONS = {
    size: [void 0, void 0],
    backgroundColor: 'rgba(5,5,5,0.4)',
    labelColor: '#b6c4d6',
    labelSize: 17,
    dateColor: 'white',
    dateSize: 28
  };

  function CDashboardFirstVisit(options) {
    var error;
    CDashboardFirstVisit.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.backgroundColor
      }
    });
    init.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('session_changed:current_session', setClient.bind(this));
    try {
      setClient.call(this);
    } catch (_error) {
      error = _error;
      console.log(error);
    }
    this.addToCenter(this.container);
  }

  setClient = function() {
    var client;
    client = Session.currentClient;
    if (client) {
      return this.firstVisit.surface.setContent("" + (client.firstVisit()));
    }
  };

  init = function() {
    var cal;
    this.columns = new Fa.FlexibleLayout({
      ratios: [1, 4, 6, 2]
    });
    cal = new Calendar();
    this.label = new Fa.WrappedSurface({
      size: [true, true],
      content: 'First Visit',
      properties: {
        fontSize: this.options.labelSize + 'px',
        color: this.options.labelColor
      }
    });
    this.firstVisit = new Fa.WrappedSurface({
      size: [true, true],
      content: '11.02.2014',
      properties: {
        fontSize: this.options.dateSize + 'px',
        color: this.options.dateColor
      }
    });
    this.rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [2, 3, 4, 2]
    });
    this.rows.sequenceFrom([Fa.EmptyView(), this.label, this.firstVisit, Fa.EmptyView()]);
    this.columns.sequenceFrom([Fa.EmptyView(), cal, this.rows, Fa.EmptyView()]);
    return this.container.addToCenter(this.columns);
  };

  CDashboardFirstVisit.prototype.setDate = function(date) {
    return this.date.surface.setContent(date);
  };

  return CDashboardFirstVisit;

})(Fa.CView);


},{}],154:[function(require,module,exports){
var CDashboardLastTreatment, Calendar,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Calendar = Fa.Elements.Dashboard.last_visit_cal;

module.exports = CDashboardLastTreatment = (function(_super) {
  var init, setClient;

  __extends(CDashboardLastTreatment, _super);

  CDashboardLastTreatment.DEFAULT_OPTIONS = {
    size: [void 0, void 0],
    backgroundColor: 'rgba(5,5,5,0.2)',
    labelColor: '#b6c4d6',
    labelSize: 17,
    dateColor: 'white',
    dateSize: 28
  };

  function CDashboardLastTreatment(options) {
    var error;
    CDashboardLastTreatment.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.backgroundColor
      }
    });
    init.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('session_changed:current_session', setClient.bind(this));
    try {
      setClient.call(this);
    } catch (_error) {
      error = _error;
      console.log(error);
    }
    this.addToCenter(this.container);
  }

  setClient = function() {
    var client;
    client = Session.currentClient;
    if (client) {
      return this.lastTreatment.surface.setContent("" + (client.lastVisit()));
    }
  };

  init = function() {
    var cal;
    this.columns = new Fa.FlexibleLayout({
      ratios: [1, 4, 6, 2]
    });
    cal = new Calendar();
    this.label = new Fa.WrappedSurface({
      size: [true, true],
      content: 'Last Treatment',
      properties: {
        fontSize: this.options.labelSize + 'px',
        color: this.options.labelColor
      }
    });
    this.lastTreatment = new Fa.WrappedSurface({
      size: [true, true],
      content: '18.04.2014',
      properties: {
        fontSize: this.options.dateSize + 'px',
        color: this.options.dateColor
      }
    });
    this.rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [2, 3, 4, 2]
    });
    this.rows.sequenceFrom([Fa.EmptyView(), this.label, this.lastTreatment, Fa.EmptyView()]);
    this.columns.sequenceFrom([Fa.EmptyView(), cal, this.rows, Fa.EmptyView()]);
    return this.container.addToCenter(this.columns);
  };

  CDashboardLastTreatment.prototype.setDate = function(date) {
    return this.date.surface.setContent(date);
  };

  return CDashboardLastTreatment;

})(Fa.CView);


},{}],155:[function(require,module,exports){
var AsLink, CMicroSelectorSection, ClearBtn, Radio, SelGroup, UpdateBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Radio = Fa.Elements.Snap.selector_radio;

ClearBtn = Fa.Elements.Snap.clear_btn;

UpdateBtn = Fa.Elements.Snap.update_btn;

SelGroup = Fa.Behaviors.SelectGroup;

AsLink = Fa.Behaviors.AsLink;

module.exports = CMicroSelectorSection = (function(_super) {
  var applyBg, createBeforeAfter, createZones, init;

  __extends(CMicroSelectorSection, _super);

  CMicroSelectorSection.DEFAULT_OPTIONS = {
    size: [720, 130]
  };

  function CMicroSelectorSection(options) {
    CMicroSelectorSection.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]]
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var befAft, clearBtn, updateBtn, zones;
    applyBg.call(this);
    this.cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1, 1, 1, 1]
    });
    befAft = createBeforeAfter.call(this);
    zones = createZones.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('before_after_selector_section_change', (function(_this) {
      return function() {
        var error;
        try {
          _this.setTakenTo(Session.currentPhoto.taken_for);
          if (Session.currentPhoto.angle) {
            return _this.setAngleTo(Session.currentPhoto.angle);
          } else {
            return _this.setAngleTo(null);
          }
        } catch (_error) {
          error = _error;
          return console.log(error);
        }
      };
    })(this));
    clearBtn = new AsLink(new ClearBtn(), void 0, ((function(_this) {
      return function() {
        var onConfirm;
        onConfirm = function(index) {
          if (index === 1) {
            Session.currentPhoto.del();
            if (Session.currentClient.photos.length > 0) {
              return Session.setCurrentPhoto(Session.currentClient.photos[0]);
            } else {
              return Session.setCurrentPhoto(null);
            }
          }
        };
        if (Conf.isProduction) {
          return navigator.notification.confirm('Clear this picture?', onConfirm, 'Clear', ['Yes', 'No']);
        } else {
          return onConfirm(1);
        }
      };
    })(this)));
    updateBtn = new AsLink(new UpdateBtn(), void 0, ((function(_this) {
      return function() {
        var onConfirm;
        onConfirm = function(index) {
          if (index === 1 && Session.currentPhoto) {
            Session.currentPhoto.angle = _this.selGroupAngles.value;
            Session.currentPhoto.taken_for = _this.selGroupBefAfter.value;
            Session.currentPhoto.save();
            return Dispatcher.emit('current_photo_fields_changed');
          }
        };
        if (Conf.isProduction) {
          return navigator.notification.confirm('Confirm update?', onConfirm, 'Update', ['Yes', 'No']);
        } else {
          return onConfirm(1);
        }
      };
    })(this)));
    this.cols.sequenceFrom([befAft, zones, Fa.EmptyView(), clearBtn.item, updateBtn.item]);
    return this.container.add(this.cols);
  };

  CMicroSelectorSection.prototype.setTakenTo = function(takenStatus) {
    if (takenStatus === 'Before') {
      return this.selGroupBefAfter.setIndexToActive(0);
    } else {
      return this.selGroupBefAfter.setIndexToActive(1);
    }
  };

  CMicroSelectorSection.prototype.setAngleTo = function(angle) {
    if (angle === null) {
      this.selGroupAngles.setToNullItem();
    }
    if (angle === 'Left') {
      this.selGroupAngles.setIndexToActive(0);
    }
    if (angle === 'Right') {
      this.selGroupAngles.setIndexToActive(1);
    }
    if (angle === 'Front') {
      this.selGroupAngles.setIndexToActive(2);
    }
    if (angle === 'Others') {
      return this.selGroupAngles.setIndexToActive(3);
    }
  };

  applyBg = function() {
    var bg, radius;
    radius = '20px';
    bg = new Fa.Surface({
      properties: {
        backgroundColor: '#000',
        pointerEvents: 'none',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    return this.container.add(Fa.opaqueBy(0.2)).add(bg);
  };

  createBeforeAfter = function() {
    var afterRadio, beforeRadio, externalRadio, internalRadio, seqs;
    seqs = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1, 1]
    });
    beforeRadio = new Radio({
      title: 'Before'
    });
    afterRadio = new Radio({
      title: 'After'
    });
    this.selGroupBefAfter = new SelGroup([beforeRadio, afterRadio], ['Before', 'After']);
    internalRadio = new Radio({
      title: 'Internal'
    });
    externalRadio = new Radio({
      title: 'External'
    });
    this.selGroupInternalExternal = new SelGroup([internalRadio, externalRadio], ['Internal', 'External']);
    seqs.sequenceFrom([beforeRadio, afterRadio, internalRadio, externalRadio]);
    return seqs;
  };

  createZones = function() {
    var backAreaRadio, leftEarRadio, neckRadio, rightEarRadio, seqs;
    seqs = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1, 1]
    });
    backAreaRadio = new Radio({
      title: 'Back Area'
    });
    neckRadio = new Radio({
      title: 'Neck'
    });
    leftEarRadio = new Radio({
      title: 'Left Ear'
    });
    rightEarRadio = new Radio({
      title: 'Right Ear'
    });
    this.selGroupAngles = new SelGroup([backAreaRadio, neckRadio, leftEarRadio, rightEarRadio], ['Back Area', 'Neck', 'Left Ear', 'Right Ear']);
    seqs.sequenceFrom([backAreaRadio, neckRadio, leftEarRadio, rightEarRadio]);
    return seqs;
  };

  return CMicroSelectorSection;

})(Fa.CView);


},{}],156:[function(require,module,exports){
var AsLink, CancelBtn, Checker, ConfirmBtn, SelectInput, clientFilter,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Checker = Fa.Elements.Checklist.checker;

SelectInput = Fa.Elements.Common.select_input;

ConfirmBtn = Fa.Elements.Checklist.confirm_btn;

CancelBtn = Fa.Elements.Checklist.cancel_btn;

AsLink = Fa.Behaviors.AsLink;

module.exports = clientFilter = (function(_super) {
  var createChoices, createColOne, createColTwo, createResponder, _createContent, _createLayouts, _createLightbox;

  __extends(clientFilter, _super);

  clientFilter.DEFAULT_OPTIONS = {};

  function clientFilter(options) {
    clientFilter.__super__.constructor.call(this, options);
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('session_changed:current_client', (function(_this) {
      return function() {
        return _this.bindFromModel();
      };
    })(this));
  }

  clientFilter.prototype.bindFromModel = function() {
    this.opt1.setActive(Session.clientFilterFav);
    this.opt2.setActive(Session.clientFilterPigmentation);
    this.opt3.setActive(Session.clientFilterAcne);
    this.opt4.setActive(Session.clientFilterSensitive);
    this.opt5.setActive(Session.clientFilterAging);
    return this.opt6.setValue(Session.clientFilterNoOfResult);
  };

  clientFilter.prototype.bindToModel = function() {
    Session.clientFilterFav = this.opt1.getIsActive();
    Session.clientFilterPigmentation = this.opt2.getIsActive();
    Session.clientFilterAcne = this.opt3.getIsActive();
    Session.clientFilterSensitive = this.opt4.getIsActive();
    Session.clientFilterAging = this.opt5.getIsActive();
    return Session.clientFilterNoOfResult = this.opt6.getIntValue();
  };

  _createLayouts = function() {
    _createLightbox.call(this);
    return _createContent.call(this);
  };

  _createLightbox = function() {
    var lightboxContainer;
    lightboxContainer = new Fa.ContainerSurf({
      size: [420, 250],
      properties: {
        pointerEvents: 'none'
      }
    });
    this.lightbox = new Fa.RenderCtrl({
      overlap: true
    });
    lightboxContainer.add(this.lightbox);
    return this.add(Fa.Pos.center).add(lightboxContainer);
  };

  _createContent = function() {
    var radius, sections;
    radius = '10px';
    this.content = new Fa.CContainer();
    this.bg = new Fa.Surface({
      properties: {
        backgroundColor: '#000',
        border: '6px solid #888',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    this.content.add(Fa.opaqueBy(0.8)).add(this.bg);
    sections = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 6, 4]
    });
    this.options = createChoices.call(this);
    this.responder = createResponder.call(this);
    sections.sequenceFrom([Fa.EmptyView(), this.options, this.responder]);
    return this.content.add(sections);
  };

  createChoices = function() {
    var colOne, colTwo, cols;
    colOne = createColOne.call(this);
    colTwo = createColTwo.call(this);
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [3, 8, 1, 8, 1]
    });
    cols.sequenceFrom([Fa.EmptyView(), colOne, Fa.EmptyView(), colTwo, Fa.EmptyView()]);
    return cols;
  };

  createColOne = function() {
    var rows;
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1]
    });
    this.opt1 = new Checker({
      text: 'Favourites',
      size: [220, 40]
    });
    this.opt2 = new Checker({
      text: 'Pigmentation',
      size: [220, 40]
    });
    this.opt3 = new Checker({
      text: 'Acne',
      size: [220, 40]
    });
    rows.sequenceFrom([this.opt1, this.opt2, this.opt3]);
    return rows;
  };

  createColTwo = function() {
    var rows;
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1]
    });
    this.opt4 = new Checker({
      text: 'Sensitive',
      size: [220, 40]
    });
    this.opt5 = new Checker({
      text: 'Aging',
      size: [220, 40]
    });
    this.opt6 = new SelectInput({
      id: 'client_filter',
      choices: [10, 20, 50],
      defaultChoiceIndex: 1
    });
    window.select_list = this.opt6;
    rows.sequenceFrom([this.opt4, this.opt5, this.opt6]);
    return rows;
  };

  createResponder = function() {
    var cols;
    this.confirmBtn = new AsLink(new ConfirmBtn, void 0, (function() {
      this.bindToModel();
      Dispatcher.emit('update_client_filter_settings');
      this.hide();
      return Dispatcher.emit('hide_backdrop');
    }).bind(this));
    this.cancelBtn = new AsLink(new CancelBtn, void 0, (function() {
      this.hide();
      return Dispatcher.emit('hide_backdrop');
    }).bind(this));
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 2, 1, 2, 1]
    });
    cols.sequenceFrom([Fa.EmptyView(), this.confirmBtn.item, Fa.EmptyView(), this.cancelBtn.item, Fa.EmptyView()]);
    return cols;
  };

  clientFilter.prototype.show = function() {
    return this.lightbox.show(this.content);
  };

  clientFilter.prototype.hide = function() {
    this.bindFromModel();
    return this.lightbox.hide();
  };

  return clientFilter;

})(Fa.View);


},{}],157:[function(require,module,exports){
var CResultClientHeader,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = CResultClientHeader = (function(_super) {
  var init;

  __extends(CResultClientHeader, _super);

  CResultClientHeader.DEFAULT_OPTIONS = {
    titleColor: '#fff',
    iconColor: '#fb9c05',
    fontSize: '20px',
    iconSize: '27px'
  };

  function CResultClientHeader(options) {
    CResultClientHeader.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size, this.options.size],
      properties: {
        boxShadow: '0 -15px 15px -15px #333, 0 15px 15px -15px #333'
      }
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.header = new Fa.WrappedSurface({
      alignment: 'left',
      size: [true, true],
      content: "<strong>View Customers</strong>",
      properties: {
        color: this.options.titleColor,
        fontSize: this.options.fontSize,
        textAlign: 'center'
      }
    });
    this.search = new Fa.WrappedSurface({
      alignment: 'center',
      size: [true, true],
      content: '<i class="icon-Plus"></i>',
      properties: {
        color: this.options.iconColor,
        fontSize: this.options.iconSize,
        textAlign: 'center',
        cursor: 'pointer'
      }
    });
    this.search.on('click', function() {
      return Dispatcher.emit('show_client_filter');
    });
    flex = new Fa.FlexibleLayout({
      ratios: [10, 130, 40]
    });
    flex.sequenceFrom([Fa.EmptyView(), this.header, this.search]);
    return this.container.addToCenter(flex);
  };

  return CResultClientHeader;

})(Fa.CView);


},{}],158:[function(require,module,exports){
var matchviewView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = matchviewView = (function(_super) {
  var hideFunc, _createContent, _createLayouts, _createLightbox;

  __extends(matchviewView, _super);

  matchviewView.DEFAULT_OPTIONS = {};

  function matchviewView(options) {
    matchviewView.__super__.constructor.call(this, options);
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('change_match_photos', (function(_this) {
      return function(payload) {
        _this.beforePic = payload.beforePic;
        _this.afterPic = payload.afterPic;
        _this.beforeDate = payload.beforeDate;
        _this.afterDate = payload.afterDate;
        _this.content.removeListener('click', hideFunc.bind(_this));
        return _createContent.call(_this);
      };
    })(this));
    this._eventInput.on('hide_frontdrop', (function(_this) {
      return function(params) {
        if (params && params["for"] === 'show_match_picture') {
          return _this.hide();
        }
      };
    })(this));
  }

  _createLayouts = function() {
    _createLightbox.call(this);
    return _createContent.call(this);
  };

  hideFunc = function() {
    return Dispatcher.emit('hide_frontdrop', {
      "for": 'show_match_picture'
    });
  };

  _createLightbox = function() {
    var lightboxContainer;
    lightboxContainer = new Fa.ContainerSurf({
      size: [Conf.screenWidth, Conf.screenHeight],
      properties: {
        pointerEvents: 'none'
      }
    });
    this.lightbox = new Fa.RenderCtrl({
      overlap: true
    });
    lightboxContainer.add(this.lightbox);
    return this.add(Fa.Pos.center).add(lightboxContainer);
  };

  _createContent = function() {
    var html;
    html = require('../../templates/matchview.hbs')({
      before: this.beforePic,
      after: this.afterPic,
      beforeDate: this.beforeDate,
      afterDate: this.afterDate
    });
    this.content = new Fa.Surface({
      content: html,
      size: [void 0, void 0]
    });
    return this.content.on('click', hideFunc.bind(this));
  };

  matchviewView.prototype.show = function() {
    Dispatcher.emit('hide_appfront');
    return this.lightbox.show(this.content);
  };

  matchviewView.prototype.hide = function() {
    this.lightbox.hide();
    Dispatcher.emit('reopen_appfront');
    return Dispatcher.emit('hide_backdrop');
  };

  return matchviewView;

})(Fa.View);


},{"../../templates/matchview.hbs":129}],159:[function(require,module,exports){
var CResultSessionBox,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = CResultSessionBox = (function(_super) {
  __extends(CResultSessionBox, _super);

  CResultSessionBox.DEFAULT_OPTIONS = {};

  function CResultSessionBox(options) {
    var html, item;
    CResultSessionBox.__super__.constructor.call(this, options);
    this.match = options.match;
    this.matchId = options.matchId;
    this.container = new Fa.CContainer({
      size: [500, 400],
      properties: {
        pointerEvents: 'none'
      }
    });
    if (this.match.favourite === true || this.match.favourite === 'true') {
      html = require('../../templates/result_box_fav.hbs')({
        title: "Session " + this.match.session + " - " + this.matchId,
        beforePic: this.match.before.sized_picture || this.match.before.temp_path,
        afterPic: this.match.after.sized_picture || this.match.after.temp_path,
        fullBeforePic: this.match.before.large_picture || this.match.before.temp_path,
        fullAfterPic: this.match.after.large_picture || this.match.after.temp_path,
        sessBef: this.match.before.session,
        sessAft: this.match.after.session,
        dateTakenBef: this.match.before.date_taken,
        dateTakenAft: this.match.after.date_taken,
        angleBef: this.match.before.angle || '',
        angleAft: this.match.after.angle || '',
        takenBef: this.match.before.taken_for,
        takenAft: this.match.after.taken_for,
        timestampBef: this.match.before.timestamp,
        timestampAft: this.match.after.timestamp
      });
    } else {
      html = require('../../templates/result_box.hbs')({
        title: "Session " + this.match.session + " - " + this.matchId,
        beforePic: this.match.before.sized_picture || this.match.before.temp_path,
        afterPic: this.match.after.sized_picture || this.match.after.temp_path,
        fullBeforePic: this.match.before.large_picture || this.match.before.temp_path,
        fullAfterPic: this.match.after.large_picture || this.match.after.temp_path,
        sessBef: this.match.before.session,
        sessAft: this.match.after.session,
        dateTakenBef: this.match.before.date_taken,
        dateTakenAft: this.match.after.date_taken,
        angleBef: this.match.before.angle || '',
        angleAft: this.match.after.angle || '',
        takenBef: this.match.before.taken_for,
        takenAft: this.match.after.taken_for,
        timestampBef: this.match.before.timestamp,
        timestampAft: this.match.after.timestamp
      });
    }
    item = new Fa.Surface({
      content: html,
      size: [500, 400]
    });
    this.container.add(item);
    this.add(Fa.translateZBy(-20)).add(this.container);
  }

  return CResultSessionBox;

})(Fa.CView);


},{"../../templates/result_box.hbs":130,"../../templates/result_box_fav.hbs":131}],160:[function(require,module,exports){
var CResultSessionRowView, SessionBox,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SessionBox = require('./c.result.session_box.coffee');

module.exports = CResultSessionRowView = (function(_super) {
  var createContent, createHr, createLastVisitTopBar, createTitle, createTopBar, init;

  __extends(CResultSessionRowView, _super);

  CResultSessionRowView.DEFAULT_OPTIONS = {
    width: 600,
    height: 500,
    favouritesOnly: false
  };

  function CResultSessionRowView(options) {
    CResultSessionRowView.__super__.constructor.call(this, options);
    this.data = this.options.data;
    this.favouritesOnly = this.options.favouritesOnly;
    this.container = new Fa.CContainer({
      size: [this.options.width, this.options.height],
      properties: {
        pointerEvents: 'none'
      }
    });
    init.call(this);
    this.add(this.container);
  }

  init = function() {
    var rows;
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 4, 40, 3]
    });
    this.topBar = createTopBar.call(this);
    this.hr = createHr.call(this);
    rows.sequenceFrom([Fa.EmptyView(), this.topBar, createContent.call(this), this.hr]);
    return this.container.add(rows);
  };

  createContent = function() {
    var i, matches, scrollviewItems, session;
    this.scrollview = new Fa.EasyScrollview({
      containerSize: [this.options.width, 400],
      itemSize: [500, 400],
      direction: 0,
      paginate: false,
      scrollBarThickness: 11,
      scrollBarOpacity: 0.5,
      scrollBarColor: '#555',
      scrollContainerOpacity: 0,
      id: 'session_horizontal_list_view',
      noScrollBar: true
    });
    scrollviewItems = [];
    i = 0;
    matches = this.data.client.getMatchesBySession(this.data.sess_no);
    while (i < matches.length) {
      if (!this.favouritesOnly || matches[i].favourite) {
        session = new SessionBox({
          match: matches[i],
          matchId: i + 1
        });
        scrollviewItems.push(session);
      }
      i++;
    }
    this.scrollview.addItems(scrollviewItems);
    return this.scrollview;
  };

  createTopBar = function() {
    var cols, lastVisit, title;
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 7, 20, 10, 1]
    });
    title = createTitle.call(this);
    lastVisit = createLastVisitTopBar.call(this);
    cols.sequenceFrom([Fa.EmptyView(), title, Fa.EmptyView(), lastVisit, Fa.EmptyView()]);
    return cols;
  };

  createTitle = function() {
    var titleBox, titleBoxContainer;
    titleBoxContainer = new Fa.CContainer();
    titleBox = new Fa.CContainer({
      properties: {
        border: '5px solid #fff',
        borderTopLeftRadius: '10px',
        borderTopRightRadius: '10px',
        borderBottomLeftRadius: '10px',
        borderBottomRightRadius: '10px'
      }
    });
    titleBoxContainer.add(Fa.opaqueBy(0.5)).add(titleBox);
    this.title = new Fa.Surface({
      size: [true, true],
      content: "Session " + this.data.sess_no,
      properties: {
        fontSize: '18px',
        textAlign: 'center',
        fontWeight: 'bolder',
        color: '#fff'
      }
    });
    titleBoxContainer.addToCenter(this.title);
    return titleBoxContainer;
  };

  createLastVisitTopBar = function() {
    var container;
    container = new Fa.CContainer();
    this.lastVisit = new Fa.Surface({
      size: [true, true],
      content: "<strong><i style=\"font-style: italic\">Last Visit</i>: " + this.data.session.date + "</strong>",
      properties: {
        fontSize: '17px',
        textAlign: 'center',
        color: '#e68e00'
      }
    });
    container.addToCenter(this.lastVisit);
    return container;
  };

  createHr = function() {
    var cols, hr;
    cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 38]
    });
    hr = new Fa.Surface({
      content: '<hr class="style-six">'
    });
    cols.sequenceFrom([Fa.EmptyView(), hr]);
    return cols;
  };

  return CResultSessionRowView;

})(Fa.CView);


},{"./c.result.session_box.coffee":159}],161:[function(require,module,exports){
var BrowserContent, browserView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BrowserContent = require('./c.snap.browser_content.coffee');

module.exports = browserView = (function(_super) {
  var _createContent, _createLayouts, _createLightbox;

  __extends(browserView, _super);

  browserView.DEFAULT_OPTIONS = {};

  function browserView(options) {
    var error;
    browserView.__super__.constructor.call(this, options);
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this.renderBrowserContent.call(this);
    this._eventInput.on('photo_reindexed', this.renderBrowserContent.bind(this));
    this._eventInput.on('session_changed:current_session', this.renderBrowserContent.bind(this));
    this._eventInput.on('update_snap_browser_content', this.renderBrowserContent.bind(this));
    try {
      this.renderBrowserContent.call(this);
    } catch (_error) {
      error = _error;
      console.log(error);
    }
    this._eventInput.on('hide_frontdrop', (function(_this) {
      return function(params) {
        if (params && params["for"] === 'browse_snap') {
          return _this.hide();
        }
      };
    })(this));
  }

  browserView.prototype.renderBrowserContent = function() {
    if (Session.currentClient) {
      if (this.browserContent && this.browserContent.deregister) {
        this.browserContent.deregister();
      }
      return this.browserContent = new BrowserContent();
    }
  };

  _createLayouts = function() {
    _createLightbox.call(this);
    return _createContent.call(this);
  };

  _createLightbox = function() {
    var lightboxContainer, lightboxOptions, totalContainer;
    totalContainer = new Fa.CContainer({
      properties: {
        pointerEvents: 'none'
      }
    });
    lightboxContainer = new Fa.ContainerSurf({
      size: [void 0, void 0],
      properties: {
        pointerEvents: 'none'
      }
    });
    lightboxOptions = {
      inOpacity: 0,
      outOpacity: 0,
      inTransform: Fa.Transform.translate(0, -300, 0),
      outTransform: Fa.Transform.translate(0, -300, 1),
      inTransition: {
        duration: 300,
        curve: Fa.Easing.easeOut
      },
      outTransition: {
        duration: 300,
        curve: Fa.Easing.easeOut
      }
    };
    this.lightbox = new Fa.Lightbox(lightboxOptions);
    lightboxContainer.add(this.lightbox);
    totalContainer.addToCenter(lightboxContainer);
    return this.add(totalContainer);
  };

  _createContent = function() {
    this.content = new Fa.CContainer({
      properties: {
        backgroundColor: '#252525',
        pointerEvents: 'none'
      }
    });
    this.contentRenderer = new Fa.RenderCtrl({
      overlap: false
    });
    return this.content.add(this.contentRenderer);
  };

  browserView.prototype.show = function() {
    Dispatcher.emit('hide_appfront');
    return this.lightbox.show(this.content, void 0, (function(_this) {
      return function() {
        return _this.contentRenderer.show(_this.browserContent, void 0, function() {
          return $('.size-140-180').nailthumb({
            width: 280,
            height: 360,
            replaceAnimation: null
          });
        });
      };
    })(this));
  };

  browserView.prototype.hide = function() {
    this.lightbox.hide();
    this.contentRenderer.hide();
    return Dispatcher.emit('reopen_appfront');
  };

  return browserView;

})(Fa.View);


},{"./c.snap.browser_content.coffee":162}],162:[function(require,module,exports){
var CSnapBrowserContent,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = CSnapBrowserContent = (function(_super) {
  var createScrollview, init;

  __extends(CSnapBrowserContent, _super);

  CSnapBrowserContent.DEFAULT_OPTIONS = {
    itemWidth: 280,
    scrollBarHeight: 26,
    scrollViewHeight: 360
  };

  function CSnapBrowserContent(options) {
    CSnapBrowserContent.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      properties: {
        pointerEvents: 'none'
      }
    });
    init.call(this);
    this.add(this.container);
  }

  init = function() {
    createScrollview.call(this);
    return this._eventInput.subscribe(Dispatcher.event);
  };

  CSnapBrowserContent.prototype.deregister = function() {
    return this._eventInput.unsubscribe(Dispatcher.event);
  };

  createScrollview = function() {
    var containerSize, photos;
    if (Session.currentClient) {
      photos = Session.currentClient.snapPhotosInSession(Session.currentSession);
      containerSize = Math.min(Conf.screenWidth, photos.length * this.options.itemWidth);
      this.picturesScrollview = new Fa.EasyScrollview({
        containerSize: [containerSize, this.options.scrollViewHeight],
        itemSize: [this.options.itemWidth, this.options.scrollViewHeight],
        direction: 0,
        paginate: false,
        scrollBarThickness: 15,
        scrollBarOpacity: 1,
        scrollBarColor: '#555',
        scrollContainerOpacity: 0,
        id: 'snap_browser_content',
        noScrollBar: true
      });
      this.images = [];
      _.each(photos, (function(_this) {
        return function(item) {
          var image, imageContainer;
          imageContainer = new Fa.CContainer({
            classes: ['size-140-180'],
            size: [_this.options.itemWidth, _this.options.scrollViewHeight]
          });
          image = new Fa.ImageSurf({
            size: [_this.options.itemWidth, _this.options.scrollViewHeight],
            content: item.sized_picture || item.temp_path,
            properties: {
              border: '4px solid #252525'
            }
          });
          image.photo = item;
          imageContainer.add(image);
          imageContainer.photo = item;
          return _this.images.push(imageContainer);
        };
      })(this));
      this.picturesScrollview.addItems(this.images);
      return this.container.add(this.picturesScrollview);
    }
  };

  return CSnapBrowserContent;

})(Fa.CView);


},{}],163:[function(require,module,exports){
var fullviewView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = fullviewView = (function(_super) {
  var _createContent, _createLayouts, _createLightbox;

  __extends(fullviewView, _super);

  fullviewView.DEFAULT_OPTIONS = {};

  function fullviewView(options) {
    fullviewView.__super__.constructor.call(this, options);
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('session_changed:current_photo', (function(_this) {
      return function() {
        if (Session.currentPhoto) {
          _this.pictureUrl = Session.currentPhoto.largePic();
        }
        return _createContent.call(_this);
      };
    })(this));
    this._eventInput.on('hide_frontdrop', (function(_this) {
      return function(params) {
        if (params && params["for"] === 'show_full_picture') {
          return _this.hide();
        }
      };
    })(this));
    this._eventInput.on('canvas_loaded', (function(_this) {
      return function() {
        return _this.initCanvas();
      };
    })(this));
    this._eventInput.on('rotateImageClockwise', (function(_this) {
      return function() {
        canvas.forEachObject(function(obj) {
          obj.setAngle(obj.getAngle() + 90).setCoords();
          if (obj.get('type') === 'image') {
            obj.center().setCoords();
          }
        });
      };
    })(this));
    this._eventInput.on('rotateImageAntiClockwise', (function(_this) {
      return function() {
        canvas.forEachObject(function(obj) {
          obj.setAngle(obj.getAngle() - 90).setCoords();
          if (obj.get('type') === 'image') {
            obj.center().setCoords();
          }
        });
      };
    })(this));
    this._eventInput.on('edit', (function(_this) {
      return function() {
        _this.isEdit = true;
        $('.divEditButton').show();
        $('.divButton').hide();
        canvas.forEachObject(function(obj) {
          if (obj.get('type') === 'image') {
            obj.hasControls = false;
            obj.hasBorders = false;
            obj.lockMovementX = true;
            obj.lockMovementY = true;
            obj.lockScalingX = true;
            obj.lockScalingY = true;
          }
        });
      };
    })(this));
    this._eventInput.on('done', (function(_this) {
      return function() {
        var dataURL, drawtype;
        _this.isEdit = false;
        canvas.isDrawingMode = false;
        drawtype = '';
        $('.divEditButton').hide();
        $('.divButton').show();
        canvas.deactivateAllWithDispatch();
        dataURL = canvas.toDataURL();
        canvas.clear();
        fabric.Image.fromURL(dataURL, (function(oImg) {
          oImg.scale(1).set({
            centeredScaling: true,
            hasBorders: false,
            lockUniScaling: true,
            meetOrSlice: 'slice',
            minScaleLimit: 1,
            lockRotation: true
          });
          oImg.hasRotatingPoint = false;
          canvas.add(oImg);
          oImg.center().setCoords();
        }), {
          crossOrigin: ''
        });
      };
    })(this));
    this._eventInput.on('addtext', (function(_this) {
      return function() {
        _this.drawtype = 'text';
        _this.removeAllActiveClass();
        $('#addtext').addClass('active');
      };
    })(this));
    this._eventInput.on('addrect', (function(_this) {
      return function() {
        _this.drawtype = 'rect';
        _this.removeAllActiveClass();
        $('#addrect').addClass('active');
      };
    })(this));
    this._eventInput.on('addtri', (function(_this) {
      return function() {
        _this.drawtype = 'tri';
        _this.removeAllActiveClass();
        $('#addtri').addClass('active');
      };
    })(this));
    this._eventInput.on('addcir', (function(_this) {
      return function() {
        _this.drawtype = 'cir';
        _this.removeAllActiveClass();
        $('#addcir').addClass('active');
      };
    })(this));
    this._eventInput.on('draw', (function(_this) {
      return function() {
        _this.drawtype = 'draw';
        _this.removeAllActiveClass();
        canvas.isDrawingMode = !canvas.isDrawingMode;
        canvas.freeDrawingBrush = new fabric['PencilBrush'](canvas);
        canvas.freeDrawingBrush.color = 'Red';
        canvas.freeDrawingBrush.width = 2;
        if (canvas.isDrawingMode) {
          $('#draw').addClass('active');
        } else {
          $('#draw').removeClass('active');
        }
      };
    })(this));
    this._eventInput.on('delete', (function(_this) {
      return function() {
        var activeObject;
        activeObject = canvas.getActiveObject();
        if (activeObject.get('type') !== 'image') {
          canvas.remove(activeObject);
        }
      };
    })(this));
    this._eventInput.on('save', (function(_this) {
      return function() {
        var onConfirm;
        onConfirm = function(index) {
          var payload, promise;
          if (index === 1) {
            $('body').css('opacity', '0.5');
            payload = {
              scale: '1',
              angle: '0',
              x: '0',
              y: '0',
              w: '768',
              h: '1024',
              timestamp: Date.now(),
              client_name: Session.currentClient.Id,
              source: canvas.toDataURL({
                format: 'jpeg',
                quality: 0.9
              })
            };
            promise = $.ajax({
              url: Conf.imageServerURL + '/save_as_new_image',
              async: true,
              data: JSON.stringify(payload),
              contentType: 'application/json; charset=utf-8',
              type: 'POST'
            });
            return promise.done(function(response) {
              var photo;
              console.log(response);
              photo = Session.currentClient.addPhoto(JSON.parse(response)['original'], 'Edited', Date.now(), Session.currentPhoto.session);
              photo.original_picture = JSON.parse(response)['original'];
              photo.sized_picture = JSON.parse(response)['sized'];
              photo.square_picture = JSON.parse(response)['square'];
              photo.large_picture = JSON.parse(response)['large'];
              photo.save();
              Dispatcher.emit('hide_frontdrop', {
                'for': 'show_full_picture'
              });
              $('body').css('opacity', '1');
              Session.setCurrentSession(parseInt(Session.currentPhoto.session));
              Dispatcher.emit('session_changed:current_session');
              return Dispatcher.emit('snap_redraw_frames');
            });
          }
        };
        if (Conf.isProduction) {
          return navigator.notification.confirm('Save this image?', onConfirm, 'Edited Image', ['Yes', 'No']);
        } else {
          if (confirm('Save this image?')) {
            return onConfirm(1);
          }
        }
      };
    })(this));
  }

  _createLayouts = function() {
    _createLightbox.call(this);
    return _createContent.call(this);
  };

  _createLightbox = function() {
    var lightboxContainer;
    lightboxContainer = new Fa.ContainerSurf({
      size: [void 0, void 0],
      properties: {
        pointerEvents: 'none'
      }
    });
    this.lightbox = new Fa.RenderCtrl({
      overlap: true
    });
    lightboxContainer.add(this.lightbox);
    return this.add(Fa.Pos.center).add(lightboxContainer);
  };

  _createContent = function() {
    var html;
    html = require('../../templates/fullview.hbs')({
      picture: this.pictureUrl
    });
    return this.content = new Fa.Surface({
      content: html,
      size: [void 0, void 0]
    });
  };

  fullviewView.prototype.show = function() {
    $('body').css('opacity', '1');
    Dispatcher.emit('hide_appfront');
    return this.lightbox.show(this.content);
  };

  fullviewView.prototype.hide = function() {
    this.lightbox.hide();
    Dispatcher.emit('reopen_appfront');
    Dispatcher.emit('hide_backdrop');
    appView.rotateLandscape();
    return $('body').css('opacity', '1');
  };

  fullviewView.prototype.initCanvas = function() {
    appView.rotatePortrait();
    document.addEventListener('touchstart', (function() {}), false);
    this.isEdit = false;
    window.canvas = new fabric.Canvas('fabric-canvas');
    canvas.setWidth(768);
    canvas.setHeight(1024);
    canvas.stateful = true;
    canvas.calcOffset();
    fabric.Image.fromURL(this.pictureUrl, ((function(_this) {
      return function(oImg) {
        oImg.scale(0.6).set({
          centeredScaling: true,
          hasBorders: false,
          lockUniScaling: true,
          meetOrSlice: 'slice',
          minScaleLimit: 0.6,
          lockRotation: true
        });
        oImg.hasRotatingPoint = false;
        canvas.add(oImg);
        oImg.center().setCoords();
      };
    })(this)), {
      crossOrigin: ''
    });
    canvas.on('mouse:down', (function(_this) {
      return function(o) {
        var pointer;
        pointer = canvas.getPointer(o.e);
        _this.drawingMode(pointer);
        if (_this.drawtype !== 'draw') {
          $('.divRound').removeClass('active');
        }
      };
    })(this));
    canvas.on('object:scaling', (function(_this) {
      return function(o) {
        if (!_this.isEdit) {
          _this.movingInCanvas(canvas.getActiveObject());
        }
      };
    })(this));
    canvas.on('object:moving', (function(_this) {
      return function(o) {
        if (!_this.isEdit) {
          _this.movingInCanvas(canvas.getActiveObject());
        }
      };
    })(this));
    canvas.on('touch:gesture', (function(_this) {
      return function(o) {
        if (!_this.isEdit) {
          _this.movingInCanvas(canvas.getActiveObject());
        }
      };
    })(this));
    return canvas.on('touch:drag', (function(_this) {
      return function(o) {
        if (!_this.isEdit) {
          _this.movingInCanvas(canvas.getActiveObject());
        }
      };
    })(this));
  };

  fullviewView.prototype.removeAllActiveClass = function() {
    if (this.drawtype !== 'draw') {
      canvas.isDrawingMode = false;
    }
    $('.divRound').removeClass('active');
  };

  fullviewView.prototype.drawingMode = function(pointer) {
    var cir, rect, tri, txt;
    switch (this.drawtype) {
      case 'text':
        txt = new fabric.IText('Text', {
          left: pointer.x,
          top: pointer.y,
          stroke: 'black',
          strokeWidth: 1,
          fontSize: 30,
          fontWeight: 'normal',
          fontFamily: 'Arial'
        });
        fabric.util.setStyle({
          position: 'fixed'
        });
        txt.hasRotatingPoint = true;
        canvas.add(txt);
        canvas.renderAll();
        this.drawtype = '';
        break;
      case 'cir':
        cir = new fabric.Circle({
          radius: 30,
          left: pointer.x,
          top: pointer.y,
          fill: 'transparent'
        });
        cir.set({
          strokeWidth: 2,
          stroke: 'red'
        });
        cir.hasRotatingPoint = true;
        canvas.add(cir);
        canvas.renderAll();
        this.drawtype = '';
        break;
      case 'tri':
        tri = new fabric.Triangle({
          width: 50,
          height: 50,
          left: pointer.x,
          top: pointer.y,
          fill: 'transparent'
        });
        tri.set({
          strokeWidth: 2,
          stroke: 'red'
        });
        tri.hasRotatingPoint = true;
        canvas.add(tri);
        canvas.renderAll();
        this.drawtype = 'none';
        break;
      case 'rect':
        rect = new fabric.Rect({
          width: 50,
          height: 50,
          left: pointer.x,
          top: pointer.y,
          fill: 'transparent'
        });
        rect.set({
          strokeWidth: 2,
          stroke: 'red'
        });
        rect.setAngle(45);
        rect.hasRotatingPoint = true;
        canvas.add(rect);
        canvas.renderAll();
        this.drawtype = '';
        break;
      default:
        break;
    }
  };

  fullviewView.prototype.movingInCanvas = function(obj) {
    var angle, factor, scaleX;
    angle = obj.get('angle');
    scaleX = obj.getScaleX();
    if (angle < 0) {
      angle = 360 + angle;
    }
    factor = angle / 90 % 4;
    this.topLeft(obj, factor, scaleX);
    this.bottomRight(obj, factor, scaleX);
  };

  fullviewView.prototype.topLeft = function(obj, factor, scaleX) {
    var moveLeft;
    moveLeft = obj.getPointByOrigin('left', 'top');
    switch (parseInt(factor)) {
      case 0:
        if (moveLeft.x > 0 && moveLeft.y > 0) {
          obj.setPositionByOrigin(new fabric.Point(0, 0), 'left', 'top');
        } else if (moveLeft.x > 0) {
          obj.setPositionByOrigin(new fabric.Point(0, moveLeft.y), 'left', 'top');
        } else if (moveLeft.y > 0) {
          obj.setPositionByOrigin(new fabric.Point(moveLeft.x, 0), 'left', 'top');
        }
        break;
      case 1:
        if (scaleX > 0.73) {
          if (moveLeft.x < 768 && moveLeft.y > 0) {
            obj.setPositionByOrigin(new fabric.Point(768, 0), 'left', 'top');
          } else if (moveLeft.x < 768) {
            obj.setPositionByOrigin(new fabric.Point(768, moveLeft.y), 'left', 'top');
          } else if (moveLeft.y > 0) {
            obj.setPositionByOrigin(new fabric.Point(moveLeft.x, 0), 'left', 'top');
          }
        } else {
          if (moveLeft.x < 768 && moveLeft.y < 0) {
            obj.setPositionByOrigin(new fabric.Point(768, 0), 'left', 'top');
          } else if (moveLeft.x < 768) {
            obj.setPositionByOrigin(new fabric.Point(768, moveLeft.y), 'left', 'top');
          } else if (moveLeft.y < 0) {
            obj.setPositionByOrigin(new fabric.Point(moveLeft.x, 0), 'left', 'top');
          }
        }
        break;
      case 2:
        if (moveLeft.x < 768 && moveLeft.y < 1024) {
          obj.setPositionByOrigin(new fabric.Point(768, 1024), 'left', 'top');
        } else if (moveLeft.x < 768) {
          obj.setPositionByOrigin(new fabric.Point(768, moveLeft.y), 'left', 'top');
        } else if (moveLeft.y < 1024) {
          obj.setPositionByOrigin(new fabric.Point(moveLeft.x, 1024), 'left', 'top');
        }
        break;
      case 3:
        if (scaleX > 0.73) {
          if (moveLeft.x > 0 && moveLeft.y < 1024) {
            obj.setPositionByOrigin(new fabric.Point(0, 1024), 'left', 'top');
          } else if (moveLeft.x > 0) {
            obj.setPositionByOrigin(new fabric.Point(0, moveLeft.y), 'left', 'top');
          } else if (moveLeft.y < 1024) {
            obj.setPositionByOrigin(new fabric.Point(moveLeft.x, 1024), 'left', 'top');
          }
        } else {
          if (moveLeft.x > 0 && moveLeft.y > 1024) {
            obj.setPositionByOrigin(new fabric.Point(0, 1024), 'left', 'top');
          } else if (moveLeft.x > 0) {
            obj.setPositionByOrigin(new fabric.Point(0, moveLeft.y), 'left', 'top');
          } else if (moveLeft.y > 1024) {
            obj.setPositionByOrigin(new fabric.Point(moveLeft.x, 1024), 'left', 'top');
          }
        }
    }
  };

  fullviewView.prototype.bottomRight = function(obj, factor, scaleX) {
    var moveRight;
    moveRight = obj.getPointByOrigin('right', 'bottom');
    switch (parseInt(factor)) {
      case 0:
        if (moveRight.x < 768 && moveRight.y < 1024) {
          obj.setPositionByOrigin(new fabric.Point(768, 1024), 'right', 'bottom');
        } else if (moveRight.x < 768) {
          obj.setPositionByOrigin(new fabric.Point(768, moveRight.y), 'right', 'bottom');
        } else if (moveRight.y < 1024) {
          obj.setPositionByOrigin(new fabric.Point(moveRight.x, 1024), 'right', 'bottom');
        }
        break;
      case 1:
        if (scaleX > 0.73) {
          if (moveRight.x > 0 && moveRight.y < 1024) {
            obj.setPositionByOrigin(new fabric.Point(0, 1024), 'right', 'bottom');
          } else if (moveRight.x > 0) {
            obj.setPositionByOrigin(new fabric.Point(0, moveRight.y), 'right', 'bottom');
          } else if (moveRight.y < 1024) {
            obj.setPositionByOrigin(new fabric.Point(moveRight.x, 1024), 'right', 'bottom');
          }
        } else {
          if (moveRight.x > 0 && moveRight.y > 1024) {
            obj.setPositionByOrigin(new fabric.Point(0, 1024), 'right', 'bottom');
          } else if (moveRight.x > 0) {
            obj.setPositionByOrigin(new fabric.Point(0, moveRight.y), 'right', 'bottom');
          } else if (moveRight.y > 1024) {
            obj.setPositionByOrigin(new fabric.Point(moveRight.x, 1024), 'right', 'bottom');
          }
        }
        break;
      case 2:
        if (moveRight.x > 0 && moveRight.y > 0) {
          obj.setPositionByOrigin(new fabric.Point(0, 0), 'right', 'bottom');
        } else if (moveRight.x > 0) {
          obj.setPositionByOrigin(new fabric.Point(0, moveRight.y), 'right', 'bottom');
        } else if (moveRight.y > 0) {
          obj.setPositionByOrigin(new fabric.Point(moveRight.x, 0), 'right', 'bottom');
        }
        break;
      case 3:
        if (scaleX > 0.73) {
          if (moveRight.x < 768 && moveRight.y > 0) {
            obj.setPositionByOrigin(new fabric.Point(768, 0), 'right', 'bottom');
          } else if (moveRight.x < 768) {
            obj.setPositionByOrigin(new fabric.Point(768, moveRight.y), 'right', 'bottom');
          } else if (moveRight.y > 0) {
            obj.setPositionByOrigin(new fabric.Point(moveRight.x, 0), 'right', 'bottom');
          }
        } else {
          if (moveRight.x < 768 && moveRight.y < 0) {
            obj.setPositionByOrigin(new fabric.Point(768, 0), 'right', 'bottom');
          } else if (moveRight.x < 768) {
            obj.setPositionByOrigin(new fabric.Point(768, moveRight.y), 'right', 'bottom');
          } else if (moveRight.y < 0) {
            obj.setPositionByOrigin(new fabric.Point(moveRight.x, 0), 'right', 'bottom');
          }
        }
    }
  };

  return fullviewView;

})(Fa.View);


},{"../../templates/fullview.hbs":128}],164:[function(require,module,exports){
var AsLink, CSnapSelBeforeAfter, CompareBtn, ResultBtn, SnapBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SnapBtn = Fa.Elements.Dashboard.camera_btn;

CompareBtn = Fa.Elements.Dashboard.compare_btn;

ResultBtn = Fa.Elements.Dashboard.result_btn;

AsLink = Fa.Behaviors.AsLink;

module.exports = CSnapSelBeforeAfter = (function(_super) {
  var init;

  __extends(CSnapSelBeforeAfter, _super);

  CSnapSelBeforeAfter.DEFAULT_OPTIONS = {
    size: [void 0, void 0]
  };

  function CSnapSelBeforeAfter(options) {
    CSnapSelBeforeAfter.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.backgroundColor
      }
    });
    init.call(this);
    this.add(this.container);
  }

  init = function() {
    var cols;
    this.snapBtn = new SnapBtn({
      size: [75, 75]
    });
    new AsLink(this.snapBtn, 'Snap');
    this.compareBtn = new CompareBtn({
      size: [75, 75]
    });
    new AsLink(this.compareBtn, 'Compare');
    this.resultBtn = new ResultBtn({
      size: [75, 75]
    });
    new AsLink(this.resultBtn, 'Result');
    cols = new Fa.FlexibleLayout({
      ratios: [1, 1, 1]
    });
    cols.sequenceFrom([this.snapBtn, this.compareBtn, this.resultBtn]);
    return this.container.add(cols);
  };

  return CSnapSelBeforeAfter;

})(Fa.CView);


},{}],165:[function(require,module,exports){
var AfterBtn, AsLink, BeforeBtn, CSnapSelBeforeAfter, SelGroup,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BeforeBtn = Fa.Elements.Snap.before_btn;

AfterBtn = Fa.Elements.Snap.after_btn;

SelGroup = Fa.Behaviors.SelectGroup;

AsLink = Fa.Behaviors.AsLink;

module.exports = CSnapSelBeforeAfter = (function(_super) {
  var init, upload;

  __extends(CSnapSelBeforeAfter, _super);

  CSnapSelBeforeAfter.DEFAULT_OPTIONS = {
    size: [void 0, void 0]
  };

  function CSnapSelBeforeAfter(options) {
    CSnapSelBeforeAfter.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.backgroundColor
      }
    });
    init.call(this);
    this.add(this.container);
  }

  upload = function(photo) {
    var ft, options, serverURL, uploadFailure, uploadSuccess;
    serverURL = Conf.imageServerURL + '/upload';
    ft = new FileTransfer();
    options = new FileUploadOptions();
    options.fileKey = "file";
    options.fileName = "filename.jpg";
    options.mimeType = "image/jpeg";
    options.chunkedMode = false;
    options.params = {
      timestamp: photo.timestamp,
      client_id: Session.currentClient.Id
    };
    uploadSuccess = function(response) {
      this.original_picture = JSON.parse(response.response)['original'];
      this.sized_picture = JSON.parse(response.response)['sized'];
      this.square_picture = JSON.parse(response.response)['square'];
      this.large_picture = JSON.parse(response.response)['large'];
      this.save();
      return Fa.Timer.setTimeout((function(_this) {
        return function() {
          return Dispatcher.emit('snap_redraw_frames');
        };
      })(this), 100);
    };
    uploadFailure = function(error) {
      alert("Upload failed. Please check your internet connection");
      return console.log(error);
    };
    ft.upload(photo.temp_path, serverURL, uploadSuccess.bind(photo), uploadFailure, options);
  };

  init = function() {
    var cols;
    cols = new Fa.FlexibleLayout({
      ratios: [1, 1]
    });
    this.beforeBtn = new AsLink(new BeforeBtn(), void 0, (function() {
      var onFail, onSuccess;
      onSuccess = function(imageURI) {
        return Fa.Timer.setTimeout(function() {
          var photo, timestamp;
          timestamp = Date.now();
          photo = Session.currentClient.addPhoto(imageURI, 'Before', timestamp);
          return upload(photo);
        }, 0);
      };
      onFail = function() {
        return console.log('unable to get ImageURI');
      };
      return Camera.getPicture(onSuccess.bind(this), onFail, {
        quality: 100,
        destinationType: Camera.DestinationType.FILE_URI,
        targetWidth: 1400,
        targetHeight: 1800,
        saveToPhotoAlbum: false,
        allowEdit: false,
        correctOrientation: true
      });
    }));
    this.afterBtn = new AsLink(new AfterBtn(), void 0, (function() {
      var onFail, onSuccess;
      onSuccess = function(imageURI) {
        return Fa.Timer.setTimeout(function() {
          var photo, timestamp;
          timestamp = Date.now();
          photo = Session.currentClient.addPhoto(imageURI, 'After', timestamp);
          return upload(photo);
        }, 0);
      };
      onFail = function() {
        return console.log('unable to get ImageURI');
      };
      return Camera.getPicture(onSuccess.bind(this), onFail, {
        quality: 100,
        destinationType: Camera.DestinationType.FILE_URI,
        targetWidth: 1400,
        targetHeight: 1800,
        saveToPhotoAlbum: false,
        allowEdit: false,
        correctOrientation: true
      });
    }));
    cols.sequenceFrom([this.beforeBtn.item, this.afterBtn.item]);
    return this.container.add(cols);
  };

  return CSnapSelBeforeAfter;

})(Fa.CView);


},{}],166:[function(require,module,exports){
var AsLink, CSnapSelectorSection, ClearBtn, Radio, SelGroup, SetProfileBtn, UpdateBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Radio = Fa.Elements.Snap.selector_radio;

ClearBtn = Fa.Elements.Snap.clear_btn;

SetProfileBtn = Fa.Elements.Snap.set_profile_btn;

UpdateBtn = Fa.Elements.Snap.update_btn;

SelGroup = Fa.Behaviors.SelectGroup;

AsLink = Fa.Behaviors.AsLink;

module.exports = CSnapSelectorSection = (function(_super) {
  var applyBg, createAngles, createBeforeAfter, init;

  __extends(CSnapSelectorSection, _super);

  CSnapSelectorSection.DEFAULT_OPTIONS = {
    size: [720, 130]
  };

  function CSnapSelectorSection(options) {
    CSnapSelectorSection.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]]
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var angles, befAft, clearBtn, setProfileBtn, updateBtn;
    applyBg.call(this);
    this.cols = new Fa.FlexibleLayout({
      direction: 0,
      ratios: [1, 1, 1, 1, 1]
    });
    befAft = createBeforeAfter.call(this);
    angles = createAngles.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('before_after_selector_section_change', (function(_this) {
      return function() {
        var error;
        try {
          _this.setTakenTo(Session.currentPhoto.taken_for);
          if (Session.currentPhoto.angle) {
            return _this.setAngleTo(Session.currentPhoto.angle);
          } else {
            return _this.setAngleTo(null);
          }
        } catch (_error) {
          error = _error;
          return console.log(error);
        }
      };
    })(this));
    setProfileBtn = new AsLink(new SetProfileBtn(), void 0, ((function(_this) {
      return function() {
        var onConfirm;
        onConfirm = function(index) {
          if (index === 1) {
            Session.currentClient.setProfilePicUploaded(Session.currentPhoto.originalPic(), Session.currentPhoto.sizedPic(), Session.currentPhoto.squarePic(), Session.currentPhoto.largePic());
            Dispatcher.emit('session_changed:current_session');
            return Dispatcher.emit('page_change', {
              to: 'Dashboard'
            });
          }
        };
        if (Conf.isProduction) {
          return navigator.notification.confirm('Set As Profile Image?', onConfirm, 'Profile Image', ['Yes', 'No']);
        } else {
          return onConfirm(1);
        }
      };
    })(this)));
    clearBtn = new AsLink(new ClearBtn(), void 0, ((function(_this) {
      return function() {
        var onConfirm;
        onConfirm = function(index) {
          if (index === 1) {
            Session.currentPhoto.del();
            Dispatcher.emit('snap_redraw_frames');
            if (Session.currentClient.photos.length > 0) {
              return Session.setCurrentPhoto(Session.currentClient.photos[0]);
            } else {
              return Session.setCurrentPhoto(null);
            }
          }
        };
        if (Conf.isProduction) {
          return navigator.notification.confirm('Clear this picture?', onConfirm, 'Clear', ['Yes', 'No']);
        } else {
          return onConfirm(1);
        }
      };
    })(this)));
    updateBtn = new AsLink(new UpdateBtn(), void 0, ((function(_this) {
      return function() {
        var onConfirm;
        onConfirm = function(index) {
          if (index === 1 && Session.currentPhoto) {
            Session.currentPhoto.angle = _this.selGroupAngles.value;
            Session.currentPhoto.taken_for = _this.selGroupBefAfter.value;
            Session.currentPhoto.save();
            return Dispatcher.emit('current_photo_fields_changed');
          }
        };
        if (Conf.isProduction) {
          return navigator.notification.confirm('Confirm update?', onConfirm, 'Update', ['Yes', 'No']);
        } else {
          return onConfirm(1);
        }
      };
    })(this)));
    this.cols.sequenceFrom([befAft, angles, setProfileBtn.item, clearBtn.item, updateBtn.item]);
    return this.container.add(this.cols);
  };

  CSnapSelectorSection.prototype.setTakenTo = function(takenStatus) {
    if (takenStatus === 'Before') {
      return this.selGroupBefAfter.setIndexToActive(0);
    } else {
      return this.selGroupBefAfter.setIndexToActive(1);
    }
  };

  CSnapSelectorSection.prototype.setAngleTo = function(angle) {
    if (angle === null) {
      this.selGroupAngles.setToNullItem();
    }
    if (angle === 'Left') {
      this.selGroupAngles.setIndexToActive(0);
    }
    if (angle === 'Right') {
      this.selGroupAngles.setIndexToActive(1);
    }
    if (angle === 'Front') {
      this.selGroupAngles.setIndexToActive(2);
    }
    if (angle === 'Others') {
      return this.selGroupAngles.setIndexToActive(3);
    }
  };

  applyBg = function() {
    var bg, radius;
    radius = '20px';
    bg = new Fa.Surface({
      properties: {
        backgroundColor: '#000',
        pointerEvents: 'none',
        borderTopLeftRadius: radius,
        borderTopRightRadius: radius,
        borderBottomLeftRadius: radius,
        borderBottomRightRadius: radius
      }
    });
    return this.container.add(Fa.opaqueBy(0.2)).add(bg);
  };

  createBeforeAfter = function() {
    var afterRadio, beforeRadio, seqs;
    seqs = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1, 1]
    });
    beforeRadio = new Radio({
      title: 'Before'
    });
    afterRadio = new Radio({
      title: 'After'
    });
    this.selGroupBefAfter = new SelGroup([beforeRadio, afterRadio], ['Before', 'After']);
    seqs.sequenceFrom([beforeRadio, afterRadio, Fa.EmptyView(), Fa.EmptyView()]);
    return seqs;
  };

  createAngles = function() {
    var frontRadio, leftRadio, othersRadio, rightRadio, seqs;
    seqs = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1, 1]
    });
    leftRadio = new Radio({
      title: 'Left'
    });
    rightRadio = new Radio({
      title: 'Right'
    });
    frontRadio = new Radio({
      title: 'Front'
    });
    othersRadio = new Radio({
      title: 'Others'
    });
    this.selGroupAngles = new SelGroup([leftRadio, rightRadio, frontRadio, othersRadio], ['Left', 'Right', 'Front', 'Others']);
    seqs.sequenceFrom([leftRadio, rightRadio, frontRadio, othersRadio]);
    return seqs;
  };

  return CSnapSelectorSection;

})(Fa.CView);


},{}],167:[function(require,module,exports){
var Components;

Components = {
  Common: {
    side_menu: require('./c.common.side_menu.coffee'),
    session_numpad: require('./c.common.session_numpad.coffee')
  },
  Dashboard: {
    action_buttons: require('./c.dashboard.action_buttons.coffee'),
    first_visit: require('./c.dashboard.first_visit.coffee'),
    last_treatment: require('./c.dashboard.last_treatment.coffee')
  },
  Snap: {
    quick_links: require('./c.snap.quick_links.coffee'),
    sel_before_after: require('./c.snap.sel_before_after.coffee'),
    selector_section: require('./c.snap.selector_section.coffee'),
    browser: require('./c.snap.browser.coffee'),
    browser_content: require('./c.snap.browser_content.coffee'),
    fullview: require('./c.snap.fullview.coffee')
  },
  Compare: {
    sel_snap_micro: require('./c.compare.sel_snap_micro.coffee'),
    selector_section: require('./c.compare.selector_section.coffee'),
    match_browser: require('./c.compare.match_browser.coffee'),
    match_browser_content: require('./c.compare.match_browser_content.coffee'),
    frame_numpad: require('./c.compare.frame_numpad.coffee')
  },
  Result: {
    session_box: require('./c.result.session_box.coffee'),
    session_row: require('./c.result.session_row.coffee'),
    client_filter: require('./c.result.client_filter.coffee'),
    client_header: require('./c.result.client_header.coffee'),
    matchview: require('./c.result.matchview.coffee')
  },
  Checklist: {
    result_header: require('./c.checklist.result_header.coffee'),
    tristar: require('./c.checklist.tristar.coffee'),
    desired_options: require('./c.checklist.desired_options.coffee'),
    answer_box: require('./c.checklist.answer_box.coffee')
  },
  Micro: {
    selector_section: require('./c.micro.selector_section.coffee')
  }
};

module.exports = Components;


},{"./c.checklist.answer_box.coffee":141,"./c.checklist.desired_options.coffee":142,"./c.checklist.result_header.coffee":143,"./c.checklist.tristar.coffee":144,"./c.common.session_numpad.coffee":145,"./c.common.side_menu.coffee":146,"./c.compare.frame_numpad.coffee":147,"./c.compare.match_browser.coffee":148,"./c.compare.match_browser_content.coffee":149,"./c.compare.sel_snap_micro.coffee":150,"./c.compare.selector_section.coffee":151,"./c.dashboard.action_buttons.coffee":152,"./c.dashboard.first_visit.coffee":153,"./c.dashboard.last_treatment.coffee":154,"./c.micro.selector_section.coffee":155,"./c.result.client_filter.coffee":156,"./c.result.client_header.coffee":157,"./c.result.matchview.coffee":158,"./c.result.session_box.coffee":159,"./c.result.session_row.coffee":160,"./c.snap.browser.coffee":161,"./c.snap.browser_content.coffee":162,"./c.snap.fullview.coffee":163,"./c.snap.quick_links.coffee":164,"./c.snap.sel_before_after.coffee":165,"./c.snap.selector_section.coffee":166}],168:[function(require,module,exports){
var ElChecklistCancelBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElChecklistCancelBtn = (function(_super) {
  var init;

  __extends(ElChecklistCancelBtn, _super);

  ElChecklistCancelBtn.DEFAULT_OPTIONS = {
    size: [true, true],
    inactiveBackgroundColor: '#fb9c05',
    activeBackgroundColor: '#f782d1',
    isActive: true
  };

  function ElChecklistCancelBtn(options) {
    ElChecklistCancelBtn.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var text;
    this.button = new Fa.Surface({
      content: '<i class="icon-Cancel"></i>',
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        color: this.options.inactiveBackgroundColor,
        fontSize: '37px'
      }
    });
    text = new Fa.Surface({
      content: 'Cancel',
      size: [true, true],
      properties: {
        fontSize: '18px',
        fontWeight: 'bolder',
        color: '#333',
        pointerEvents: 'none'
      }
    });
    this.container.addToCenter(this.button);
    return this.container.add(Fa.translateBy(-11, -9, 0)).add(text);
  };

  ElChecklistCancelBtn.prototype.setActive = function() {
    this.options.isActive = true;
    return this.button.setProperties({
      color: this.options.activeBackgroundColor
    });
  };

  ElChecklistCancelBtn.prototype.setInactive = function() {
    this.options.isActive = false;
    return this.button.setProperties({
      color: this.options.inactiveBackgroundColor
    });
  };

  return ElChecklistCancelBtn;

})(Fa.CView);


},{}],169:[function(require,module,exports){
var ElChecker,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElChecker = (function(_super) {
  var init;

  __extends(ElChecker, _super);

  ElChecker.DEFAULT_OPTIONS = {
    size: [200, 40],
    text: 'Skin Brightening',
    ratios: [1, 4, 15]
  };

  function ElChecker(options) {
    ElChecker.__super__.constructor.call(this, options);
    this.id = this.options.text;
    this.active = false;
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.container.on('click', (function(_this) {
      return function() {
        return _this.toggle();
      };
    })(this));
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]]
    });
    flex = new Fa.FlexibleLayout({
      direction: 0,
      ratios: this.options.ratios
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="ion-ios7-circle-outline"></i>',
      properties: {
        fontSize: '26px',
        color: 'white'
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'left',
      size: [true, true],
      content: this.options.text,
      properties: {
        fontSize: '15px',
        fontWeight: 'bold',
        color: 'white'
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  ElChecker.prototype.toggle = function() {
    if (this.active) {
      return this.setActive(false);
    } else {
      return this.setActive(true);
    }
  };

  ElChecker.prototype.setActive = function(isActive) {
    this.active = isActive;
    return this.repaint();
  };

  ElChecker.prototype.getIsActive = function() {
    return this.active;
  };

  ElChecker.prototype.repaint = function() {
    if (this.active) {
      return this.icon.surface.setContent('<i class="ion-ios7-circle-filled"></i>');
    } else {
      return this.icon.surface.setContent('<i class="ion-ios7-circle-outline"></i>');
    }
  };

  return ElChecker;

})(Fa.CView);


},{}],170:[function(require,module,exports){
var ElChecklistConfirmBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElChecklistConfirmBtn = (function(_super) {
  var init;

  __extends(ElChecklistConfirmBtn, _super);

  ElChecklistConfirmBtn.DEFAULT_OPTIONS = {
    size: [true, true],
    inactiveBackgroundColor: '#fb9c05',
    activeBackgroundColor: '#f782d1',
    isActive: true
  };

  function ElChecklistConfirmBtn(options) {
    ElChecklistConfirmBtn.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var text;
    this.button = new Fa.Surface({
      content: '<i class="icon-Confirm"></i>',
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        color: this.options.inactiveBackgroundColor,
        fontSize: '37px'
      }
    });
    text = new Fa.Surface({
      content: 'Confirm',
      size: [true, true],
      properties: {
        fontSize: '18px',
        fontWeight: 'bolder',
        color: '#333',
        pointerEvents: 'none'
      }
    });
    this.container.addToCenter(this.button);
    return this.container.add(Fa.translateBy(-11, -9, 0)).add(text);
  };

  ElChecklistConfirmBtn.prototype.setActive = function() {
    this.options.isActive = true;
    return this.button.setProperties({
      color: this.options.activeBackgroundColor
    });
  };

  ElChecklistConfirmBtn.prototype.setInactive = function() {
    this.options.isActive = false;
    return this.button.setProperties({
      color: this.options.inactiveBackgroundColor
    });
  };

  return ElChecklistConfirmBtn;

})(Fa.CView);


},{}],171:[function(require,module,exports){
var ElCommonBackdrop,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElCommonBackdrop = (function(_super) {
  var _createBackdrop, _createBackdropLightbox, _createLayouts;

  __extends(ElCommonBackdrop, _super);

  ElCommonBackdrop.DEFAULT_OPTIONS = {
    opacity: 0.3
  };

  function ElCommonBackdrop(options) {
    ElCommonBackdrop.__super__.constructor.call(this, options);
    this.opacity = this.options.opacity;
    _createLayouts.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('show_backdrop', (function(_this) {
      return function(params) {
        if (params) {
          _this.currentFor = params["for"];
        }
        return _this.show();
      };
    })(this));
    this._eventInput.on('hide_backdrop', (function(_this) {
      return function() {
        return _this.hide();
      };
    })(this));
  }

  ElCommonBackdrop.prototype.show = function() {
    this.renderer.show(this.backdrop);
    return this.opacityCtrl.setOpacity(this.opacity, {
      duration: 300
    });
  };

  ElCommonBackdrop.prototype.hide = function() {
    this.opacityCtrl.setOpacity(0, {
      duration: 300
    });
    return this.renderer.hide();
  };

  _createLayouts = function() {
    _createBackdropLightbox.call(this);
    return _createBackdrop.call(this);
  };

  _createBackdropLightbox = function() {
    this.renderer = new Fa.RenderCtrl({
      inTransition: {
        duration: 0
      },
      outTransition: {
        duration: 300
      }
    });
    return this.add(this.renderer);
  };

  _createBackdrop = function() {
    this.backdrop = new Fa.CContainer({
      properties: {
        pointerEvents: 'none'
      }
    });
    this.backdropInternal = new Fa.Surface({
      size: [void 0, void 0],
      properties: {
        backgroundColor: '#000'
      }
    });
    this.opacityCtrl = new Fa.Modifier({
      opacity: 0
    });
    this.backdrop.add(this.opacityCtrl).add(this.backdropInternal);
    return this.backdropInternal.on('click', (function(_this) {
      return function() {
        _this.hide();
        return Dispatcher.emit('hide_frontdrop', {
          "for": _this.currentFor
        });
      };
    })(this));
  };

  return ElCommonBackdrop;

})(Fa.CView);


},{}],172:[function(require,module,exports){
var ElCommonHamburger,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElCommonHamburger = (function(_super) {
  var init;

  __extends(ElCommonHamburger, _super);

  ElCommonHamburger.DEFAULT_OPTIONS = {
    size: 50,
    color: '#fff'
  };

  function ElCommonHamburger(options) {
    ElCommonHamburger.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size, this.options.size],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.ham.surface.on('click', (function(_this) {
      return function() {
        return Dispatcher.emit('show_menu');
      };
    })(this));
    this.add(this.container);
  }

  init = function() {
    this.ham = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="ion-navicon"></i>',
      properties: {
        fontSize: this.options.size + 'px',
        color: this.options.color
      }
    });
    return this.container.addToCenter(this.ham);
  };

  return ElCommonHamburger;

})(Fa.CView);


},{}],173:[function(require,module,exports){
var ElCommonHeader,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElCommonHeader = (function(_super) {
  var init;

  __extends(ElCommonHeader, _super);

  ElCommonHeader.DEFAULT_OPTIONS = {
    title: 'Title',
    titleColor: '#fff',
    fontSize: '20px'
  };

  function ElCommonHeader(options) {
    ElCommonHeader.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size, this.options.size]
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.header = new Fa.WrappedSurface({
      alignment: 'left',
      size: [true, true],
      content: '<strong>' + this.options.title + '</strong>',
      properties: {
        color: this.options.titleColor,
        fontSize: this.options.fontSize,
        textAlign: 'center'
      }
    });
    flex = new Fa.FlexibleLayout({
      ratios: [10, 190]
    });
    flex.sequenceFrom([Fa.EmptyView(), this.header]);
    return this.container.addToCenter(flex);
  };

  return ElCommonHeader;

})(Fa.CView);


},{}],174:[function(require,module,exports){
var ElCommonHorizontalRule,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElCommonHorizontalRule = (function(_super) {
  var init;

  __extends(ElCommonHorizontalRule, _super);

  ElCommonHorizontalRule.DEFAULT_OPTIONS = {
    size: [350, 30],
    lineColor: 'white',
    margin: 10,
    opacity: 0.7
  };

  function ElCommonHorizontalRule(options) {
    ElCommonHorizontalRule.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]]
    });
    init.call(this);
    this.add(this.container);
  }

  init = function() {
    var centerMod, lineWidth, opacityMod;
    lineWidth = this.options.size[0] - this.options.margin * 2;
    this.line = new Fa.Surface({
      size: [lineWidth, true],
      content: '<hr>',
      properties: {
        color: this.options.lineColor
      }
    });
    centerMod = Fa.Pos.center;
    opacityMod = Fa.opaqueBy(this.options.opacity);
    return this.container.add(centerMod).add(opacityMod).add(this.line);
  };

  return ElCommonHorizontalRule;

})(Fa.CView);


},{}],175:[function(require,module,exports){
var ElCommonSelectInput,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElCommonSelectInput = (function(_super) {
  var init;

  __extends(ElCommonSelectInput, _super);

  ElCommonSelectInput.DEFAULT_OPTIONS = {
    size: [true, true],
    id: 'sample',
    fontSize: '22px',
    padding: '5px 40px',
    choices: ['Sample 1', 'Sample 2', 'Sample 3', 'Sample 4', 'Sample 5']
  };

  function ElCommonSelectInput(options) {
    ElCommonSelectInput.__super__.constructor.call(this, options);
    this.id_prefix = 'famous_select_';
    this.id = this.id_prefix + this.options.id;
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]]
    });
    init.call(this);
    this.add(this.container);
  }

  init = function() {
    var displayStyle, dropdownOptions;
    displayStyle = "line-height: " + this.options.fontSize + "; font-size: " + this.options.fontSize + "; padding: " + this.options.padding + "; -moz-appearance: none; -webkit-appearance:none; background-color: #FFF; color: #000;";
    dropdownOptions = "";
    _.each(this.options.choices, function(choice) {
      return dropdownOptions += "<option>" + choice + "</option>";
    });
    this.dropdown = new Fa.Surface({
      size: [true, true],
      content: "<select id=\"" + this.id + "\" style=\"" + displayStyle + "\"> " + dropdownOptions + " </select>"
    });
    return this.container.add(this.dropdown);
  };

  ElCommonSelectInput.prototype.getValue = function() {
    return $('#' + this.id).val();
  };

  ElCommonSelectInput.prototype.getIntValue = function() {
    return parseInt(this.getValue());
  };

  ElCommonSelectInput.prototype.setValue = function(val) {
    return $('#' + this.id).val(val);
  };

  return ElCommonSelectInput;

})(Fa.CView);


},{}],176:[function(require,module,exports){
var ElCompareActiveNumpadBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElCompareActiveNumpadBtn = (function(_super) {
  var init;

  __extends(ElCompareActiveNumpadBtn, _super);

  _.extend(ElCompareActiveNumpadBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElCompareActiveNumpadBtn.DEFAULT_OPTIONS = {
    size: [60, 60],
    inactiveBackgroundColor: '#990569',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#000',
    isActive: true,
    sess_no: 0
  };

  function ElCompareActiveNumpadBtn(options) {
    ElCompareActiveNumpadBtn.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    this.content = new Fa.WrappedSurface({
      size: [true, true],
      content: this.options.sess_no,
      properties: {
        fontSize: '25px',
        color: this.options.inactiveColor
      }
    });
    this.button.addToCenter(this.content);
    this.sess_no = this.options.sess_no;
    return this.container.add(this.button);
  };

  return ElCompareActiveNumpadBtn;

})(Fa.CView);


},{}],177:[function(require,module,exports){
var ElFavMatchBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElFavMatchBtn = (function(_super) {
  var init;

  __extends(ElFavMatchBtn, _super);

  _.extend(ElFavMatchBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElFavMatchBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5, 5, 5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElFavMatchBtn(options) {
    ElFavMatchBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.60 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="icon-Fav"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.button.addToCenter(this.icon);
    return this.container.add(this.button);
  };

  return ElFavMatchBtn;

})(Fa.CView);


},{}],178:[function(require,module,exports){
var ElCompareMatchBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElCompareMatchBtn = (function(_super) {
  var init;

  __extends(ElCompareMatchBtn, _super);

  _.extend(ElCompareMatchBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElCompareMatchBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5, 5, 5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElCompareMatchBtn(options) {
    ElCompareMatchBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.60 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="icon-Match"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.button.addToCenter(this.icon);
    return this.container.add(this.button);
  };

  return ElCompareMatchBtn;

})(Fa.CView);


},{}],179:[function(require,module,exports){
var ElCompareViewMatchBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElCompareViewMatchBtn = (function(_super) {
  var init;

  __extends(ElCompareViewMatchBtn, _super);

  _.extend(ElCompareViewMatchBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElCompareViewMatchBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5, 5, 5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElCompareViewMatchBtn(options) {
    ElCompareViewMatchBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.65 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="icon-view"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.button.addToCenter(Fa.translateXBy(3)).add(this.icon);
    return this.container.add(this.button);
  };

  return ElCompareViewMatchBtn;

})(Fa.CView);


},{}],180:[function(require,module,exports){
var ElDashboardCameraBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElDashboardCameraBtn = (function(_super) {
  var init;

  __extends(ElDashboardCameraBtn, _super);

  _.extend(ElDashboardCameraBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElDashboardCameraBtn.DEFAULT_OPTIONS = {
    size: [140, 140],
    inactiveBackgroundColor: 'rgba(5, 5, 5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElDashboardCameraBtn(options) {
    ElDashboardCameraBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.55 * this.options.size[0]) + 'px';
    this.options.textSize = (0.12 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [8, 10, 2, 10]
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="ion-camera"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '<strong>Snap</strong>',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, Fa.EmptyView(), this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElDashboardCameraBtn;

})(Fa.CView);


},{}],181:[function(require,module,exports){
var ElDashboardResultBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElDashboardResultBtn = (function(_super) {
  var init;

  __extends(ElDashboardResultBtn, _super);

  _.extend(ElDashboardResultBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElDashboardResultBtn.DEFAULT_OPTIONS = {
    size: [170, 170],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElDashboardResultBtn(options) {
    ElDashboardResultBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.45 * this.options.size[0]) + 'px';
    this.options.textSize = (0.12 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [8, 10, 2, 10]
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="ion-images"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '<strong>Compare</strong>',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, Fa.EmptyView(), this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElDashboardResultBtn;

})(Fa.CView);


},{}],182:[function(require,module,exports){
var ElDashboardFirstVisitCal,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElDashboardFirstVisitCal = (function(_super) {
  var init;

  __extends(ElDashboardFirstVisitCal, _super);

  ElDashboardFirstVisitCal.DEFAULT_OPTIONS = {
    size: [70, 70],
    ringColor: '#7799bc',
    bodyColor: 'white'
  };

  function ElDashboardFirstVisitCal(options) {
    ElDashboardFirstVisitCal.__super__.constructor.call(this, options);
    this.options.calSize = this.options.size[0] + 'px';
    this.options.contentSize = (0.4 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]]
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var pushDown;
    this.calendar = new Fa.Surface({
      size: [true, true],
      content: '<i class="ion-calendar"></i>',
      properties: {
        fontSize: this.options.calSize,
        color: this.options.bodyColor
      }
    });
    this.content = new Fa.Surface({
      size: [true, true],
      content: '1',
      properties: {
        fontSize: this.options.contentSize,
        color: this.options.bodyColor
      }
    });
    this.container.addToCenter(this.calendar);
    pushDown = 0.1 * this.options.size[1];
    return this.container.add(Fa.Pos.center).add(Fa.translateBy(0, pushDown, 0)).add(this.content);
  };

  return ElDashboardFirstVisitCal;

})(Fa.CView);


},{}],183:[function(require,module,exports){
var ElDashboardLastVisitCal,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElDashboardLastVisitCal = (function(_super) {
  var init;

  __extends(ElDashboardLastVisitCal, _super);

  ElDashboardLastVisitCal.DEFAULT_OPTIONS = {
    size: [70, 70],
    ringColor: '#7799bc',
    bodyColor: 'white'
  };

  function ElDashboardLastVisitCal(options) {
    ElDashboardLastVisitCal.__super__.constructor.call(this, options);
    this.options.calSize = this.options.size[0] + 'px';
    this.options.contentSize = (0.4 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]]
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var pushDown;
    this.calendar = new Fa.Surface({
      size: [true, true],
      content: '<i class="ion-calendar"></i>',
      properties: {
        fontSize: this.options.calSize,
        color: this.options.bodyColor
      }
    });
    this.content = new Fa.Surface({
      size: [true, true],
      content: '<i class="ion-arrow-left-a"></i>',
      properties: {
        fontSize: this.options.contentSize,
        color: this.options.bodyColor
      }
    });
    this.container.addToCenter(this.calendar);
    pushDown = 0.1 * this.options.size[1];
    return this.container.add(Fa.Pos.center).add(Fa.translateBy(0, pushDown, 0)).add(this.content);
  };

  return ElDashboardLastVisitCal;

})(Fa.CView);


},{}],184:[function(require,module,exports){
var ElDashboardMicroBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElDashboardMicroBtn = (function(_super) {
  var init;

  __extends(ElDashboardMicroBtn, _super);

  _.extend(ElDashboardMicroBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElDashboardMicroBtn.DEFAULT_OPTIONS = {
    size: [140, 140],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElDashboardMicroBtn(options) {
    ElDashboardMicroBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.42 * this.options.size[0]) + 'px';
    this.options.textSize = (0.12 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [8, 10, 2, 10]
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="icon-micro"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '<strong>Micro</strong>',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, Fa.EmptyView(), this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElDashboardMicroBtn;

})(Fa.CView);


},{}],185:[function(require,module,exports){
var ElDashboardProfilePic, HRule, Hamburger,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

HRule = require('../common/el.common.horizontal_rule.coffee');

Hamburger = require('../common/el.common.hamburger.coffee');

module.exports = ElDashboardProfilePic = (function(_super) {
  var createDetails, createHamburger, createName, createPicture, init, setClient;

  __extends(ElDashboardProfilePic, _super);

  ElDashboardProfilePic.DEFAULT_OPTIONS = {
    size: 305,
    height: 430,
    nameSize: 27,
    detailSize: 16,
    ringWidth: 13,
    ringColor: 'rgba(255,255,255,0.2)',
    buttonColor: 'rgba(255,255,255,0.7)'
  };

  function ElDashboardProfilePic(options) {
    ElDashboardProfilePic.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer();
    init.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('session_changed:current_session', setClient.bind(this));
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    this.sections = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [2, 10, 4, 4]
    });
    createHamburger.call(this);
    createPicture.call(this);
    createName.call(this);
    createDetails.call(this);
    this.sections.sequenceFrom([this.hamContainer, this.pictureContainer, this.nameContainer, this.detailsContainer]);
    return this.container.add(this.sections);
  };

  setClient = function() {
    var client;
    client = Session.currentClient;
    this.picture.setContent(client.profilePic());
    this.clientName.surface.setContent(client.name);
    this.clientAge.surface.setContent("Age:&nbsp;<strong>" + client.age + " years old</strong>");
    return this.clientDateJoined.surface.setContent("Date Joined:&nbsp;<strong>" + (client.firstVisit()) + "</strong>");
  };

  createHamburger = function() {
    this.hamContainer = new Fa.CContainer();
    this.hamburger = new Hamburger();
    this.hamburger.pipe(this._eventOutput);
    return this.hamContainer.add(this.hamburger);
  };

  createPicture = function() {
    var btnSize, pictureSize, pos, translateX, translateY, upload;
    this.pictureContainer = new Fa.CContainer();
    this.ringBorder = this.options.ringWidth + 'px solid ' + this.options.ringColor;
    pictureSize = 0.65 * this.options.size;
    this.picture = new Fa.ImageSurf({
      content: 'images/profile.png',
      size: [pictureSize, pictureSize],
      properties: {
        backgroundColor: this.options.ringColor,
        border: this.ringBorder,
        borderRadius: '50%'
      }
    });
    btnSize = 0.13 * this.options.size;
    this.addButton = new Fa.Surface({
      size: [true, true],
      content: '<i class="ion-plus-circled"></i>',
      properties: {
        fontSize: btnSize + 'px',
        color: this.options.buttonColor,
        cursor: 'pointer'
      }
    });
    upload = function(imageURI, timestamp) {
      var ft, options, serverURL;
      serverURL = Conf.imageServerURL + '/upload';
      ft = new FileTransfer();
      options = new FileUploadOptions();
      options.fileKey = "file";
      options.fileName = "filename.jpg";
      options.mimeType = "image/jpeg";
      options.chunkedMode = false;
      options.params = {
        timestamp: timestamp,
        client_id: Session.currentClient.Id
      };
      ft.upload(imageURI, serverURL, (function(response) {
        var large_picture, original_picture, sized_picture, square_picture;
        original_picture = JSON.parse(response.response)['original'];
        sized_picture = JSON.parse(response.response)['sized'];
        square_picture = JSON.parse(response.response)['square'];
        large_picture = JSON.parse(response.response)['large'];
        return Session.currentClient.setProfilePicUploaded(original_picture, sized_picture, square_picture, large_picture);
      }), (function(error) {
        alert("Upload failed");
        return console.log(error);
      }), options);
    };
    this.addButton.on('click', (function(_this) {
      return function() {
        var onFail, onSuccess;
        onSuccess = function(imageURI) {
          var photo;
          photo = Session.currentClient.setProfilePicTemp(imageURI);
          this.picture.setContent(imageURI);
          return Fa.Timer.setTimeout(function() {
            return upload(imageURI, photo.timestamp);
          }, 0);
        };
        onFail = function() {
          return console.log('unable to get ImageURI');
        };
        return Camera.getPicture(onSuccess.bind(_this), onFail, {
          quality: 100,
          destinationType: Camera.DestinationType.FILE_URI,
          targetWidth: 1400,
          targetHeight: 1800,
          saveToPhotoAlbum: false,
          allowEdit: false,
          correctOrientation: true
        });
      };
    })(this));
    this.pictureContainer.addToCenter(this.picture);
    translateX = 0.7 * this.options.size;
    translateY = 0.6 * this.options.size;
    pos = Fa.translateBy(translateX, translateY, 0);
    return this.pictureContainer.add(pos).add(this.addButton);
  };

  createName = function() {
    var rows;
    this.nameContainer = new Fa.CContainer();
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 1, 1]
    });
    this.clientName = new Fa.WrappedSurface({
      alignment: 'center',
      size: [true, true],
      content: 'NULL',
      properties: {
        fontSize: this.options.nameSize + 'px',
        color: 'white'
      }
    });
    rows.sequenceFrom([
      new HRule({
        size: [this.options.size, 30]
      }), this.clientName, new HRule({
        size: [this.options.size, 30]
      })
    ]);
    return this.nameContainer.addToCenter(rows);
  };

  createDetails = function() {
    var rows;
    this.detailsContainer = new Fa.CContainer();
    rows = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [8, 10, 10, 8]
    });
    this.clientAge = new Fa.WrappedSurface({
      alignment: 'center',
      size: [true, true],
      content: 'Age:&nbsp;<strong>24 years old</strong>',
      properties: {
        fontSize: this.options.detailSize + 'px',
        color: 'white'
      }
    });
    this.clientDateJoined = new Fa.WrappedSurface({
      alignment: 'center',
      size: [true, true],
      content: 'Date Joined:&nbsp;<strong>12.05.13</strong>',
      properties: {
        fontSize: this.options.detailSize + 'px',
        color: 'white'
      }
    });
    rows.sequenceFrom([Fa.EmptyView(), this.clientAge, this.clientDateJoined, Fa.EmptyView()]);
    return this.detailsContainer.addToCenter(rows);
  };

  return ElDashboardProfilePic;

})(Fa.CView);


},{"../common/el.common.hamburger.coffee":172,"../common/el.common.horizontal_rule.coffee":174}],186:[function(require,module,exports){
var ElDashboardResultBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElDashboardResultBtn = (function(_super) {
  var init;

  __extends(ElDashboardResultBtn, _super);

  _.extend(ElDashboardResultBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElDashboardResultBtn.DEFAULT_OPTIONS = {
    size: [170, 170],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElDashboardResultBtn(options) {
    ElDashboardResultBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.42 * this.options.size[0]) + 'px';
    this.options.textSize = (0.12 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [8, 10, 2, 10]
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="ion-clipboard"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '<strong>Result</strong>',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, Fa.EmptyView(), this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElDashboardResultBtn;

})(Fa.CView);


},{}],187:[function(require,module,exports){
var Elements;

Elements = {
  Common: {
    hamburger: require('./common/el.common.hamburger.coffee'),
    header: require('./common/el.common.header.coffee'),
    hr: require('./common/el.common.horizontal_rule.coffee'),
    backdrop: require('./common/el.common.backdrop.coffee'),
    select_input: require('./common/el.common.select_input.coffee')
  },
  Dashboard: {
    camera_btn: require('./dashboard/el.dashboard.camera_btn.coffee'),
    compare_btn: require('./dashboard/el.dashboard.compare_btn.coffee'),
    micro_btn: require('./dashboard/el.dashboard.micro_btn.coffee'),
    result_btn: require('./dashboard/el.dashboard.result_btn.coffee'),
    first_visit_cal: require('./dashboard/el.dashboard.first_visit_cal.coffee'),
    last_visit_cal: require('./dashboard/el.dashboard.last_visit_cal.coffee'),
    profile_section: require('./dashboard/el.dashboard.profile_section.coffee')
  },
  Snap: {
    after_btn: require('./snap/el.snap.after_btn.coffee'),
    before_btn: require('./snap/el.snap.before_btn.coffee'),
    clear_btn: require('./snap/el.snap.clear_btn.coffee'),
    view_btn: require('./snap/el.snap.view_btn.coffee'),
    update_btn: require('./snap/el.snap.update_btn.coffee'),
    visit_info: require('./snap/el.snap.visit_info.coffee'),
    picture_frame: require('./snap/el.snap.picture_frame.coffee'),
    selector_radio: require('./snap/el.snap.selector_radio.coffee'),
    set_profile_btn: require('./snap/el.snap.set_profile_btn.coffee'),
    browse_header: require('./snap/el.snap.browse_header.coffee')
  },
  Compare: {
    active_numpad_btn: require('./compare/el.compare.active_numpad_btn.coffee'),
    match_btn: require('./compare/el.compare.match_btn.coffee'),
    view_match_btn: require('./compare/el.compare.view_match_btn.coffee'),
    fav_btn: require('./compare/el.compare.fav_btn.coffee')
  },
  Checklist: {
    checker: require('./checklist/el.checklist.checker.coffee'),
    confirm_btn: require('./checklist/el.checklist.confirm_btn.coffee'),
    cancel_btn: require('./checklist/el.checklist.cancel_btn.coffee')
  }
};

module.exports = Elements;


},{"./checklist/el.checklist.cancel_btn.coffee":168,"./checklist/el.checklist.checker.coffee":169,"./checklist/el.checklist.confirm_btn.coffee":170,"./common/el.common.backdrop.coffee":171,"./common/el.common.hamburger.coffee":172,"./common/el.common.header.coffee":173,"./common/el.common.horizontal_rule.coffee":174,"./common/el.common.select_input.coffee":175,"./compare/el.compare.active_numpad_btn.coffee":176,"./compare/el.compare.fav_btn.coffee":177,"./compare/el.compare.match_btn.coffee":178,"./compare/el.compare.view_match_btn.coffee":179,"./dashboard/el.dashboard.camera_btn.coffee":180,"./dashboard/el.dashboard.compare_btn.coffee":181,"./dashboard/el.dashboard.first_visit_cal.coffee":182,"./dashboard/el.dashboard.last_visit_cal.coffee":183,"./dashboard/el.dashboard.micro_btn.coffee":184,"./dashboard/el.dashboard.profile_section.coffee":185,"./dashboard/el.dashboard.result_btn.coffee":186,"./snap/el.snap.after_btn.coffee":188,"./snap/el.snap.before_btn.coffee":189,"./snap/el.snap.browse_header.coffee":190,"./snap/el.snap.clear_btn.coffee":191,"./snap/el.snap.picture_frame.coffee":192,"./snap/el.snap.selector_radio.coffee":193,"./snap/el.snap.set_profile_btn.coffee":194,"./snap/el.snap.update_btn.coffee":195,"./snap/el.snap.view_btn.coffee":196,"./snap/el.snap.visit_info.coffee":197}],188:[function(require,module,exports){
var ElSnapAfterBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapAfterBtn = (function(_super) {
  var init;

  __extends(ElSnapAfterBtn, _super);

  _.extend(ElSnapAfterBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElSnapAfterBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElSnapAfterBtn(options) {
    ElSnapAfterBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.38 * this.options.size[0]) + 'px';
    this.options.textSize = (0.18 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex, iconContainer;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 10, 6]
    });
    iconContainer = new Fa.CContainer();
    this.icon = new Fa.Surface({
      size: [true, true],
      content: '<i class="icon-after"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    iconContainer.add(Fa.translateBy(31, 15, 0)).add(this.icon);
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '<strong>after</strong>',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), iconContainer, this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElSnapAfterBtn;

})(Fa.CView);


},{}],189:[function(require,module,exports){
var ElSnapBeforeBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapBeforeBtn = (function(_super) {
  var init;

  __extends(ElSnapBeforeBtn, _super);

  _.extend(ElSnapBeforeBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElSnapBeforeBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElSnapBeforeBtn(options) {
    ElSnapBeforeBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.38 * this.options.size[0]) + 'px';
    this.options.textSize = (0.18 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex, iconContainer;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 10, 6]
    });
    iconContainer = new Fa.CContainer();
    this.icon = new Fa.Surface({
      size: [true, true],
      content: '<i class="icon-before"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    iconContainer.add(Fa.translateBy(12, 15, 0)).add(this.icon);
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '<strong>before</strong>',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), iconContainer, this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElSnapBeforeBtn;

})(Fa.CView);


},{}],190:[function(require,module,exports){
var ElBrowseHeader,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElBrowseHeader = (function(_super) {
  var init;

  __extends(ElBrowseHeader, _super);

  ElBrowseHeader.DEFAULT_OPTIONS = {
    titleColor: '#fff',
    iconColor: '#fff',
    fontSize: '20px',
    iconSize: '27px',
    backgroundColor: 'rgba(5,5,5,0.4)'
  };

  function ElBrowseHeader(options) {
    ElBrowseHeader.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size, this.options.size],
      properties: {
        backgroundColor: 'rgba(5,5,5,0.4)',
        boxShadow: '0 0 40px #000'
      }
    });
    init.call(this);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.header = new Fa.WrappedSurface({
      alignment: 'left',
      size: [true, true],
      content: "<strong>BROWSE</strong>",
      properties: {
        color: this.options.titleColor,
        fontSize: this.options.fontSize,
        textAlign: 'center'
      }
    });
    this.search = new Fa.WrappedSurface({
      alignment: 'center',
      size: [true, true],
      content: '<i class="ion-search"></i>',
      properties: {
        color: this.options.iconColor,
        fontSize: this.options.iconSize,
        textAlign: 'center',
        cursor: 'pointer'
      }
    });
    this.search.on('click', function() {
      return Dispatcher.emit('browse_snap');
    });
    flex = new Fa.FlexibleLayout({
      ratios: [10, 130, 60]
    });
    flex.sequenceFrom([Fa.EmptyView(), this.header, this.search]);
    return this.container.addToCenter(flex);
  };

  return ElBrowseHeader;

})(Fa.CView);


},{}],191:[function(require,module,exports){
var ElSnapClearBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapClearBtn = (function(_super) {
  var init;

  __extends(ElSnapClearBtn, _super);

  _.extend(ElSnapClearBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElSnapClearBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElSnapClearBtn(options) {
    ElSnapClearBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.60 * this.options.size[0]) + 'px';
    this.options.textSize = (0.15 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 30, 1]
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="icon-clear"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElSnapClearBtn;

})(Fa.CView);


},{}],192:[function(require,module,exports){
var ElSnapPictureFrame,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapPictureFrame = (function(_super) {
  var createBackground, createScrollview, init;

  __extends(ElSnapPictureFrame, _super);

  ElSnapPictureFrame.DEFAULT_OPTIONS = {
    size: [350, 540],
    data: void 0,
    title: 'Frame',
    titleColor: '#fff',
    titleSize: '21px',
    scrollBarHeight: 26,
    scrollViewHeight: 480
  };

  function ElSnapPictureFrame(options) {
    ElSnapPictureFrame.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer;
    this.register();
    init.call(this);
    this.add(this.container);
  }

  ElSnapPictureFrame.prototype.updateFramePosition = function() {
    return _.each(this.images, (function(_this) {
      return function(img, key) {
        if (img.photo.index === Session.currentPhoto.index) {
          return _this.picturesScrollview.moveToIndex(key);
        }
      };
    })(this));
  };

  ElSnapPictureFrame.prototype.updateFramePositionTo = function(timestamp) {
    return _.each(this.images, (function(_this) {
      return function(img, key) {
        if (img.photo.timestamp.toString() === timestamp.toString()) {
          return _this.picturesScrollview.moveToIndex(key, true);
        }
      };
    })(this));
  };

  init = function() {
    this.frame = new Fa.CContainer({
      size: this.options.size
    });
    this.frameContainer = new Fa.CContainer({
      size: [362, 552]
    });
    this.frameContainer.addClass('hidden-border-picture-frame');
    this.frameContainer.addToCenter(this.frame);
    createBackground.call(this);
    createScrollview.call(this);
    return this.container.add(Fa.Pos.top).add(this.frameContainer);
  };

  ElSnapPictureFrame.prototype.register = function() {
    this._eventInput.subscribe(Dispatcher.event);
    return this._eventInput.on('session_changed:current_client', (function(_this) {
      return function() {
        return init.call(_this);
      };
    })(this));
  };

  ElSnapPictureFrame.prototype.deregister = function() {
    return this._eventInput.unsubscribe(Dispatcher.event);
  };

  ElSnapPictureFrame.prototype.addBorder = function() {
    this.frameContainer.addClass('bordered-picture-frame');
    return this.frameContainer.removeClass('hidden-border-picture-frame');
  };

  ElSnapPictureFrame.prototype.removeBorder = function() {
    this.frameContainer.addClass('hidden-border-picture-frame');
    return this.frameContainer.removeClass('bordered-picture-frame');
  };

  ElSnapPictureFrame.prototype.getScrollInstance = function() {
    return this.picturesScrollview;
  };

  createBackground = function() {
    var bg;
    bg = new Fa.Surface({
      properties: {
        backgroundColor: '#000',
        pointerEvents: 'none'
      }
    });
    this.title = new Fa.Surface({
      size: [true, true],
      content: this.options.title,
      properties: {
        color: this.options.titleColor,
        fontSize: this.options.titleSize,
        pointerEvents: 'none'
      }
    });
    this.frame.add(Fa.opaqueBy(0.1)).add(bg);
    return this.frame.addToTop(this.title);
  };

  createScrollview = function() {
    this.picturesScrollview = new Fa.EasyScrollview({
      containerSize: [this.options.size[0], this.options.scrollViewHeight],
      itemSize: [this.options.size[0], this.options.scrollViewHeight],
      direction: 0,
      paginate: true,
      scrollBarThickness: 26,
      id: this.options.id
    });
    this.pictures = [];
    this.images = [];
    _.each(this.options.data, (function(_this) {
      return function(item) {
        var box, flex, image;
        box = new Fa.CContainer({
          size: [_this.options.size[0], _this.options.scrollViewHeight]
        });
        flex = new Fa.FlexibleLayout({
          direction: 1,
          ratios: [25, 1]
        });
        image = new Fa.ImageSurf({
          classes: ['size-350-450'],
          size: [350, 450],
          content: item.photo.sizedPic()
        });
        image.photo = item.photo;
        _this.images.push(image);
        flex.sequenceFrom([image, item.subtitle]);
        box.addToCenter(flex);
        return _this.pictures.push(box);
      };
    })(this));
    this.picturesScrollview.addItems(this.pictures);
    this.frame.addToCenter(this.picturesScrollview);
    return this.frame.addToBottom(this.picturesScrollview.getScrollbarContainer());
  };

  return ElSnapPictureFrame;

})(Fa.CView);


},{}],193:[function(require,module,exports){
var ElSnapSelectorRadio,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapSelectorRadio = (function(_super) {
  var init;

  __extends(ElSnapSelectorRadio, _super);

  ElSnapSelectorRadio.DEFAULT_OPTIONS = {
    size: [void 0, 35],
    iconTranslation: 10,
    textTranslation: 35,
    iconSize: 20,
    textSize: 20,
    color: '#fff',
    isActive: true,
    title: 'title'
  };

  function ElSnapSelectorRadio(options) {
    ElSnapSelectorRadio.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var iconPos, textPos;
    this.icon = new Fa.Surface({
      size: [this.options.iconSize, this.options.iconSize],
      content: '<i class="ion-ios7-circle-filled"></i>',
      properties: {
        fontSize: "" + this.options.iconSize + "px",
        color: this.options.color
      }
    });
    this.text = new Fa.Surface({
      size: [void 0, this.options.textSize],
      content: this.options.title,
      properties: {
        fontSize: "" + this.options.textSize + "px",
        color: this.options.color
      }
    });
    iconPos = new Fa.Modifier({
      align: [0, 0.5],
      origin: [0, 0.5]
    });
    textPos = new Fa.Modifier({
      align: [0, 0.5],
      origin: [0, 0.5]
    });
    this.container.add(iconPos).add(Fa.translateXBy(this.options.iconTranslation)).add(this.icon);
    return this.container.add(textPos).add(Fa.translateXBy(this.options.textTranslation)).add(this.text);
  };

  ElSnapSelectorRadio.prototype.toggleActive = function() {
    if (this.options.isActive) {
      this.options.isActive = false;
      return this.setInactive();
    } else {
      this.options.isActive = true;
      return this.setActive();
    }
  };

  ElSnapSelectorRadio.prototype.setActive = function() {
    this.options.isActive = true;
    return this.icon.setContent('<i class="ion-ios7-circle-filled"></i>');
  };

  ElSnapSelectorRadio.prototype.setInactive = function() {
    this.options.isActive = false;
    return this.icon.setContent('<i class="ion-ios7-circle-outline"></i>');
  };

  return ElSnapSelectorRadio;

})(Fa.CView);


},{}],194:[function(require,module,exports){
var ElSnapSetProfileBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapSetProfileBtn = (function(_super) {
  var init;

  __extends(ElSnapSetProfileBtn, _super);

  _.extend(ElSnapSetProfileBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElSnapSetProfileBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElSnapSetProfileBtn(options) {
    ElSnapSetProfileBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.60 * this.options.size[0]) + 'px';
    this.options.textSize = (0.14 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 30, 1]
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="icon-profile"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElSnapSetProfileBtn;

})(Fa.CView);


},{}],195:[function(require,module,exports){
var ElSnapUpdateBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapUpdateBtn = (function(_super) {
  var init;

  __extends(ElSnapUpdateBtn, _super);

  _.extend(ElSnapUpdateBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElSnapUpdateBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElSnapUpdateBtn(options) {
    ElSnapUpdateBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.55 * this.options.size[0]) + 'px';
    this.options.textSize = (0.15 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [3, 30, 1]
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="icon-update"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElSnapUpdateBtn;

})(Fa.CView);


},{}],196:[function(require,module,exports){
var ElSnapViewBtn,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapViewBtn = (function(_super) {
  var init;

  __extends(ElSnapViewBtn, _super);

  _.extend(ElSnapViewBtn.prototype, Fa.Mixins.toggleable.prototype);

  ElSnapViewBtn.DEFAULT_OPTIONS = {
    size: [100, 100],
    inactiveBackgroundColor: 'rgba(5,5,5, 0.6)',
    inactiveColor: '#ddd',
    activeBackgroundColor: '#f782d1',
    activeColor: '#eee',
    isActive: true
  };

  function ElSnapViewBtn(options) {
    ElSnapViewBtn.__super__.constructor.call(this, options);
    this.options.iconSize = (0.60 * this.options.size[0]) + 'px';
    this.options.textSize = (0.15 * this.options.size[0]) + 'px';
    this.container = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        cursor: 'pointer'
      }
    });
    init.call(this);
    this.container.pipe(this._eventOutput);
    this.addToCenter(this.container);
  }

  init = function() {
    var flex;
    this.button = new Fa.CContainer({
      size: [this.options.size[0], this.options.size[1]],
      properties: {
        backgroundColor: this.options.inactiveBackgroundColor,
        borderRadius: '50%'
      }
    });
    flex = new Fa.FlexibleLayout({
      direction: 1,
      ratios: [1, 30, 1]
    });
    this.icon = new Fa.WrappedSurface({
      size: [true, true],
      content: '<i class="icon-view"></i>',
      properties: {
        fontSize: this.options.iconSize,
        color: this.options.inactiveColor
      }
    });
    this.text = new Fa.WrappedSurface({
      alignment: 'top',
      size: [true, true],
      content: '',
      properties: {
        fontSize: this.options.textSize,
        color: this.options.inactiveColor
      }
    });
    flex.sequenceFrom([Fa.EmptyView(), this.icon, this.text]);
    this.button.addToCenter(flex);
    return this.container.add(this.button);
  };

  return ElSnapViewBtn;

})(Fa.CView);


},{}],197:[function(require,module,exports){
var ElSnapVisitInfo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = ElSnapVisitInfo = (function(_super) {
  var init;

  __extends(ElSnapVisitInfo, _super);

  ElSnapVisitInfo.DEFAULT_OPTIONS = {};

  function ElSnapVisitInfo(options) {
    var error;
    ElSnapVisitInfo.__super__.constructor.call(this, options);
    this.container = new Fa.CContainer({
      properties: {
        boxShadow: 'inset  0  40px 40px -40px #3B3B3B, inset  0 -40px 40px -40px #3B3B3B'
      }
    });
    init.call(this);
    Dispatcher.pipe(this._eventInput);
    this._eventInput.on('session_changed:current_session', this.updateInfo.bind(this));
    this._eventInput.on('snap_current_session_updated', this.updateInfo.bind(this));
    try {
      this.updateInfo.call(this);
    } catch (_error) {
      error = _error;
      console.log(error);
    }
    this.add(this.container);
  }

  ElSnapVisitInfo.prototype.updateInfo = function() {
    var client;
    client = Session.currentClient;
    if (client) {
      return this.info.setContent("<strong>Date Visited:</strong>&nbsp; " + Session.currentClient.sessions[Session.currentSession - 1].date + "<br><strong>Session:</strong>&nbsp; " + Session.currentSession);
    }
  };

  init = function() {
    this.info = new Fa.Surface({
      size: [true, true],
      content: '',
      properties: {
        color: '#26404c',
        fontSize: '17px'
      }
    });
    return this.container.addToCenter(this.info);
  };

  return ElSnapVisitInfo;

})(Fa.CView);


},{}],198:[function(require,module,exports){
var Mixins;

Mixins = {
  toggleable: require('./toggleable.coffee')
};

module.exports = Mixins;


},{"./toggleable.coffee":199}],199:[function(require,module,exports){
var Toggleable;

module.exports = Toggleable = (function() {
  function Toggleable() {}

  Toggleable.prototype.toggleActive = function() {
    if (this.options.isActive) {
      this.options.isActive = false;
      return this.setInactive();
    } else {
      this.options.isActive = true;
      return this.setActive();
    }
  };

  Toggleable.prototype.setActive = function() {
    this.options.isActive = true;
    this.button.setProperties({
      backgroundColor: this.options.activeBackgroundColor
    });
    if (this.icon !== void 0) {
      if (this.icon.surface) {
        this.icon.surface.setProperties({
          color: this.options.activeColor
        });
      } else {
        this.icon.setProperties({
          color: this.options.activeColor
        });
      }
    }
    if (this.text !== void 0) {
      if (this.text.surface) {
        return this.text.surface.setProperties({
          color: this.options.activeColor
        });
      } else {
        return this.text.setProperties({
          color: this.options.activeColor
        });
      }
    }
  };

  Toggleable.prototype.setInactive = function() {
    this.options.isActive = false;
    this.button.setProperties({
      backgroundColor: this.options.inactiveBackgroundColor
    });
    if (this.icon !== void 0) {
      if (this.icon.surface) {
        this.icon.surface.setProperties({
          color: this.options.inactiveColor
        });
      } else {
        this.icon.setProperties({
          color: this.options.inactiveColor
        });
      }
    }
    if (this.text !== void 0) {
      if (this.text.surface) {
        return this.text.surface.setProperties({
          color: this.options.inactiveColor
        });
      } else {
        return this.text.setProperties({
          color: this.options.inactiveColor
        });
      }
    }
  };

  return Toggleable;

})();


},{}]},{},[103])